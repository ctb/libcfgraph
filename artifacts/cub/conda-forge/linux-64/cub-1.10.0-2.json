{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.2",
  "conda_private": false,
  "conda_version": "4.8.5",
  "description": "CUB provides state-of-the-art, reusable software components for every layer of the CUDA\nprogramming model:\n- Parallel primitives\n  - Warp-wide \"collective\" primitives\n    - Cooperative warp-wide prefix scan, reduction, etc.\n    - Safely specialized for each underlying CUDA architecture\n  - Block-wide \"collective\" primitives\n    - Cooperative I/O, sort, scan, reduction, histogram, etc.\n    - Compatible with arbitrary thread block sizes and types\n  - Device-wide primitives\n    - Parallel sort, prefix scan, reduction, histogram, etc.\n    - Compatible with CUDA dynamic parallelism\n- Utilities\n  - Fancy iterators\n  - Thread and thread block I/O\n  - PTX intrinsics\n  - Device, kernel, and storage management\n",
  "dev_url": "https://github.com/thrust/cub",
  "doc_url": "http://nvlabs.github.io/cub/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "rongou",
    "kkraus"
   ]
  },
  "home": "https://github.com/thrust/cub",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE.TXT",
  "root_pkgs": [
   "python_abi 3.7 1_cp37m",
   "anaconda-client 1.7.2 py_0",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "ripgrep 12.1.1 h516909a_0",
   "readline 8.0 he28a2e2_2",
   "clyent 1.2.2 py_1",
   "krb5 1.17.1 hfafb76e_3",
   "libarchive 3.3.3 hddc7a2b_1008",
   "pip 20.2.3 py_0",
   "chardet 3.0.4 py37hc8dfbb8_1007",
   "six 1.15.0 pyh9f0ad1d_0",
   "glob2 0.7 py_0",
   "ca-certificates 2020.6.20 hecda079_0",
   "sqlite 3.33.0 h4cf870e_0",
   "_libgcc_mutex 0.1 conda_forge",
   "psutil 5.7.2 py37h8f50634_0",
   "libcurl 7.71.1 hcdd3856_6",
   "libffi 3.2.1 he1b5a44_1007",
   "libxml2 2.9.10 h68273f3_2",
   "pyrsistent 0.17.3 py37h8f50634_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "cryptography 3.1 py37hb09aad4_0",
   "curl 7.71.1 he644dc0_6",
   "libstdcxx-ng 9.3.0 hdf63c60_16",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "python-libarchive-c 2.9 py37hc8dfbb8_0",
   "pkginfo 1.5.0.1 py_0",
   "idna 2.10 pyh9f0ad1d_0",
   "lz4-c 1.9.2 he1b5a44_3",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "c-ares 1.16.1 h516909a_3",
   "patch 2.7.6 h14c3975_1001",
   "yaml 0.2.5 h516909a_0",
   "python-dateutil 2.8.1 py_0",
   "beautifulsoup4 4.9.1 py_1",
   "bzip2 1.0.8 h516909a_3",
   "conda-package-handling 1.7.0 py37h8f50634_5",
   "libgomp 9.3.0 h24d8f2e_16",
   "python 3.7.8 h6f2ec95_1_cpython",
   "pcre 8.44 he1b5a44_0",
   "libgcc-ng 9.3.0 h24d8f2e_16",
   "su-exec 0.2 h516909a_1002",
   "_openmp_mutex 4.5 1_gnu",
   "ld_impl_linux-64 2.35 h769bd43_9",
   "ruamel_yaml 0.15.80 py37h8f50634_1002",
   "importlib_metadata 1.7.0 0",
   "libnghttp2 1.41.0 h8cfc5f6_2",
   "urllib3 1.25.10 py_0",
   "patchelf 0.11 he1b5a44_0",
   "conda-build 3.20.2 py37hc8dfbb8_0",
   "liblief 0.10.1 he1b5a44_1",
   "soupsieve 2.0.1 py_1",
   "pyyaml 5.3.1 py37h8f50634_0",
   "py-lief 0.10.1 py37h3340039_1",
   "setuptools 49.6.0 py37hc8dfbb8_1",
   "conda 4.8.5 py37hc8dfbb8_1",
   "git 2.28.0 pl526h5e3e691_1",
   "libiconv 1.16 h516909a_0",
   "expat 2.2.9 he1b5a44_2",
   "pytz 2020.1 pyh9f0ad1d_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "tk 8.6.10 hed695b0_0",
   "zipp 3.1.0 py_0",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "tqdm 4.49.0 pyh9f0ad1d_0",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "traitlets 5.0.4 py_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "tini 0.18.0 h14c3975_1001",
   "lzo 2.10 h516909a_1000",
   "pyopenssl 19.1.0 py_1",
   "pycosat 0.6.3 py37h8f50634_1004",
   "zstd 1.4.5 h6597ccf_2",
   "ncurses 6.2 he1b5a44_1",
   "brotlipy 0.7.0 py37h8f50634_1000",
   "perl 5.26.2 h516909a_1006",
   "icu 67.1 he1b5a44_0",
   "libev 4.33 h516909a_1",
   "libssh2 1.9.0 hab1572f_5",
   "nbformat 5.0.7 py_0",
   "cffi 1.14.3 py37h2b28604_0",
   "xz 5.2.5 h516909a_1",
   "ipython_genutils 0.2.0 py_1",
   "zlib 1.2.11 h516909a_1009",
   "requests 2.24.0 pyh9f0ad1d_0",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "markupsafe 1.1.1 py37h8f50634_1",
   "jq 1.6 h14c3975_1000",
   "conda-env 2.6.0 1",
   "shyaml 0.6.1 py_0",
   "conda-forge-ci-setup 3.3.0 py37h71091ce_0",
   "oniguruma 6.9.3 h516909a_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "openssl 1.1.1h h516909a_0"
  ],
  "summary": "CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA\nkernel programming.\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "include/cub/agent/agent_histogram.cuh",
  "include/cub/agent/agent_radix_sort_downsweep.cuh",
  "include/cub/agent/agent_radix_sort_upsweep.cuh",
  "include/cub/agent/agent_reduce.cuh",
  "include/cub/agent/agent_reduce_by_key.cuh",
  "include/cub/agent/agent_rle.cuh",
  "include/cub/agent/agent_scan.cuh",
  "include/cub/agent/agent_segment_fixup.cuh",
  "include/cub/agent/agent_select_if.cuh",
  "include/cub/agent/agent_spmv_orig.cuh",
  "include/cub/agent/single_pass_scan_operators.cuh",
  "include/cub/block/block_adjacent_difference.cuh",
  "include/cub/block/block_discontinuity.cuh",
  "include/cub/block/block_exchange.cuh",
  "include/cub/block/block_histogram.cuh",
  "include/cub/block/block_load.cuh",
  "include/cub/block/block_radix_rank.cuh",
  "include/cub/block/block_radix_sort.cuh",
  "include/cub/block/block_raking_layout.cuh",
  "include/cub/block/block_reduce.cuh",
  "include/cub/block/block_scan.cuh",
  "include/cub/block/block_shuffle.cuh",
  "include/cub/block/block_store.cuh",
  "include/cub/block/specializations/block_histogram_atomic.cuh",
  "include/cub/block/specializations/block_histogram_sort.cuh",
  "include/cub/block/specializations/block_reduce_raking.cuh",
  "include/cub/block/specializations/block_reduce_raking_commutative_only.cuh",
  "include/cub/block/specializations/block_reduce_warp_reductions.cuh",
  "include/cub/block/specializations/block_scan_raking.cuh",
  "include/cub/block/specializations/block_scan_warp_scans.cuh",
  "include/cub/block/specializations/block_scan_warp_scans2.cuh",
  "include/cub/block/specializations/block_scan_warp_scans3.cuh",
  "include/cub/cmake/cub-config-version.cmake",
  "include/cub/cmake/cub-config.cmake",
  "include/cub/config.cuh",
  "include/cub/cub.cuh",
  "include/cub/device/device_histogram.cuh",
  "include/cub/device/device_partition.cuh",
  "include/cub/device/device_radix_sort.cuh",
  "include/cub/device/device_reduce.cuh",
  "include/cub/device/device_run_length_encode.cuh",
  "include/cub/device/device_scan.cuh",
  "include/cub/device/device_segmented_radix_sort.cuh",
  "include/cub/device/device_segmented_reduce.cuh",
  "include/cub/device/device_select.cuh",
  "include/cub/device/device_spmv.cuh",
  "include/cub/device/dispatch/dispatch_histogram.cuh",
  "include/cub/device/dispatch/dispatch_radix_sort.cuh",
  "include/cub/device/dispatch/dispatch_reduce.cuh",
  "include/cub/device/dispatch/dispatch_reduce_by_key.cuh",
  "include/cub/device/dispatch/dispatch_rle.cuh",
  "include/cub/device/dispatch/dispatch_scan.cuh",
  "include/cub/device/dispatch/dispatch_select_if.cuh",
  "include/cub/device/dispatch/dispatch_spmv_orig.cuh",
  "include/cub/grid/grid_barrier.cuh",
  "include/cub/grid/grid_even_share.cuh",
  "include/cub/grid/grid_mapping.cuh",
  "include/cub/grid/grid_queue.cuh",
  "include/cub/host/mutex.cuh",
  "include/cub/iterator/arg_index_input_iterator.cuh",
  "include/cub/iterator/cache_modified_input_iterator.cuh",
  "include/cub/iterator/cache_modified_output_iterator.cuh",
  "include/cub/iterator/constant_input_iterator.cuh",
  "include/cub/iterator/counting_input_iterator.cuh",
  "include/cub/iterator/discard_output_iterator.cuh",
  "include/cub/iterator/tex_obj_input_iterator.cuh",
  "include/cub/iterator/tex_ref_input_iterator.cuh",
  "include/cub/iterator/transform_input_iterator.cuh",
  "include/cub/thread/thread_load.cuh",
  "include/cub/thread/thread_operators.cuh",
  "include/cub/thread/thread_reduce.cuh",
  "include/cub/thread/thread_scan.cuh",
  "include/cub/thread/thread_search.cuh",
  "include/cub/thread/thread_store.cuh",
  "include/cub/util_allocator.cuh",
  "include/cub/util_arch.cuh",
  "include/cub/util_compiler.cuh",
  "include/cub/util_cpp_dialect.cuh",
  "include/cub/util_debug.cuh",
  "include/cub/util_deprecated.cuh",
  "include/cub/util_device.cuh",
  "include/cub/util_macro.cuh",
  "include/cub/util_namespace.cuh",
  "include/cub/util_ptx.cuh",
  "include/cub/util_type.cuh",
  "include/cub/version.cuh",
  "include/cub/warp/specializations/warp_reduce_shfl.cuh",
  "include/cub/warp/specializations/warp_reduce_smem.cuh",
  "include/cub/warp/specializations/warp_scan_shfl.cuh",
  "include/cub/warp/specializations/warp_scan_smem.cuh",
  "include/cub/warp/warp_reduce.cuh",
  "include/cub/warp/warp_scan.cuh"
 ],
 "index": {
  "arch": "x86_64",
  "build": "2",
  "build_number": 2,
  "constrains": [
   "thrust 1.10.0.*"
  ],
  "depends": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "cub",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1600806523824,
  "version": "1.10.0"
 },
 "metadata_version": 1,
 "name": "cub",
 "raw_recipe": "{% set version = \"1.10.0\" %}\n{% set sha256 = \"8531e09f909aa021125cffa70a250761dfc247f960d7a1a12f65e6651ffb6477\" %}\n\npackage:\n  name: cub\n  version: {{ version }}\n\nsource:\n  url: https://github.com/thrust/cub/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: mkdir -p \"$PREFIX\"/include && cp -r cub \"$PREFIX\"/include  # [not win]\n\nrequirements:\n  run_constrained:\n    - thrust {{ version }}.*\n\ntest:\n  commands:\n    - test -e \"$PREFIX\"/include/cub/cub.cuh  # [not win]\n    - if not exist \"%LIBRARY_INC%\"\\cub\\cub.cuh exit 1  # [win]\n\nabout:\n  home: https://github.com/thrust/cub\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.TXT\n  summary: |\n    CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA\n    kernel programming.\n  description: |\n    CUB provides state-of-the-art, reusable software components for every layer of the CUDA\n    programming model:\n    - Parallel primitives\n      - Warp-wide \"collective\" primitives\n        - Cooperative warp-wide prefix scan, reduction, etc.\n        - Safely specialized for each underlying CUDA architecture\n      - Block-wide \"collective\" primitives\n        - Cooperative I/O, sort, scan, reduction, histogram, etc.\n        - Compatible with arbitrary thread block sizes and types\n      - Device-wide primitives\n        - Parallel sort, prefix scan, reduction, histogram, etc.\n        - Compatible with CUDA dynamic parallelism\n    - Utilities\n      - Fancy iterators\n      - Thread and thread block I/O\n      - PTX intrinsics\n      - Device, kernel, and storage management\n  doc_url: http://nvlabs.github.io/cub/\n  dev_url: https://github.com/thrust/cub\n\nextra:\n  recipe-maintainers:\n    - rongou\n    - kkraus\n",
 "rendered_recipe": {
  "about": {
   "description": "CUB provides state-of-the-art, reusable software components for every layer of the CUDA\nprogramming model:\n- Parallel primitives\n  - Warp-wide \"collective\" primitives\n    - Cooperative warp-wide prefix scan, reduction, etc.\n    - Safely specialized for each underlying CUDA architecture\n  - Block-wide \"collective\" primitives\n    - Cooperative I/O, sort, scan, reduction, histogram, etc.\n    - Compatible with arbitrary thread block sizes and types\n  - Device-wide primitives\n    - Parallel sort, prefix scan, reduction, histogram, etc.\n    - Compatible with CUDA dynamic parallelism\n- Utilities\n  - Fancy iterators\n  - Thread and thread block I/O\n  - PTX intrinsics\n  - Device, kernel, and storage management\n",
   "dev_url": "https://github.com/thrust/cub",
   "doc_url": "http://nvlabs.github.io/cub/",
   "home": "https://github.com/thrust/cub",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.TXT",
   "summary": "CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA\nkernel programming.\n"
  },
  "build": {
   "number": "2",
   "script": "mkdir -p \"$PREFIX\"/include && cp -r cub \"$PREFIX\"/include",
   "string": "2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "kkraus",
    "rongou"
   ]
  },
  "package": {
   "name": "cub",
   "version": "1.10.0"
  },
  "requirements": {
   "run_constrained": [
    "thrust 1.10.0.*"
   ]
  },
  "source": {
   "sha256": "8531e09f909aa021125cffa70a250761dfc247f960d7a1a12f65e6651ffb6477",
   "url": "https://github.com/thrust/cub/archive/1.10.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -e \"$PREFIX\"/include/cub/cub.cuh"
   ]
  }
 },
 "version": "1.10.0"
}