{
 "about": {
  "channels": [
   "conda-forge",
   "c4aarch64",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "dev_url": "https://github.com/01org/tbb",
  "doc_url": "https://software.intel.com/en-us/node/506039",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller"
   ]
  },
  "home": "http://www.threadingbuildingblocks.org",
  "identifiers": [],
  "keywords": [],
  "license": "Apache 2.0",
  "license_file": "LICENSE",
  "root_pkgs": [
   "chardet 3.0.4 py37_1003",
   "conda-build 3.18.11 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "icu 64.2 h4c5d2ac_1",
   "tk 8.6.10 hed695b0_0",
   "ncurses 6.1 hf484d3e_1002",
   "ruamel_yaml 0.15.64 py37h7b6447c_0",
   "pyrsistent 0.15.6 py37h516909a_0",
   "six 1.13.0 py37_0",
   "krb5 1.16.3 h6005c1d_1001",
   "wheel 0.33.6 py37_0",
   "ripgrep 11.0.2 h516909a_3",
   "beautifulsoup4 4.8.1 py37_0",
   "libcurl 7.65.3 hda55be3_0",
   "openssl 1.1.1d h516909a_0",
   "jinja2 2.10.3 py_0",
   "anaconda-client 1.7.2 py_0",
   "conda-package-handling 1.6.0 py37h516909a_1",
   "libstdcxx-ng 7.3.0 h5c90dd9_0",
   "traitlets 4.3.3 py37_0",
   "cffi 1.13.2 py37h8022711_0",
   "conda-env 2.6.0 1",
   "clyent 1.2.2 py_1",
   "libffi 3.2.1 h4c5d2ac_1006",
   "git 2.24.0 pl526hce37bd2_0",
   "pytz 2019.3 py_0",
   "pyyaml 5.1.2 py37h516909a_0",
   "pyopenssl 19.0.0 py37_0",
   "importlib_metadata 0.23 py37_0",
   "psutil 5.6.7 py37h516909a_0",
   "libssh2 1.8.2 h22169c7_2",
   "setuptools 42.0.1 py37_0",
   "xz 5.2.4 hda93590_1001",
   "tqdm 4.39.0 py_0",
   "pkginfo 1.5.0.1 py_0",
   "liblief 0.9.0 hf8a498c_1",
   "cryptography 2.8 py37h72c5cf5_0",
   "libgcc-ng 7.3.0 h5c90dd9_0",
   "libiconv 1.15 h6dd45c4_1005",
   "sqlite 3.30.1 h283c62a_0",
   "su-exec 0.2 h14c3975_1001",
   "glob2 0.7 py_0",
   "pycparser 2.19 py37_1",
   "bzip2 1.0.8 h516909a_1",
   "markupsafe 1.1.1 py37h516909a_0",
   "pysocks 1.7.1 py37_0",
   "jsonschema 3.2.0 py37_0",
   "zlib 1.2.11 h516909a_1006",
   "patchelf 0.10 h4c5d2ac_0",
   "curl 7.65.3 hf8cf82a_0",
   "requests 2.22.0 py37_1",
   "jupyter_core 4.6.1 py37_0",
   "idna 2.8 py37_1000",
   "nbformat 4.4.0 py_1",
   "expat 2.2.5 h4c5d2ac_1004",
   "decorator 4.4.1 py_0",
   "python-dateutil 2.8.1 py_0",
   "pcre 8.43 he1b5a44_0",
   "libarchive 3.3.3 hc47fbbf_1007",
   "zstd 1.4.4 h3b9ef0a_1",
   "conda 4.7.12 py37_0",
   "patch 2.7.6 h14c3975_1001",
   "ca-certificates 2019.11.28 hecc5488_0",
   "pycosat 0.6.3 py37h516909a_1002",
   "zipp 0.6.0 py_0",
   "more-itertools 7.2.0 py_0",
   "tini 0.18.0 h14c3975_1001",
   "certifi 2019.11.28 py37_0",
   "python-libarchive-c 2.9 py37_0",
   "attrs 19.3.0 py_0",
   "filelock 3.0.10 py_0",
   "yaml 0.1.7 h14c3975_1001",
   "libxml2 2.9.10 hb54214f_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "readline 8.0 h75b48e3_0",
   "urllib3 1.25.7 py37_0",
   "lzo 2.10 h14c3975_1000",
   "lz4-c 1.8.3 he1b5a44_1001",
   "py-lief 0.9.0 py37he1b5a44_1",
   "asn1crypto 1.2.0 py37_0",
   "python 3.7.3 habb2978_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "soupsieve 1.9.4 py37_0",
   "pip 19.3.1 py37_0",
   "perl 5.26.2 h516909a_1006",
   "click 7.0 py_0",
   "conda-forge-ci-setup 2.5.3 py37_0"
  ],
  "summary": "High level abstract threading library",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "drone",
  "c_compiler": "gcc",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,c4aarch64,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-aarch64"
 },
 "files": [
  "lib/libtbb.so.2",
  "lib/libtbbmalloc.so.2",
  "lib/libtbbmalloc_proxy.so.2"
 ],
 "index": {
  "arch": "aarch64",
  "build": "hc9558a2_1",
  "build_number": 1,
  "depends": [
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0"
  ],
  "license": "Apache 2.0",
  "name": "tbb",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1575073108971,
  "version": "2019.9"
 },
 "metadata_version": 1,
 "name": "tbb",
 "raw_recipe": "{% set version = \"2019.9\" %}\n\n{% set year = version.split('.')[0]|int %}\n{% set update = version.split('.')[1]|int %}\n{% if version.split('.').__len__() == 2 %}\n{%  if update == 0 %}\n{%   set vtag = \"%d\" % year %}\n{%  else %}\n{%   set vtag = \"%d_U%d\" % (year, update) %}\n{%  endif %}\n{% else %}  # have to take into account for sake of the bot\n{%  set vtag = \"malformed_\" + version %}\n{% endif %}\n{% set vinterface = (year-2008)*1000 + update %}  # just guess, does not fit the previous versions before 2018\n\n{% set winfl = '--make-tool=mingw32-make --build-prefix=vc%VS_MAJOR%' %}\n# overriding -MD flag for issue #36\n{% set build = 'python build/build.py --build-args=\"CXXFLAGS= CFLAGS=\" '+winfl %}    # [win]\n{% set build = 'python build/build.py --build-args=\"stdver=c++11 runtime=conda\"' %}  # [unix]\n\npackage:\n  name: tbb\n  version: {{ version }}\n\nsource:\n  fn: tbb{{ vtag }}_oss_src.tgz\n  url: https://github.com/intel/tbb/archive/{{ vtag }}.tar.gz\n  sha256: 15652f5328cf00c576f065e5cd3eaf3317422fe82afb67a9bcec0dc065bd2abe\n\nbuild:\n  number: 1\n  skip: true  # [win and py2k]\n  script_env:\n    - OS    # [win]\n\nrequirements:\n  build:\n    - python *\n    - {{ compiler('cxx') }}\n    - m2w64-make                                         # [win]\n    - make                                               # [unix]\n\ntest:\n  requires:\n    - python *               # any python version is ok for sake of testing of shared libraries\n  commands:\n    - python -c \"import ctypes; assert {{ vinterface }} == ctypes.cdll[r'libtbb.so.2']       ['TBB_runtime_interface_version']()\"  # [linux]\n    - python -c \"import ctypes; assert {{ vinterface }} == ctypes.cdll[r'libtbb${SHLIB_EXT}']['TBB_runtime_interface_version']()\"  # [unix and not linux]\n    - python -c \"import ctypes; assert {{ vinterface }} == ctypes.cdll[r'tbb.dll']           ['TBB_runtime_interface_version']()\"  # [win]\n\noutputs:\n  - name: tbb\n    build:\n      script: {{ build }} --install-libs\n\n  - name: tbb-devel\n    build:\n      script: {{ build }} --no-rebuild --install-devel --install-docs\n      run_exports:\n        # excellent compatibility: https://abi-laboratory.pro/index.php?view=timeline&l=tbb\n        - {{ pin_subpackage('tbb', max_pin=None) }}\n    requirements:\n      build:\n        - python *\n        - {{ compiler('cxx') }}\n        - m2w64-make                                     # [win]\n        - make                                           # [unix]\n        - cmake\n      run:\n        - {{ pin_subpackage('tbb', exact=True) }}        # development package is for specific version of tbb\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - make                                           # [unix]\n        - cmake >=3.13\n      source_files:\n        - examples/test_all/fibonacci\n      commands:\n        - set \"CMAKE_GENERATOR=NMake Makefiles\"          # [win]\n        - cmake -S examples/test_all/fibonacci -B test-bld\n        - cmake --build test-bld\n        - cmake -E env test-bld/fibonacci                # [not win or not py2k]\n\n  - name: tbb4py\n    build:\n      script: {{ build }} --no-rebuild --install-python\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - m2w64-make                                     # [win]\n        - make                                           # [unix]\n        - swig\n      host:\n        - python\n        - {{ pin_subpackage('tbb-devel', exact=True) }}\n      run:\n        - tbb >={{ version }}                            # while python module works with any compatible tbb...\n        - python\n    test:\n      requires:\n        - python\n        - {{ pin_subpackage('tbb', exact=True) }}        # we want to test with this specific tbb package\n      imports:\n        - tbb\n        - TBB\n      commands:\n        - python -m TBB -h\n        - python -m tbb -h\n        - python -m tbb test                             # [not osx]  # XXX fix it\n    about:\n      summary: TBB module for Python\n      license: Apache 2.0\n      dev_url: https://github.com/01org/tbb\n\nabout:\n  home: http://www.threadingbuildingblocks.org\n  license: Apache 2.0\n  license_file: LICENSE\n  summary: High level abstract threading library\n  dev_url: https://github.com/01org/tbb\n  doc_url: https://software.intel.com/en-us/node/506039\n\nextra:\n  recipe-maintainers:\n    - anton-malakhov\n    - jschueller\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://github.com/01org/tbb",
   "doc_url": "https://software.intel.com/en-us/node/506039",
   "home": "http://www.threadingbuildingblocks.org",
   "license": "Apache 2.0",
   "license_file": "LICENSE",
   "summary": "High level abstract threading library"
  },
  "build": {
   "number": "1",
   "script": "python build/build.py --build-args=\"stdver=c++11 runtime=conda\" --install-libs",
   "string": "hc9558a2_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "anton-malakhov",
    "jschueller"
   ]
  },
  "package": {
   "name": "tbb",
   "version": "2019.9"
  },
  "requirements": {
   "build": [
    "binutils_impl_linux-aarch64 2.29.1 hc862510_0",
    "binutils_linux-aarch64 2.29.1 h1dbaa89_14",
    "ca-certificates 2019.11.28 hecc5488_0",
    "gcc_impl_linux-aarch64 7.3.0 h68995b2_0",
    "gcc_linux-aarch64 7.3.0 h98564e2_14",
    "gxx_impl_linux-aarch64 7.3.0 h5c90dd9_0",
    "gxx_linux-aarch64 7.3.0 h98564e2_14",
    "libffi 3.2.1 h4c5d2ac_1006",
    "libgcc-ng 7.3.0 h5c90dd9_0",
    "libstdcxx-ng 7.3.0 h5c90dd9_0",
    "make 4.2.1 h14c3975_2004",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1d h516909a_0",
    "python 3.8.0 heaf0f07_5",
    "readline 8.0 h75b48e3_0",
    "sqlite 3.30.1 h283c62a_0",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.4 hda93590_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "host": [
    "libgcc-ng 7.3.0 h5c90dd9_0",
    "libstdcxx-ng 7.3.0 h5c90dd9_0"
   ],
   "run": [
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0"
   ]
  },
  "source": {
   "fn": "tbb2019_U9_oss_src.tgz",
   "sha256": "15652f5328cf00c576f065e5cd3eaf3317422fe82afb67a9bcec0dc065bd2abe",
   "url": "https://github.com/intel/tbb/archive/2019_U9.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import ctypes; assert 11009 == ctypes.cdll[r'libtbb.so.2']       ['TBB_runtime_interface_version']()\""
   ],
   "requires": [
    "python *"
   ]
  }
 },
 "version": "2019.9"
}