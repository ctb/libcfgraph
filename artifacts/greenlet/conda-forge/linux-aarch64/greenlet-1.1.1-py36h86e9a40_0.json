{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "The greenlet package is a spin-off of Stackless, a version of CPython that\nsupports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently\n(typically in a single or a few OS-level threads) and are synchronized with\ndata exchanges on \"channels\".\n\nA \"greenlet\", on the other hand, is a still more primitive notion of\nmicro-thread with no implicit scheduling; coroutines, in other words. This\nis useful when you want to control exactly when your code runs. You can\nbuild custom scheduled micro-threads on top of greenlet; however, it seems\nthat greenlets are useful on their own as a way to make advanced control\nflow structures. For example, we can recreate generators; the difference\nwith Python's own generators is that our generators can call nested\nfunctions and the nested functions can yield values too. Additionally,\nyou don't need a \"yield\" keyword. See the example in\ntests/test_generator.py.\n\nGreenlets are provided as a C extension module for the regular unmodified\ninterpreter.\n\nGreenlets are lightweight coroutines for in-process concurrent programming.\n",
  "dev_url": "https://github.com/python-greenlet/greenlet",
  "doc_url": "https://greenlet.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "curtisalexander",
    "nicoddemus",
    "xhochy"
   ]
  },
  "home": "https://github.com/python-greenlet/greenlet",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "ipython_genutils 0.2.0 py_1",
   "python 3.8.10 h4f4e160_1_cpython",
   "conda-package-handling 1.7.3 py38h9544abe_0",
   "chardet 4.0.0 py38h2063c64_1",
   "conda 4.10.3 py38h2063c64_0",
   "openssl 1.1.1k hf897c2e_0",
   "_openmp_mutex 4.5 1_gnu",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "glob2 0.7 py_0",
   "yaml 0.2.5 h516909a_0",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "jupyter_core 4.7.1 py38h2063c64_0",
   "git 2.32.0 pl5321h063bab8_0",
   "libarchive 3.5.1 h37be732_2",
   "python-libarchive-c 3.1 py38h2063c64_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "tqdm 4.61.2 pyhd8ed1ab_1",
   "libiconv 1.16 h6dd45c4_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h9544abe_1004",
   "lzo 2.10 h516909a_1000",
   "py-lief 0.11.5 py38h0119ad3_0",
   "icu 68.1 h884eca8_0",
   "zlib 1.2.11 h516909a_1009",
   "c-ares 1.17.1 hf897c2e_1",
   "six 1.16.0 pyh6c4a22f_0",
   "brotlipy 0.7.0 py38h9544abe_1001",
   "tk 8.6.10 ha99a2a3_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "cryptography 3.4.7 py38h06f97cd_0",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "cffi 1.14.6 py38hba996e7_0",
   "perl 5.32.1 0_hf897c2e_perl5",
   "importlib-metadata 4.6.1 py38h2063c64_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "tini 0.18.0 h14c3975_1001",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "pcre2 10.37 h73360fb_0",
   "libstdcxx-ng 11.1.0 h5eeca4d_4",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "libssh2 1.9.0 h1ab2c7b_6",
   "libev 4.33 h516909a_1",
   "clyent 1.2.2 py_1",
   "libxml2 2.9.12 hd674cf7_0",
   "xz 5.2.5 h6dd45c4_1",
   "patch 2.7.6 hf897c2e_1002",
   "bzip2 1.0.8 hf897c2e_4",
   "pyyaml 5.4.1 py38h9544abe_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "pycosat 0.6.3 py38h9544abe_1006",
   "traitlets 5.0.5 py_0",
   "lz4-c 1.9.3 h01db608_0",
   "libcurl 7.78.0 hcafe9da_0",
   "ripgrep 13.0.0 h26d3e4c_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py38h9544abe_0",
   "expat 2.4.1 h3621d8e_0",
   "gettext 0.19.8.1 h4454c44_1005",
   "pysocks 1.7.1 py38h2063c64_3",
   "certifi 2021.5.30 py38h2063c64_0",
   "python_abi 3.8 2_cp38",
   "wheel 0.36.2 pyhd3deb0d_0",
   "libgcc-ng 11.1.0 h3322914_4",
   "libgomp 11.1.0 h3322914_4",
   "su-exec 0.2 h516909a_1002",
   "requests 2.26.0 pyhd8ed1ab_0",
   "setuptools 49.6.0 py38h2063c64_3",
   "patchelf 0.11 h4c5d2ac_0",
   "soupsieve 2.0.1 py_1",
   "conda-build 3.21.4 py38h2063c64_0",
   "idna 3.1 pyhd3deb0d_0",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "libnghttp2 1.43.0 h097699d_0",
   "readline 8.1 h1a49cc3_0",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "krb5 1.19.2 h4f20351_0",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "sqlite 3.36.0 hc164836_0",
   "liblief 0.11.5 h01db608_0",
   "ncurses 6.2 h7fd3ca4_4",
   "psutil 5.8.0 py38h9544abe_1",
   "ca-certificates 2021.5.30 h4fd8a4c_0",
   "zstd 1.5.0 h41fb7a4_0",
   "curl 7.78.0 ha8e03fa_0",
   "libffi 3.3 h884eca8_2",
   "pyrsistent 0.17.3 py38h9544abe_2",
   "oniguruma 6.9.7.1 hf897c2e_0",
   "conda-forge-ci-setup 3.10.1 py38hc086270_0",
   "click 8.0.1 py38h2063c64_0",
   "pip 21.2.3 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "jq 1.6 hb9de7d4_1000"
  ],
  "summary": "Lightweight in-process concurrent programming",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "drone",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "include/python3.6m/greenlet/greenlet.h",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/AUTHORS",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/INSTALLER",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/LICENSE",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/LICENSE.PSF",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/METADATA",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/RECORD",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/REQUESTED",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/WHEEL",
  "lib/python3.6/site-packages/greenlet-1.1.1.dist-info/direct_url.json",
  "lib/python3.6/site-packages/greenlet/__init__.py",
  "lib/python3.6/site-packages/greenlet/_greenlet.cpython-36m-aarch64-linux-gnu.so",
  "lib/python3.6/site-packages/greenlet/greenlet.c",
  "lib/python3.6/site-packages/greenlet/greenlet.h",
  "lib/python3.6/site-packages/greenlet/platform/setup_switch_x64_masm.cmd",
  "lib/python3.6/site-packages/greenlet/platform/switch_aarch64_gcc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_alpha_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_amd64_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_arm32_gcc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_arm32_ios.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_csky_gcc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_m68k_gcc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_mips_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc64_aix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc64_linux.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc_aix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc_linux.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc_macosx.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_ppc_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_riscv_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_s390_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_sparc_sun_gcc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_x32_unix.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_x64_masm.asm",
  "lib/python3.6/site-packages/greenlet/platform/switch_x64_masm.obj",
  "lib/python3.6/site-packages/greenlet/platform/switch_x64_msvc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_x86_msvc.h",
  "lib/python3.6/site-packages/greenlet/platform/switch_x86_unix.h",
  "lib/python3.6/site-packages/greenlet/slp_platformselect.h",
  "lib/python3.6/site-packages/greenlet/tests/__init__.py",
  "lib/python3.6/site-packages/greenlet/tests/_test_extension.c",
  "lib/python3.6/site-packages/greenlet/tests/_test_extension.cpython-36m-aarch64-linux-gnu.so",
  "lib/python3.6/site-packages/greenlet/tests/_test_extension_cpp.cpp",
  "lib/python3.6/site-packages/greenlet/tests/_test_extension_cpp.cpython-36m-aarch64-linux-gnu.so",
  "lib/python3.6/site-packages/greenlet/tests/test_contextvars.py",
  "lib/python3.6/site-packages/greenlet/tests/test_cpp.py",
  "lib/python3.6/site-packages/greenlet/tests/test_extension_interface.py",
  "lib/python3.6/site-packages/greenlet/tests/test_gc.py",
  "lib/python3.6/site-packages/greenlet/tests/test_generator.py",
  "lib/python3.6/site-packages/greenlet/tests/test_generator_nested.py",
  "lib/python3.6/site-packages/greenlet/tests/test_greenlet.py",
  "lib/python3.6/site-packages/greenlet/tests/test_leaks.py",
  "lib/python3.6/site-packages/greenlet/tests/test_stack_saved.py",
  "lib/python3.6/site-packages/greenlet/tests/test_throw.py",
  "lib/python3.6/site-packages/greenlet/tests/test_tracing.py",
  "lib/python3.6/site-packages/greenlet/tests/test_version.py",
  "lib/python3.6/site-packages/greenlet/tests/test_weakref.py"
 ],
 "index": {
  "arch": "aarch64",
  "build": "py36h86e9a40_0",
  "build_number": 0,
  "depends": [
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0",
   "python >=3.6,<3.7.0a0",
   "python_abi 3.6.* *_cp36m"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "greenlet",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1628272752049,
  "version": "1.1.1"
 },
 "metadata_version": 1,
 "name": "greenlet",
 "raw_recipe": "{% set name = \"greenlet\" %}\n{% set version = \"1.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: c0f22774cd8294078bdf7392ac73cf00bfa1e5e0ed644bd064fdabc5f2a2f481\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n  host:\n    - pip\n    - python\n  run:\n    - python\n\ntest:\n  imports:\n    - greenlet\n\nabout:\n  home: https://github.com/python-greenlet/greenlet\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Lightweight in-process concurrent programming\n\n  description: |\n    The greenlet package is a spin-off of Stackless, a version of CPython that\n    supports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently\n    (typically in a single or a few OS-level threads) and are synchronized with\n    data exchanges on \"channels\".\n\n    A \"greenlet\", on the other hand, is a still more primitive notion of\n    micro-thread with no implicit scheduling; coroutines, in other words. This\n    is useful when you want to control exactly when your code runs. You can\n    build custom scheduled micro-threads on top of greenlet; however, it seems\n    that greenlets are useful on their own as a way to make advanced control\n    flow structures. For example, we can recreate generators; the difference\n    with Python's own generators is that our generators can call nested\n    functions and the nested functions can yield values too. Additionally,\n    you don't need a \"yield\" keyword. See the example in\n    tests/test_generator.py.\n\n    Greenlets are provided as a C extension module for the regular unmodified\n    interpreter.\n\n    Greenlets are lightweight coroutines for in-process concurrent programming.\n  doc_url: https://greenlet.readthedocs.io\n  dev_url: https://github.com/python-greenlet/greenlet\n\nextra:\n  recipe-maintainers:\n    - curtisalexander\n    - nicoddemus\n    - xhochy\n",
 "rendered_recipe": {
  "about": {
   "description": "The greenlet package is a spin-off of Stackless, a version of CPython that\nsupports micro-threads called \"tasklets\". Tasklets run pseudo-concurrently\n(typically in a single or a few OS-level threads) and are synchronized with\ndata exchanges on \"channels\".\n\nA \"greenlet\", on the other hand, is a still more primitive notion of\nmicro-thread with no implicit scheduling; coroutines, in other words. This\nis useful when you want to control exactly when your code runs. You can\nbuild custom scheduled micro-threads on top of greenlet; however, it seems\nthat greenlets are useful on their own as a way to make advanced control\nflow structures. For example, we can recreate generators; the difference\nwith Python's own generators is that our generators can call nested\nfunctions and the nested functions can yield values too. Additionally,\nyou don't need a \"yield\" keyword. See the example in\ntests/test_generator.py.\n\nGreenlets are provided as a C extension module for the regular unmodified\ninterpreter.\n\nGreenlets are lightweight coroutines for in-process concurrent programming.\n",
   "dev_url": "https://github.com/python-greenlet/greenlet",
   "doc_url": "https://greenlet.readthedocs.io",
   "home": "https://github.com/python-greenlet/greenlet",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lightweight in-process concurrent programming"
  },
  "build": {
   "number": "0",
   "script": "/drone/src/build_artifacts/greenlet_1628272089674/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol/bin/python -m pip install --no-deps --ignore-installed .",
   "string": "py36h86e9a40_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "curtisalexander",
    "nicoddemus",
    "xhochy"
   ]
  },
  "package": {
   "name": "greenlet",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_0",
    "gcc_impl_linux-aarch64 9.4.0 h603953f_8",
    "gcc_linux-aarch64 9.4.0 h9fa865e_0",
    "gxx_impl_linux-aarch64 9.4.0 h603953f_8",
    "gxx_linux-aarch64 9.4.0 h1e24722_0",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_12",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libgcc-devel_linux-aarch64 9.4.0 h85f5abf_8",
    "libgcc-ng 11.1.0 h3322914_8",
    "libgomp 11.1.0 h3322914_8",
    "libsanitizer 9.4.0 h4d00405_8",
    "libstdcxx-devel_linux-aarch64 9.4.0 h85f5abf_8",
    "libstdcxx-ng 11.1.0 h5eeca4d_8",
    "sysroot_linux-aarch64 2.17 h43d7e78_12"
   ],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2021.5.30 h4fd8a4c_0",
    "certifi 2021.5.30 py36h704843e_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libffi 3.3 h884eca8_2",
    "libgcc-ng 11.1.0 h3322914_8",
    "libgomp 11.1.0 h3322914_8",
    "libstdcxx-ng 11.1.0 h5eeca4d_8",
    "ncurses 6.2 h7fd3ca4_4",
    "openssl 1.1.1k hf897c2e_0",
    "pip 21.2.3 pyhd8ed1ab_0",
    "python 3.6.13 h468538b_0_cpython",
    "python_abi 3.6 2_cp36m",
    "readline 8.1 h1a49cc3_0",
    "setuptools 49.6.0 py36h704843e_3",
    "sqlite 3.36.0 hc164836_0",
    "tk 8.6.10 ha99a2a3_1",
    "wheel 0.36.2 pyhd3deb0d_0",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 h516909a_1009"
   ],
   "run": [
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0",
    "python >=3.6,<3.7.0a0",
    "python_abi 3.6.* *_cp36m"
   ]
  },
  "source": {
   "sha256": "c0f22774cd8294078bdf7392ac73cf00bfa1e5e0ed644bd064fdabc5f2a2f481",
   "url": "https://pypi.io/packages/source/g/greenlet/greenlet-1.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "greenlet"
   ]
  }
 },
 "version": "1.1.1"
}