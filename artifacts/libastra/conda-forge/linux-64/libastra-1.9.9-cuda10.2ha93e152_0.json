{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.2",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "carterbox"
   ]
  },
  "home": "http://www.astra-toolbox.com",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-only",
  "license_file": [
   "COPYING",
   "lib/licenses/rapidxml.txt"
  ],
  "root_pkgs": [
   "git 2.30.2 pl5320h24fefe6_1",
   "libarchive 3.5.1 hccf745f_2",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "xz 5.2.5 h516909a_1",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "curl 7.77.0 hea6ffbf_0",
   "libxml2 2.9.12 h72842e0_0",
   "pcre 8.44 he1b5a44_0",
   "py-lief 0.11.5 py38h709712a_0",
   "patch 2.7.6 h7f98852_1002",
   "idna 2.10 pyh9f0ad1d_0",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "six 1.16.0 pyh6c4a22f_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "zlib 1.2.11 h516909a_1010",
   "tini 0.18.0 h14c3975_1001",
   "requests 2.25.1 pyhd3deb0d_0",
   "libgomp 9.3.0 h2828fa1_19",
   "zstd 1.5.0 ha95c52a_0",
   "lzo 2.10 h516909a_1000",
   "soupsieve 2.0.1 py_1",
   "libgcc-ng 9.3.0 h2828fa1_19",
   "psutil 5.8.0 py38h497a2fe_1",
   "libssh2 1.9.0 ha56f1ee_6",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "libnghttp2 1.43.0 h812cca2_0",
   "perl 5.32.0 h36c2ea0_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "cffi 1.14.5 py38ha65f79e_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "tqdm 4.61.0 pyhd8ed1ab_0",
   "importlib-metadata 4.4.0 py38h578d9bd_0",
   "gettext 0.19.8.1 h0b5b191_1005",
   "urllib3 1.26.5 pyhd8ed1ab_0",
   "patchelf 0.11 he1b5a44_0",
   "python 3.8.10 h49503c6_1_cpython",
   "su-exec 0.2 h516909a_1002",
   "glob2 0.7 py_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "chardet 4.0.0 py38h578d9bd_1",
   "libcurl 7.77.0 h2574ce0_0",
   "libev 4.33 h516909a_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "openssl 1.1.1k h7f98852_0",
   "krb5 1.19.1 hcc1bbae_0",
   "tk 8.6.10 h21135ba_1",
   "libstdcxx-ng 9.3.0 h6de172a_19",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "libffi 3.3 h58526e2_2",
   "bzip2 1.0.8 h7f98852_4",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "clyent 1.2.2 py_1",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "ld_impl_linux-64 2.35.1 hea4e1c9_2",
   "python_abi 3.8 1_cp38",
   "ripgrep 12.1.1 h516909a_1",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "_libgcc_mutex 0.1 conda_forge",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "pytz 2021.1 pyhd8ed1ab_0",
   "c-ares 1.17.1 h7f98852_1",
   "ncurses 6.2 h58526e2_4",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "expat 2.4.1 h9c3ff4c_0",
   "_openmp_mutex 4.5 1_gnu",
   "python-dateutil 2.8.1 py_0",
   "sqlite 3.35.5 h74cdb3f_0",
   "yaml 0.2.5 h516909a_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "certifi 2021.5.30 py38h578d9bd_0",
   "ca-certificates 2021.5.30 ha878542_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "traitlets 5.0.5 py_0",
   "pysocks 1.7.1 py38h578d9bd_3",
   "libedit 3.1.20191231 he28a2e2_2",
   "icu 68.1 h58526e2_0",
   "libiconv 1.16 h516909a_0",
   "setuptools 49.6.0 py38h578d9bd_3",
   "conda 4.10.2 py38h578d9bd_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.9.4 py38hcd7a344_0",
   "pip 21.1.3 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "libastra is a C++ library of high-performance GPU primitives for 2D and 3D tomography.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.74.0",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "10.2",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "quay.io/condaforge/linux-anvil-cuda:10.2",
  "extend_keys": [
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "include/astra/Algorithm.h",
  "include/astra/AlgorithmTypelist.h",
  "include/astra/ArtAlgorithm.h",
  "include/astra/AstraObjectFactory.h",
  "include/astra/AstraObjectManager.h",
  "include/astra/AsyncAlgorithm.h",
  "include/astra/BackProjectionAlgorithm.h",
  "include/astra/CglsAlgorithm.h",
  "include/astra/CompositeGeometryManager.h",
  "include/astra/ConeProjectionGeometry3D.h",
  "include/astra/ConeVecProjectionGeometry3D.h",
  "include/astra/Config.h",
  "include/astra/CudaBackProjectionAlgorithm.h",
  "include/astra/CudaBackProjectionAlgorithm3D.h",
  "include/astra/CudaCglsAlgorithm.h",
  "include/astra/CudaCglsAlgorithm3D.h",
  "include/astra/CudaDartMaskAlgorithm.h",
  "include/astra/CudaDartMaskAlgorithm3D.h",
  "include/astra/CudaDartSmoothingAlgorithm.h",
  "include/astra/CudaDartSmoothingAlgorithm3D.h",
  "include/astra/CudaDataOperationAlgorithm.h",
  "include/astra/CudaEMAlgorithm.h",
  "include/astra/CudaFDKAlgorithm3D.h",
  "include/astra/CudaFilteredBackProjectionAlgorithm.h",
  "include/astra/CudaForwardProjectionAlgorithm.h",
  "include/astra/CudaForwardProjectionAlgorithm3D.h",
  "include/astra/CudaProjector2D.h",
  "include/astra/CudaProjector3D.h",
  "include/astra/CudaReconstructionAlgorithm2D.h",
  "include/astra/CudaRoiSelectAlgorithm.h",
  "include/astra/CudaSartAlgorithm.h",
  "include/astra/CudaSirtAlgorithm.h",
  "include/astra/CudaSirtAlgorithm3D.h",
  "include/astra/DataProjector.h",
  "include/astra/DataProjectorPolicies.h",
  "include/astra/DataProjectorPolicies.inl",
  "include/astra/FanFlatBeamLineKernelProjector2D.h",
  "include/astra/FanFlatBeamLineKernelProjector2D.inl",
  "include/astra/FanFlatBeamStripKernelProjector2D.h",
  "include/astra/FanFlatBeamStripKernelProjector2D.inl",
  "include/astra/FanFlatProjectionGeometry2D.h",
  "include/astra/FanFlatVecProjectionGeometry2D.h",
  "include/astra/Features.h",
  "include/astra/FilteredBackProjectionAlgorithm.h",
  "include/astra/Filters.h",
  "include/astra/Float32Data.h",
  "include/astra/Float32Data2D.h",
  "include/astra/Float32Data3D.h",
  "include/astra/Float32Data3DGPU.h",
  "include/astra/Float32Data3DMemory.h",
  "include/astra/Float32ProjectionData2D.h",
  "include/astra/Float32ProjectionData3D.h",
  "include/astra/Float32ProjectionData3DGPU.h",
  "include/astra/Float32ProjectionData3DMemory.h",
  "include/astra/Float32VolumeData2D.h",
  "include/astra/Float32VolumeData3D.h",
  "include/astra/Float32VolumeData3DGPU.h",
  "include/astra/Float32VolumeData3DMemory.h",
  "include/astra/ForwardProjectionAlgorithm.h",
  "include/astra/Fourier.h",
  "include/astra/GeometryUtil2D.h",
  "include/astra/GeometryUtil3D.h",
  "include/astra/Globals.h",
  "include/astra/Logging.h",
  "include/astra/ParallelBeamBlobKernelProjector2D.h",
  "include/astra/ParallelBeamBlobKernelProjector2D.inl",
  "include/astra/ParallelBeamDistanceDrivenProjector2D.h",
  "include/astra/ParallelBeamDistanceDrivenProjector2D.inl",
  "include/astra/ParallelBeamLineKernelProjector2D.h",
  "include/astra/ParallelBeamLineKernelProjector2D.inl",
  "include/astra/ParallelBeamLinearKernelProjector2D.h",
  "include/astra/ParallelBeamLinearKernelProjector2D.inl",
  "include/astra/ParallelBeamStripKernelProjector2D.h",
  "include/astra/ParallelBeamStripKernelProjector2D.inl",
  "include/astra/ParallelProjectionGeometry2D.h",
  "include/astra/ParallelProjectionGeometry3D.h",
  "include/astra/ParallelVecProjectionGeometry2D.h",
  "include/astra/ParallelVecProjectionGeometry3D.h",
  "include/astra/PlatformDepSystemCode.h",
  "include/astra/PluginAlgorithmFactory.h",
  "include/astra/ProjectionGeometry2D.h",
  "include/astra/ProjectionGeometry3D.h",
  "include/astra/Projector2D.h",
  "include/astra/Projector2DImpl.inl",
  "include/astra/Projector3D.h",
  "include/astra/ProjectorTypelist.h",
  "include/astra/ReconstructionAlgorithm2D.h",
  "include/astra/ReconstructionAlgorithm3D.h",
  "include/astra/SartAlgorithm.h",
  "include/astra/Singleton.h",
  "include/astra/SirtAlgorithm.h",
  "include/astra/SparseMatrix.h",
  "include/astra/SparseMatrixProjectionGeometry2D.h",
  "include/astra/SparseMatrixProjector2D.h",
  "include/astra/SparseMatrixProjector2D.inl",
  "include/astra/TypeList.h",
  "include/astra/Utilities.h",
  "include/astra/Vector3D.h",
  "include/astra/VolumeGeometry2D.h",
  "include/astra/VolumeGeometry3D.h",
  "include/astra/XMLDocument.h",
  "include/astra/XMLNode.h",
  "include/astra/clog.h",
  "include/astra/cuda/2d/algo.h",
  "include/astra/cuda/2d/arith.h",
  "include/astra/cuda/2d/astra.h",
  "include/astra/cuda/2d/cgls.h",
  "include/astra/cuda/2d/darthelper.h",
  "include/astra/cuda/2d/dims.h",
  "include/astra/cuda/2d/em.h",
  "include/astra/cuda/2d/fan_bp.h",
  "include/astra/cuda/2d/fan_fp.h",
  "include/astra/cuda/2d/fbp.h",
  "include/astra/cuda/2d/fft.h",
  "include/astra/cuda/2d/par_bp.h",
  "include/astra/cuda/2d/par_fp.h",
  "include/astra/cuda/2d/sart.h",
  "include/astra/cuda/2d/sirt.h",
  "include/astra/cuda/2d/util.h",
  "include/astra/cuda/3d/algo3d.h",
  "include/astra/cuda/3d/arith3d.h",
  "include/astra/cuda/3d/astra3d.h",
  "include/astra/cuda/3d/cgls3d.h",
  "include/astra/cuda/3d/cone_bp.h",
  "include/astra/cuda/3d/cone_fp.h",
  "include/astra/cuda/3d/darthelper3d.h",
  "include/astra/cuda/3d/dims3d.h",
  "include/astra/cuda/3d/fdk.h",
  "include/astra/cuda/3d/mem3d.h",
  "include/astra/cuda/3d/par3d_bp.h",
  "include/astra/cuda/3d/par3d_fp.h",
  "include/astra/cuda/3d/sirt3d.h",
  "include/astra/cuda/3d/util3d.h",
  "lib/cmake/astra/AstraTargets-release.cmake",
  "lib/cmake/astra/AstraTargets.cmake",
  "lib/libastra.so",
  "lib/libastra.so.1",
  "lib/libastra.so.1.9.9"
 ],
 "index": {
  "arch": "x86_64",
  "build": "cuda10.2ha93e152_0",
  "build_number": 0,
  "depends": [
   "cudatoolkit 10.2|10.2.*",
   "libgcc-ng >=7.5.0",
   "libstdcxx-ng >=7.5.0"
  ],
  "license": "GPL-3.0-only",
  "name": "libastra",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1625048547021,
  "version": "1.9.9"
 },
 "metadata_version": 1,
 "name": "libastra",
 "raw_recipe": "{% set version = \"1.9.9\" %}\n\npackage:\n  name: libastra\n  version: {{ version }}\n\nsource:\n  url: https://github.com/tomopy/astra-toolbox/archive/refs/tags/{{ version }}.tar.gz\n  sha256: fc8c1bc2553cd93e570e1991b44df301c89ce7d9521033672f2d9d421af94beb\n\nbuild:\n  run_exports:\n    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}\n  number: 0\n  string: \"{{ \"cuda\" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\"\n  skip: true  # [(not linux) or cuda_compiler_version == \"None\"]\n  script:\n    cmake\n    -G Ninja\n    -DCMAKE_BUILD_TYPE=Release\n    ${CMAKE_ARGS} ${SRC_DIR} && ninja install\n\nrequirements:\n  build:\n    - {{ compiler('cuda') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - cudatoolkit\n\ntest:\n  requires:\n  # libastra uses header-only from Boost, but the unit tests actually link to libboost_unit_test_framework.so\n    - boost-cpp\n  source_files:\n    - tests/astratest\n  commands:\n    - test -f $PREFIX/lib/libastra${SHLIB_EXT}\n    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.{{ version }}\n    - \"LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest\"\n\nabout:\n  home: http://www.astra-toolbox.com\n  license: GPL-3.0-only\n  license_file:\n    - COPYING\n    - lib/licenses/rapidxml.txt\n  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D\n  and 3D tomography.'\n\nextra:\n  recipe-maintainers:\n    - carterbox\n",
 "rendered_recipe": {
  "about": {
   "home": "http://www.astra-toolbox.com",
   "license": "GPL-3.0-only",
   "license_file": [
    "COPYING",
    "lib/licenses/rapidxml.txt"
   ],
   "summary": "libastra is a C++ library of high-performance GPU primitives for 2D and 3D tomography."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "libastra >=1.9.9,<1.9.10.0a0"
   ],
   "script": "cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ${CMAKE_ARGS} ${SRC_DIR} && ninja install",
   "string": "cuda10.2ha93e152_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "carterbox"
   ]
  },
  "package": {
   "name": "libastra",
   "version": "1.9.9"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35.1 h193b22a_2",
    "binutils_linux-64 2.35 h67ddf6f_30",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.17.1 h7f98852_1",
    "ca-certificates 2021.5.30 ha878542_0",
    "cmake 3.20.5 h8897547_0",
    "expat 2.4.1 h9c3ff4c_0",
    "gcc_impl_linux-64 7.5.0 hda68d29_13",
    "gcc_linux-64 7.5.0 h47867f9_30",
    "gxx_impl_linux-64 7.5.0 h64c220c_13",
    "gxx_linux-64 7.5.0 h555fc39_30",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "krb5 1.19.1 hcc1bbae_0",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libcurl 7.77.0 h2574ce0_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-ng 9.3.0 h2828fa1_19",
    "libgomp 9.3.0 h2828fa1_19",
    "libnghttp2 1.43.0 h812cca2_0",
    "libssh2 1.9.0 ha56f1ee_6",
    "libstdcxx-ng 9.3.0 h6de172a_19",
    "libuv 1.41.0 h7f98852_0",
    "lz4-c 1.9.3 h9c3ff4c_0",
    "ncurses 6.2 h58526e2_4",
    "ninja 1.10.2 h4bd325d_0",
    "nvcc_linux-64 10.2 h7507d65_13",
    "openssl 1.1.1k h7f98852_0",
    "rhash 1.4.1 h7f98852_0",
    "sed 4.8 he412f7d_0",
    "sysroot_linux-64 2.12 h77966d4_13",
    "tk 8.6.10 h21135ba_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010",
    "zstd 1.5.0 ha95c52a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "boost-cpp 1.74.0 h312852a_4",
    "bzip2 1.0.8 h7f98852_4",
    "cudatoolkit 10.2.89 h8f6ccaa_8",
    "icu 68.1 h58526e2_0",
    "libgcc-ng 9.3.0 h2828fa1_19",
    "libgomp 9.3.0 h2828fa1_19",
    "libstdcxx-ng 9.3.0 h6de172a_19",
    "lz4-c 1.9.3 h9c3ff4c_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010",
    "zstd 1.5.0 ha95c52a_0"
   ],
   "run": [
    "cudatoolkit 10.2|10.2.*",
    "libgcc-ng >=7.5.0",
    "libstdcxx-ng >=7.5.0"
   ]
  },
  "source": {
   "sha256": "fc8c1bc2553cd93e570e1991b44df301c89ce7d9521033672f2d9d421af94beb",
   "url": "https://github.com/tomopy/astra-toolbox/archive/refs/tags/1.9.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}",
    "test -f $PREFIX/lib/libastra${SHLIB_EXT}.1.9.9",
    "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest"
   ],
   "requires": [
    "boost-cpp >=1.74.0,<1.74.1.0a0"
   ],
   "source_files": [
    "tests/astratest"
   ]
  }
 },
 "version": "1.9.9"
}