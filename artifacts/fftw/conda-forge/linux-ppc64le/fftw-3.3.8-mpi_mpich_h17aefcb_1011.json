{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "jakirkham",
    "jjhelmus",
    "grlee77",
    "jschueller",
    "beckermr",
    "egpbos"
   ]
  },
  "home": "http://fftw.org",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0",
  "license_file": "COPYING",
  "root_pkgs": [
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "ld_impl_linux-ppc64le 2.34 h0f24833_5",
   "conda 4.8.3 py37hc8dfbb8_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "conda-package-handling 1.6.0 py37h2bd1440_2",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "patch 2.7.6 h14c3975_1001",
   "libxml2 2.9.10 h5e8a603_1",
   "_openmp_mutex 4.5 0_gnu",
   "openssl 1.1.1g h6eb9509_0",
   "setuptools 47.3.1 py37hc8dfbb8_0",
   "decorator 4.4.2 py_0",
   "perl 5.26.2 h6eb9509_1006",
   "zstd 1.4.4 h1dc757f_3",
   "icu 67.1 hb209c28_0",
   "libstdcxx-ng 8.4.0 h822a55f_6",
   "su-exec 0.2 h14c3975_1001",
   "gettext 0.19.8.1 h94c31b8_1002",
   "importlib-metadata 1.6.1 py37hc8dfbb8_0",
   "tk 8.6.10 h151fe60_0",
   "python_abi 3.7 1_cp37m",
   "curl 7.71.0 hfd09b2d_0",
   "readline 8.0 hf8c457e_0",
   "_libgcc_mutex 0.1 conda_forge",
   "ipython_genutils 0.2.0 py_1",
   "tini 0.18.0 h14c3975_1001",
   "libffi 3.2.1 hb209c28_1007",
   "patchelf 0.11 hb209c28_0",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "libiconv 1.15 h6eb9509_1006",
   "python-libarchive-c 2.9 py37_0",
   "pyopenssl 19.1.0 py_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "idna 2.9 py_1",
   "git 2.27.0 pl526h6bae81b_0",
   "requests 2.24.0 pyh9f0ad1d_0",
   "sqlite 3.30.1 hd61ad8c_0",
   "importlib_metadata 1.6.1 0",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "psutil 5.7.0 py37h2bd1440_1",
   "py-lief 0.9.0 py37hb209c28_1",
   "yaml 0.2.5 h6eb9509_0",
   "krb5 1.17.1 hc2f0735_1",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "pyrsistent 0.16.0 py37h2bd1440_0",
   "glob2 0.7 py_0",
   "libcurl 7.71.0 he8386ad_0",
   "zipp 3.1.0 py_0",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "pip 20.1.1 py_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "bzip2 1.0.8 h6eb9509_2",
   "wheel 0.34.2 py_1",
   "lz4-c 1.9.2 hb209c28_1",
   "ncurses 6.1 hf484d3e_1002",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "expat 2.2.9 hb209c28_2",
   "ripgrep 12.1.1 h6eb9509_0",
   "python 3.7.6 cpython_haf90cd5_6",
   "tqdm 4.46.1 pyh9f0ad1d_0",
   "cffi 1.14.0 py37hc54e17a_0",
   "ruamel_yaml 0.15.80 py37h2bd1440_1001",
   "zlib 1.2.11 h6eb9509_1006",
   "attrs 19.3.0 py_0",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "libgomp 8.4.0 hdd5993f_6",
   "nbformat 5.0.6 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "python-dateutil 2.8.1 py_0",
   "cryptography 2.9.2 py37hbd29ff1_0",
   "liblief 0.9.0 h1d591a0_1",
   "xz 5.2.5 h6eb9509_0",
   "libssh2 1.9.0 h0e66b82_2",
   "pytz 2020.1 pyh9f0ad1d_0",
   "pycparser 2.20 py_0",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "libarchive 3.3.3 he6ac854_1008",
   "pyyaml 5.3.1 py37h2bd1440_0",
   "pkginfo 1.5.0.1 py_0",
   "libgcc-ng 8.4.0 hdd5993f_6",
   "markupsafe 1.1.1 py37h2bd1440_1",
   "urllib3 1.25.9 py_0",
   "libedit 3.1.20191231 h01e2fff_0",
   "pcre 8.44 hb209c28_0",
   "lzo 2.10 h14c3975_1000",
   "anaconda-client 1.7.2 py_0",
   "brotlipy 0.7.0 py37h2bd1440_1000",
   "pycosat 0.6.3 py37h2bd1440_1004",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.0.14 py37hc8dfbb8_0"
  ],
  "summary": "The fastest Fourier transform in the west.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "8",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "8",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "mpi": "mpich",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "perl": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "files": [
  "bin/fftw-wisdom",
  "bin/fftw-wisdom-to-conf",
  "bin/fftwf-wisdom",
  "bin/fftwl-wisdom",
  "include/fftw3-mpi.f03",
  "include/fftw3-mpi.h",
  "include/fftw3.f",
  "include/fftw3.f03",
  "include/fftw3.h",
  "include/fftw3l-mpi.f03",
  "include/fftw3l.f03",
  "include/fftw3q.f03",
  "lib/cmake/fftw3/FFTW3Config.cmake",
  "lib/cmake/fftw3/FFTW3ConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3fConfig.cmake",
  "lib/cmake/fftw3/FFTW3fConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3lConfig.cmake",
  "lib/cmake/fftw3/FFTW3lConfigVersion.cmake",
  "lib/libfftw3.a",
  "lib/libfftw3.so",
  "lib/libfftw3.so.3",
  "lib/libfftw3.so.3.5.8",
  "lib/libfftw3_mpi.a",
  "lib/libfftw3_mpi.so",
  "lib/libfftw3_mpi.so.3",
  "lib/libfftw3_mpi.so.3.5.8",
  "lib/libfftw3_omp.a",
  "lib/libfftw3_omp.so",
  "lib/libfftw3_omp.so.3",
  "lib/libfftw3_omp.so.3.5.8",
  "lib/libfftw3_threads.a",
  "lib/libfftw3_threads.so",
  "lib/libfftw3_threads.so.3",
  "lib/libfftw3_threads.so.3.5.8",
  "lib/libfftw3f.a",
  "lib/libfftw3f.so",
  "lib/libfftw3f.so.3",
  "lib/libfftw3f.so.3.5.8",
  "lib/libfftw3f_mpi.a",
  "lib/libfftw3f_mpi.so",
  "lib/libfftw3f_mpi.so.3",
  "lib/libfftw3f_mpi.so.3.5.8",
  "lib/libfftw3f_omp.a",
  "lib/libfftw3f_omp.so",
  "lib/libfftw3f_omp.so.3",
  "lib/libfftw3f_omp.so.3.5.8",
  "lib/libfftw3f_threads.a",
  "lib/libfftw3f_threads.so",
  "lib/libfftw3f_threads.so.3",
  "lib/libfftw3f_threads.so.3.5.8",
  "lib/libfftw3l.a",
  "lib/libfftw3l.so",
  "lib/libfftw3l.so.3",
  "lib/libfftw3l.so.3.5.8",
  "lib/libfftw3l_mpi.a",
  "lib/libfftw3l_mpi.so",
  "lib/libfftw3l_mpi.so.3",
  "lib/libfftw3l_mpi.so.3.5.8",
  "lib/libfftw3l_omp.a",
  "lib/libfftw3l_omp.so",
  "lib/libfftw3l_omp.so.3",
  "lib/libfftw3l_omp.so.3.5.8",
  "lib/libfftw3l_threads.a",
  "lib/libfftw3l_threads.so",
  "lib/libfftw3l_threads.so.3",
  "lib/libfftw3l_threads.so.3.5.8",
  "lib/pkgconfig/fftw3.pc",
  "lib/pkgconfig/fftw3f.pc",
  "lib/pkgconfig/fftw3l.pc",
  "share/info/fftw3.info",
  "share/info/fftw3.info-1",
  "share/info/fftw3.info-2",
  "share/man/man1/fftw-wisdom-to-conf.1",
  "share/man/man1/fftw-wisdom.1",
  "share/man/man1/fftwf-wisdom.1",
  "share/man/man1/fftwl-wisdom.1"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "mpi_mpich_h17aefcb_1011",
  "build_number": 1011,
  "depends": [
   "libgcc-ng >=8.4.0",
   "libgfortran-ng >=8,<9.0a0",
   "mpich >=3.3.2,<3.4.0a0"
  ],
  "license": "GPL-2.0",
  "name": "fftw",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1593090190306,
  "version": "3.3.8"
 },
 "metadata_version": 1,
 "name": "fftw",
 "raw_recipe": "{% set version = \"3.3.8\" %}\n{% set build = 1011 %}\n\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\npackage:\n  name: fftw\n  version: {{ version }}\n\nsource:\n  fn: fftw-{{ version }}.tar.gz\n  url: http://www.fftw.org/fftw-{{ version }}.tar.gz\n  sha256: 6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303\n  patches:\n    - cmake-fftw-version.patch\n    - cmake-pc-install.patch\n\nbuild:\n  # prioritize nompi variant via build number\n  {% if mpi == 'nompi' %}\n  {% set build = build + 100 %}\n  {% endif %}\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    - {{ pin_compatible('fftw', max_pin='x') }}\n  {% if mpi != 'nompi' %}\n    - fftw * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - perl   # [not win]\n    - cmake  # [win]\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - llvm-openmp >=4.0.1  # [osx]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - llvm-openmp >=4.0.1  # [osx]\n    - make\n  run:\n    - llvm-openmp >=4.0.1  # [osx]\n\ntest:\n  requires:\n    {% if c_compiler == 'vs2008' %}\n    - python =2.7\n    {% else %}\n    - python =3.6\n    {% endif %}\n  commands:\n    # Verify library contains Fortran symbols\n    - |                                                 # [not win]\n      strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1  # [not win]\n\n    # Verify existence of library files\n    - test -f ${PREFIX}/lib/libfftw3f.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3.a || exit 1            # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1    # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1       # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1        # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1       # [not win]\n\n    # Verify headers are installed\n    - test -f ${PREFIX}/include/fftw3.h || exit 1           # [not win]\n    - if not exist %LIBRARY_INC%\\\\fftw3.h exit 1            # [win]\n\n    # Verify shared libraries are installed\n    {% set fftw_libs = [\n            \"libfftw3\",\n            \"libfftw3_threads\",\n            \"libfftw3f\",\n            \"libfftw3f_threads\",\n            \"libfftw3l\",\n            \"libfftw3l_threads\",\n    ] %}\n    {% set fftw_omp_libs = [\n            \"libfftw3_omp\",\n            \"libfftw3f_omp\",\n            \"libfftw3l_omp\",\n    ] %}\n    {% set fftw_mpi_libs = [\n            \"libfftw3_mpi\",\n            \"libfftw3f_mpi\",\n            \"libfftw3l_mpi\",\n    ] %}\n\n    {% for lib in fftw_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% for lib in fftw_omp_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% if mpi != 'nompi' %}\n    {% for lib in fftw_mpi_libs %}\n    # you need to link to the mpi libs to load the dll, so we just test\n    # if it exists\n    - test -f ${PREFIX}/lib/{{ lib }}${SHLIB_EXT} || exit 1  # [unix]\n    {% endfor %}\n    {% endif %}\n\n    {% set fftw_libs = [\"fftw3f\", \"fftw3\"] %}\n\n    {% for base in fftw_libs %}\n    - if not exist %LIBRARY_LIB%\\\\{{ base }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\{{ base }}.dll exit 1  # [win]\n    {% endfor %}\n\nabout:\n  home: http://fftw.org\n  license: GPL-2.0\n  license_file: COPYING\n  summary: \"The fastest Fourier transform in the west.\"\n\nextra:\n  recipe-maintainers:\n    - alexbw\n    - jakirkham\n    - jjhelmus\n    - grlee77\n    - jschueller\n    - beckermr\n    - egpbos\n",
 "rendered_recipe": {
  "about": {
   "home": "http://fftw.org",
   "license": "GPL-2.0",
   "license_file": "COPYING",
   "summary": "The fastest Fourier transform in the west."
  },
  "build": {
   "number": "1011",
   "run_exports": [
    "fftw",
    "fftw * mpi_mpich_*"
   ],
   "string": "mpi_mpich_h17aefcb_1011"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "beckermr",
    "egpbos",
    "grlee77",
    "jakirkham",
    "jjhelmus",
    "jschueller"
   ]
  },
  "package": {
   "name": "fftw",
   "version": "3.3.8"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "binutils_impl_linux-ppc64le 2.34 h0f24833_5",
    "binutils_linux-ppc64le 2.34 heaf459e_20",
    "gcc_impl_linux-ppc64le 8.4.0 h8635c71_6",
    "gcc_linux-ppc64le 8.4.0 h96fe1e1_20",
    "gfortran_impl_linux-ppc64le 8.4.0 h822a55f_6",
    "gfortran_linux-ppc64le 8.4.0 h96fe1e1_20",
    "ld_impl_linux-ppc64le 2.34 h0f24833_5",
    "libgcc-ng 8.4.0 hdd5993f_6",
    "libgfortran-ng 8.4.0 h822a55f_6",
    "libgomp 8.4.0 hdd5993f_6",
    "libstdcxx-ng 8.4.0 h822a55f_6",
    "perl 5.26.2 h6eb9509_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "libgcc-ng 8.4.0 hdd5993f_6",
    "libgfortran-ng 8.4.0 h822a55f_6",
    "libgomp 8.4.0 hdd5993f_6",
    "libstdcxx-ng 8.4.0 h822a55f_6",
    "make 4.3 h6eb9509_0",
    "mpi 1.0 mpich",
    "mpich 3.3.2 hc856adb_0"
   ],
   "run": [
    "libgcc-ng >=8.4.0",
    "libgfortran-ng >=8,<9.0a0",
    "mpich >=3.3.2,<3.4.0a0"
   ]
  },
  "source": {
   "fn": "fftw-3.3.8.tar.gz",
   "patches": [
    "cmake-fftw-version.patch",
    "cmake-pc-install.patch"
   ],
   "sha256": "6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303",
   "url": "http://www.fftw.org/fftw-3.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1\n",
    "test -f ${PREFIX}/lib/libfftw3f.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1",
    "test -f ${PREFIX}/include/fftw3.h || exit 1",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_omp${SHLIB_EXT}']\"",
    "test -f ${PREFIX}/lib/libfftw3_mpi${SHLIB_EXT} || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_mpi${SHLIB_EXT} || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_mpi${SHLIB_EXT} || exit 1"
   ],
   "requires": [
    "python =3.6"
   ]
  }
 },
 "version": "3.3.8"
}