{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.3",
  "conda_private": false,
  "conda_version": "4.9.2",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "jakirkham",
    "jjhelmus",
    "grlee77",
    "jschueller",
    "egpbos"
   ]
  },
  "home": "http://fftw.org",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0-or-later",
  "license_file": "COPYING",
  "root_pkgs": [
   "expat 2.2.9 hb209c28_2",
   "chardet 4.0.0 py38hf8b3453_1",
   "py-lief 0.10.1 py38h7f2f977_2",
   "python 3.8.6 h8137939_4_cpython",
   "attrs 20.3.0 pyhd3deb0d_0",
   "psutil 5.8.0 py38h98b8a6f_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "git 2.30.0 pl5320hf6c9d78_0",
   "libarchive 3.5.1 hb8455fb_1",
   "lz4-c 1.9.3 h3b9df90_0",
   "pytz 2020.5 pyhd8ed1ab_0",
   "tk 8.6.10 h38e1d09_1",
   "libgcc-ng 9.3.0 hb998004_17",
   "jsonschema 3.2.0 py_2",
   "brotlipy 0.7.0 py38h3750d88_1001",
   "cryptography 3.3.1 py38h48e7634_1",
   "conda-package-handling 1.7.2 py38h3750d88_0",
   "python_abi 3.8 1_cp38",
   "libstdcxx-ng 9.3.0 h42fc837_17",
   "libxml2 2.9.10 h5b1524f_3",
   "readline 8.0 h41a240f_2",
   "icu 68.1 hea85c5d_0",
   "libgomp 9.3.0 hb998004_17",
   "glob2 0.7 py_0",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "perl 5.32.0 h339bb43_0",
   "sqlite 3.34.0 h961021d_0",
   "patch 2.7.6 h6eb9509_1001",
   "wheel 0.36.2 pyhd3deb0d_0",
   "libcurl 7.71.1 he8386ad_8",
   "jupyter_core 4.7.0 py38hf8b3453_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "krb5 1.17.2 h2004cfc_0",
   "certifi 2020.12.5 py38hf8b3453_1",
   "soupsieve 2.0.1 py_1",
   "libssh2 1.9.0 h0e66b82_5",
   "ripgrep 12.1.1 h6eb9509_1",
   "ca-certificates 2020.12.5 h1084571_0",
   "zlib 1.2.11 h6eb9509_1010",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "nbformat 5.0.8 py_0",
   "yaml 0.2.5 h6eb9509_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "markupsafe 1.1.1 py38h98b8a6f_3",
   "traitlets 5.0.5 py_0",
   "libffi 3.3 hea85c5d_2",
   "pycparser 2.20 pyh9f0ad1d_2",
   "tqdm 4.55.2 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h3750d88_1003",
   "pip 20.3.3 pyhd8ed1ab_0",
   "cffi 1.14.4 py38h0dac770_1",
   "pycosat 0.6.3 py38h98b8a6f_1006",
   "idna 2.10 pyh9f0ad1d_0",
   "urllib3 1.26.2 pyhd8ed1ab_0",
   "liblief 0.10.1 ha4af025_2",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "importlib-metadata 3.4.0 py38hf8b3453_0",
   "xz 5.2.5 h6eb9509_1",
   "gettext 0.19.8.1 hf23c357_1005",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "patchelf 0.11 hb209c28_0",
   "pyyaml 5.3.1 py38h98b8a6f_2",
   "_openmp_mutex 4.5 1_gnu",
   "su-exec 0.2 h6eb9509_1002",
   "_libgcc_mutex 0.1 conda_forge",
   "anaconda-client 1.7.2 py_0",
   "pcre 8.44 hb209c28_0",
   "python-dateutil 2.8.1 py_0",
   "ncurses 6.2 hea85c5d_4",
   "libiconv 1.16 h6eb9509_0",
   "libedit 3.1.20191231 h41a240f_2",
   "ld_impl_linux-ppc64le 2.35.1 ha35d02b_1",
   "zipp 3.4.0 py_0",
   "tini 0.18.0 h14c3975_1001",
   "zstd 1.4.8 h65c4b1a_1",
   "lzo 2.10 h6eb9509_1000",
   "libev 4.33 h6eb9509_1",
   "setuptools 49.6.0 py38hf8b3453_3",
   "libnghttp2 1.41.0 h0eba5ba_2",
   "pyrsistent 0.17.3 py38h98b8a6f_2",
   "ipython_genutils 0.2.0 py_1",
   "openssl 1.1.1i h4e0d66e_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "conda 4.9.2 py38hf8b3453_0",
   "curl 7.71.1 hfd09b2d_8",
   "c-ares 1.17.1 h339bb43_0",
   "clyent 1.2.2 py_1",
   "python-libarchive-c 2.9 py38hf8b3453_2",
   "pysocks 1.7.1 py38hf8b3453_3",
   "jq 1.6 h339bb43_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.6.3 py38h6345821_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-build 3.21.3 py38hf8b3453_0",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.3 h339bb43_0"
  ],
  "summary": "The fastest Fourier transform in the west.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "9",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "mpi": "nompi",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "fortran_compiler_version"
   ]
  ]
 },
 "files": [
  "bin/fftw-wisdom",
  "bin/fftw-wisdom-to-conf",
  "bin/fftwf-wisdom",
  "bin/fftwl-wisdom",
  "include/fftw3.f",
  "include/fftw3.f03",
  "include/fftw3.h",
  "include/fftw3l.f03",
  "include/fftw3q.f03",
  "lib/cmake/fftw3/FFTW3Config.cmake",
  "lib/cmake/fftw3/FFTW3ConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3fConfig.cmake",
  "lib/cmake/fftw3/FFTW3fConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3lConfig.cmake",
  "lib/cmake/fftw3/FFTW3lConfigVersion.cmake",
  "lib/libfftw3.a",
  "lib/libfftw3.so",
  "lib/libfftw3.so.3",
  "lib/libfftw3.so.3.6.9",
  "lib/libfftw3_omp.a",
  "lib/libfftw3_omp.so",
  "lib/libfftw3_omp.so.3",
  "lib/libfftw3_omp.so.3.6.9",
  "lib/libfftw3_threads.a",
  "lib/libfftw3_threads.so",
  "lib/libfftw3_threads.so.3",
  "lib/libfftw3_threads.so.3.6.9",
  "lib/libfftw3f.a",
  "lib/libfftw3f.so",
  "lib/libfftw3f.so.3",
  "lib/libfftw3f.so.3.6.9",
  "lib/libfftw3f_omp.a",
  "lib/libfftw3f_omp.so",
  "lib/libfftw3f_omp.so.3",
  "lib/libfftw3f_omp.so.3.6.9",
  "lib/libfftw3f_threads.a",
  "lib/libfftw3f_threads.so",
  "lib/libfftw3f_threads.so.3",
  "lib/libfftw3f_threads.so.3.6.9",
  "lib/libfftw3l.a",
  "lib/libfftw3l.so",
  "lib/libfftw3l.so.3",
  "lib/libfftw3l.so.3.6.9",
  "lib/libfftw3l_omp.a",
  "lib/libfftw3l_omp.so",
  "lib/libfftw3l_omp.so.3",
  "lib/libfftw3l_omp.so.3.6.9",
  "lib/libfftw3l_threads.a",
  "lib/libfftw3l_threads.so",
  "lib/libfftw3l_threads.so.3",
  "lib/libfftw3l_threads.so.3.6.9",
  "lib/pkgconfig/fftw3.pc",
  "lib/pkgconfig/fftw3f.pc",
  "lib/pkgconfig/fftw3l.pc",
  "share/info/fftw3.info",
  "share/info/fftw3.info-1",
  "share/info/fftw3.info-2",
  "share/man/man1/fftw-wisdom-to-conf.1",
  "share/man/man1/fftw-wisdom.1",
  "share/man/man1/fftwf-wisdom.1",
  "share/man/man1/fftwl-wisdom.1"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "nompi_h60922c4_100",
  "build_number": 100,
  "depends": [
   "libgcc-ng >=9.3.0",
   "libgfortran-ng",
   "libgfortran5 >=9.3.0"
  ],
  "license": "GPL-2.0-or-later",
  "name": "fftw",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1610515144934,
  "version": "3.3.9"
 },
 "metadata_version": 1,
 "name": "fftw",
 "raw_recipe": "{% set version = \"3.3.9\" %}\n{% set build = 0 %}\n\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\npackage:\n  name: fftw\n  version: {{ version }}\n\nsource:\n  fn: fftw-{{ version }}.tar.gz\n  url: http://www.fftw.org/fftw-{{ version }}.tar.gz\n  sha256: bf2c7ce40b04ae811af714deb512510cc2c17b9ab9d6ddcf49fe4487eea7af3d\n\nbuild:\n  # prioritize nompi variant via build number\n  {% if mpi == 'nompi' %}\n  {% set build = build + 100 %}\n  {% endif %}\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    - {{ pin_compatible('fftw', max_pin='x') }}\n  {% if mpi != 'nompi' %}\n    - fftw * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - perl 5.*  # [not win]\n    - cmake  # [win]\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - llvm-openmp >=4.0.1  # [osx]\n    - make      # [unix]\n    - autoconf  # [unix]\n    - automake  # [unix]\n    - gettext   # [unix]\n    - m4        # [unix]\n    - libtool   # [unix]\n    - {{ mpi }}  # [build_platform != target_platform and mpi == 'openmpi']\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - llvm-openmp >=4.0.1  # [osx]\n  run:\n    - llvm-openmp >=4.0.1  # [osx]\n\ntest:\n  requires:\n    - python\n  commands:\n    # Verify library contains Fortran symbols\n    - |                                                 # [not win]\n      strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1  # [not win]\n\n    # Verify existence of library files\n    - test -f ${PREFIX}/lib/libfftw3f.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3.a || exit 1            # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1    # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1       # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1        # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1       # [not win]\n\n    # Verify headers are installed\n    - test -f ${PREFIX}/include/fftw3.h || exit 1           # [not win]\n    - if not exist %LIBRARY_INC%\\\\fftw3.h exit 1            # [win]\n\n    # Verify shared libraries are installed\n    {% set fftw_libs = [\n            \"libfftw3\",\n            \"libfftw3_threads\",\n            \"libfftw3f\",\n            \"libfftw3f_threads\",\n            \"libfftw3l\",\n            \"libfftw3l_threads\",\n    ] %}\n    {% set fftw_omp_libs = [\n            \"libfftw3_omp\",\n            \"libfftw3f_omp\",\n            \"libfftw3l_omp\",\n    ] %}\n    {% set fftw_mpi_libs = [\n            \"libfftw3_mpi\",\n            \"libfftw3f_mpi\",\n            \"libfftw3l_mpi\",\n    ] %}\n\n    {% for lib in fftw_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% for lib in fftw_omp_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% if mpi != 'nompi' %}\n    {% for lib in fftw_mpi_libs %}\n    # you need to link to the mpi libs to load the dll, so we just test\n    # if it exists\n    - test -f ${PREFIX}/lib/{{ lib }}${SHLIB_EXT} || exit 1  # [unix]\n    {% endfor %}\n    {% endif %}\n\n    {% set fftw_libs = [\"fftw3f\", \"fftw3\"] %}\n\n    {% for base in fftw_libs %}\n    - if not exist %LIBRARY_LIB%\\\\{{ base }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\{{ base }}.dll exit 1  # [win]\n    {% endfor %}\n\nabout:\n  home: http://fftw.org\n  license: GPL-2.0-or-later\n  license_file: COPYING\n  summary: \"The fastest Fourier transform in the west.\"\n\nextra:\n  recipe-maintainers:\n    - alexbw\n    - jakirkham\n    - jjhelmus\n    - grlee77\n    - jschueller\n    - egpbos\n",
 "rendered_recipe": {
  "about": {
   "home": "http://fftw.org",
   "license": "GPL-2.0-or-later",
   "license_file": "COPYING",
   "summary": "The fastest Fourier transform in the west."
  },
  "build": {
   "number": "100",
   "run_exports": [
    "fftw"
   ],
   "string": "nompi_h60922c4_100"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "egpbos",
    "grlee77",
    "jakirkham",
    "jjhelmus",
    "jschueller"
   ]
  },
  "package": {
   "name": "fftw",
   "version": "3.3.9"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "autoconf 2.69 pl5320h339bb43_10",
    "automake 1.16.2 pl5320ha3edaa6_3",
    "binutils_impl_linux-ppc64le 2.35.1 h5836da8_1",
    "binutils_linux-ppc64le 2.35 hd8189f2_29",
    "gcc_impl_linux-ppc64le 9.3.0 h8de11e6_17",
    "gcc_linux-ppc64le 9.3.0 h1b213c7_29",
    "gettext 0.19.8.1 hf23c357_1005",
    "gfortran_impl_linux-ppc64le 9.3.0 h5a95607_17",
    "gfortran_linux-ppc64le 9.3.0 h47c6253_29",
    "kernel-headers_linux-ppc64le 3.10.0 hbe0c576_10",
    "ld_impl_linux-ppc64le 2.35.1 ha35d02b_1",
    "libffi 3.3 hea85c5d_2",
    "libgcc-devel_linux-ppc64le 9.3.0 h206f0cf_17",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgfortran5 9.3.0 hf44303d_17",
    "libgomp 9.3.0 hb998004_17",
    "libstdcxx-ng 9.3.0 h42fc837_17",
    "libtool 2.4.6 hea85c5d_1007",
    "m4 1.4.18 h6eb9509_1001",
    "make 4.3 hf817498_1",
    "perl 5.32.0 h339bb43_0",
    "sysroot_linux-ppc64le 2.17 h8b29623_10"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgfortran-ng 9.3.0 hf44303d_17",
    "libgfortran5 9.3.0 hf44303d_17",
    "libgomp 9.3.0 hb998004_17"
   ],
   "run": [
    "libgcc-ng >=9.3.0",
    "libgfortran-ng",
    "libgfortran5 >=9.3.0"
   ]
  },
  "source": {
   "fn": "fftw-3.3.9.tar.gz",
   "sha256": "bf2c7ce40b04ae811af714deb512510cc2c17b9ab9d6ddcf49fe4487eea7af3d",
   "url": "http://www.fftw.org/fftw-3.3.9.tar.gz"
  },
  "test": {
   "commands": [
    "strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1\n",
    "test -f ${PREFIX}/lib/libfftw3f.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1",
    "test -f ${PREFIX}/include/fftw3.h || exit 1",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_omp${SHLIB_EXT}']\""
   ],
   "requires": [
    "python"
   ]
  }
 },
 "version": "3.3.9"
}