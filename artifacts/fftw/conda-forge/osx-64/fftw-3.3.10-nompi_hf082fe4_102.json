{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.7",
  "conda_private": false,
  "conda_version": "4.11.0",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "jakirkham",
    "grlee77",
    "jschueller",
    "egpbos"
   ]
  },
  "home": "http://fftw.org",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0-or-later",
  "license_file": "COPYING",
  "root_pkgs": [
   "libcurl 7.80.0 hf45b732_1",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "jsonschema 4.2.1 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.6 py39h89e85a6_0",
   "conda 4.11.0 py39h6e9494a_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "pygments 2.10.0 pyhd8ed1ab_0",
   "icu 69.1 he49afe7_0",
   "liblief 0.11.5 he49afe7_1",
   "jq 1.6 hc929b4f_1000",
   "importlib-metadata 4.8.2 py39h6e9494a_0",
   "ncurses 6.2 h2e338ed_4",
   "requests 2.26.0 pyhd8ed1ab_1",
   "libmamba 0.18.2 h9ce2d19_0",
   "setuptools 59.4.0 py39h6e9494a_0",
   "future 0.18.2 py39h6e9494a_4",
   "filelock 3.4.0 pyhd8ed1ab_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "libcxx 12.0.1 habf9029_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "boa 0.8.0 pyha770c72_0",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "cryptography 36.0.0 py39h209aa08_0",
   "ruamel.yaml 0.17.17 py39h89e85a6_1",
   "libedit 3.1.20191231 h0678c8f_2",
   "commonmark 0.9.1 py_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "cffi 1.15.0 py39he338e87_0",
   "libiconv 1.16 haf1e3a3_0",
   "rich 10.15.2 py39h6e9494a_0",
   "markupsafe 2.0.1 py39h89e85a6_1",
   "backports 1.0 py_2",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "xz 5.2.5 haf1e3a3_1",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "git 2.34.1 pl5321h9a53687_0",
   "pip 21.3.1 pyhd8ed1ab_0",
   "perl 5.32.1 1_h0d85af4_perl5",
   "prompt-toolkit 3.0.22 pyha770c72_0",
   "cctools 949.0.1 hd9211c8_23",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "curl 7.80.0 hf45b732_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "tk 8.6.11 h5dbffcc_1",
   "chardet 4.0.0 py39h6e9494a_2",
   "ld64_osx-64 530 he8994da_23",
   "charset-normalizer 2.0.8 pyhd8ed1ab_0",
   "mamba 0.18.2 py39ha435c47_0",
   "sqlite 3.37.0 h23a322b_0",
   "krb5 1.19.2 hcfbf3a7_3",
   "click 8.0.3 py39h6e9494a_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "jupyter_core 4.9.1 py39h6e9494a_1",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "libnghttp2 1.43.0 h6f36284_1",
   "libsolv 0.7.19 hcf210ce_5",
   "libxml2 2.9.12 h7e28ab6_1",
   "zstd 1.5.0 h582d3a0_0",
   "python-libarchive-c 3.2 py39h6e9494a_0",
   "psutil 5.8.0 py39h89e85a6_2",
   "libarchive 3.5.2 h2b60450_1",
   "conda-build 3.21.7 py39h6e9494a_0",
   "tapi 1100.0.11 h9ce4665_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "readline 8.1 h05e3726_0",
   "openssl 1.1.1l h0d85af4_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "c-ares 1.18.1 h0d85af4_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "ripgrep 13.0.0 h80d2146_1",
   "conda-package-handling 1.7.3 py39h89e85a6_1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "pyrsistent 0.18.0 py39h89e85a6_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "clyent 1.2.2 py_1",
   "conda-forge-ci-setup 3.17.1 py39hb0a6171_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "libmambapy 0.18.2 py39h2c464dc_0",
   "ca-certificates 2021.10.8 h033912b_0",
   "idna 3.1 pyhd3deb0d_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "pkginfo 1.8.1 pyhd8ed1ab_0",
   "certifi 2021.10.8 py39h6e9494a_1",
   "python 3.9.7 h1248fe1_3_cpython",
   "pysocks 1.7.1 py39h6e9494a_4",
   "pytz 2021.3 pyhd8ed1ab_0",
   "ldid 2.1.2 h6a69015_3",
   "ipython_genutils 0.2.0 py_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "libllvm12 12.0.1 hd011deb_2",
   "typing_extensions 3.10.0.2 pyha770c72_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "prompt_toolkit 3.0.22 hd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tzdata 2021e he74cb21_0",
   "expat 2.4.1 he49afe7_0",
   "libev 4.33 haf1e3a3_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "pyyaml 6.0 py39h89e85a6_3"
  ],
  "summary": "The fastest Fourier transform in the west.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "9",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "llvm_openmp": "11",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "mpi": "nompi",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "osx-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "fortran_compiler_version"
   ]
  ]
 },
 "files": [
  "bin/fftw-wisdom",
  "bin/fftw-wisdom-to-conf",
  "bin/fftwf-wisdom",
  "bin/fftwl-wisdom",
  "include/fftw3.f",
  "include/fftw3.f03",
  "include/fftw3.h",
  "include/fftw3l.f03",
  "include/fftw3q.f03",
  "lib/cmake/fftw3/FFTW3Config.cmake",
  "lib/cmake/fftw3/FFTW3ConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3fConfig.cmake",
  "lib/cmake/fftw3/FFTW3fConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3lConfig.cmake",
  "lib/cmake/fftw3/FFTW3lConfigVersion.cmake",
  "lib/libfftw3.3.dylib",
  "lib/libfftw3.a",
  "lib/libfftw3.dylib",
  "lib/libfftw3_omp.3.dylib",
  "lib/libfftw3_omp.a",
  "lib/libfftw3_omp.dylib",
  "lib/libfftw3_threads.3.dylib",
  "lib/libfftw3_threads.a",
  "lib/libfftw3_threads.dylib",
  "lib/libfftw3f.3.dylib",
  "lib/libfftw3f.a",
  "lib/libfftw3f.dylib",
  "lib/libfftw3f_omp.3.dylib",
  "lib/libfftw3f_omp.a",
  "lib/libfftw3f_omp.dylib",
  "lib/libfftw3f_threads.3.dylib",
  "lib/libfftw3f_threads.a",
  "lib/libfftw3f_threads.dylib",
  "lib/libfftw3l.3.dylib",
  "lib/libfftw3l.a",
  "lib/libfftw3l.dylib",
  "lib/libfftw3l_omp.3.dylib",
  "lib/libfftw3l_omp.a",
  "lib/libfftw3l_omp.dylib",
  "lib/libfftw3l_threads.3.dylib",
  "lib/libfftw3l_threads.a",
  "lib/libfftw3l_threads.dylib",
  "lib/pkgconfig/fftw3.pc",
  "lib/pkgconfig/fftw3f.pc",
  "lib/pkgconfig/fftw3l.pc",
  "share/info/fftw3.info",
  "share/info/fftw3.info-1",
  "share/info/fftw3.info-2",
  "share/man/man1/fftw-wisdom-to-conf.1",
  "share/man/man1/fftw-wisdom.1",
  "share/man/man1/fftwf-wisdom.1",
  "share/man/man1/fftwl-wisdom.1"
 ],
 "index": {
  "arch": "x86_64",
  "build": "nompi_hf082fe4_102",
  "build_number": 102,
  "depends": [
   "libgfortran 5.*",
   "libgfortran5 >=9.3.0",
   "llvm-openmp >=11.1.0"
  ],
  "license": "GPL-2.0-or-later",
  "name": "fftw",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1638652125316,
  "version": "3.3.10"
 },
 "metadata_version": 1,
 "name": "fftw",
 "raw_recipe": "{% set version = \"3.3.10\" %}\n{% set build = 2 %}\n\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\npackage:\n  name: fftw\n  version: {{ version }}\n\nsource:\n  fn: fftw-{{ version }}.tar.gz\n  url: http://www.fftw.org/fftw-{{ version }}.tar.gz\n  sha256: 56c932549852cddcfafdab3820b0200c7742675be92179e59e6215b340e26467\n\nbuild:\n  # prioritize nompi variant via build number\n  {% if mpi == 'nompi' %}\n  {% set build = build + 100 %}\n  {% endif %}\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    - {{ pin_compatible('fftw', max_pin='x') }}\n  {% if mpi != 'nompi' %}\n    - fftw * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - perl 5.*  # [not win]\n    - cmake  # [win]\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - llvm-openmp  # [osx]\n    - make      # [unix]\n    - autoconf  # [unix]\n    - automake  # [unix]\n    - gettext   # [unix]\n    - m4        # [unix]\n    - libtool   # [unix]\n    - {{ mpi }}  # [build_platform != target_platform and mpi == 'openmpi']\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - llvm-openmp  # [osx]\n  run:\n    - llvm-openmp  # [osx]\n\ntest:\n  requires:\n    - python >=3\n  commands:\n    # Verify library contains Fortran symbols\n    - strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1  # [not win]\n\n    # Verify existence of library files\n    - test -f ${PREFIX}/lib/libfftw3f.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3.a || exit 1            # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1    # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1       # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1        # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1       # [not win]\n\n    # Verify headers are installed\n    - test -f ${PREFIX}/include/fftw3.h || exit 1           # [not win]\n    - if not exist %LIBRARY_INC%\\\\fftw3.h exit 1            # [win]\n\n    # Verify shared libraries are installed\n    {% set fftw_libs = [\n            \"libfftw3\",\n            \"libfftw3_threads\",\n            \"libfftw3f\",\n            \"libfftw3f_threads\",\n            \"libfftw3l\",\n            \"libfftw3l_threads\",\n    ] %}\n    {% set fftw_omp_libs = [\n            \"libfftw3_omp\",\n            \"libfftw3f_omp\",\n            \"libfftw3l_omp\",\n    ] %}\n    {% set fftw_mpi_libs = [\n            \"libfftw3_mpi\",\n            \"libfftw3f_mpi\",\n            \"libfftw3l_mpi\",\n    ] %}\n\n    {% for lib in fftw_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% for lib in fftw_omp_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% if mpi != 'nompi' %}\n    {% for lib in fftw_mpi_libs %}\n    # you need to link to the mpi libs to load the dll, so we just test\n    # if it exists\n    - test -f ${PREFIX}/lib/{{ lib }}${SHLIB_EXT} || exit 1  # [unix]\n    {% endfor %}\n    {% endif %}\n\n    {% set fftw_libs = [\"fftw3f\", \"fftw3\"] %}\n\n    {% for base in fftw_libs %}\n    - if not exist %LIBRARY_LIB%\\\\{{ base }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\{{ base }}.dll exit 1  # [win]\n    {% endfor %}\nabout:\n  home: http://fftw.org\n  license: GPL-2.0-or-later\n  license_file: COPYING\n  summary: The fastest Fourier transform in the west.\n\nextra:\n  recipe-maintainers:\n    - alexbw\n    - jakirkham\n    - grlee77\n    - jschueller\n    - egpbos\n",
 "rendered_recipe": {
  "about": {
   "home": "http://fftw.org",
   "license": "GPL-2.0-or-later",
   "license_file": "COPYING",
   "summary": "The fastest Fourier transform in the west."
  },
  "build": {
   "number": "102",
   "run_exports": [
    "fftw"
   ],
   "string": "nompi_hf082fe4_102"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "egpbos",
    "grlee77",
    "jakirkham",
    "jschueller"
   ]
  },
  "package": {
   "name": "fftw",
   "version": "3.3.10"
  },
  "requirements": {
   "build": [
    "autoconf 2.69 pl5321hc0e15e3_11",
    "automake 1.16.5 pl5321h694c41f_0",
    "cctools_osx-64 949.0.1 h6407bdd_23",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hc8532ff_5",
    "clangxx 11.1.0 default_he082bbe_1",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "gettext 0.19.8.1 hd1a6beb_1008",
    "gfortran_impl_osx-64 9.3.0 h9cc0e5e_23",
    "gfortran_osx-64 9.3.0 h18f7dce_15",
    "gmp 6.2.1 h2e338ed_0",
    "isl 0.22.1 hb1e8313_2",
    "ld64_osx-64 530 he8994da_21",
    "ldid 2.1.2 h6a69015_3",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcxx 12.0.1 habf9029_0",
    "libffi 3.4.2 h0d85af4_5",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran-devel_osx-64 9.3.0 h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "libiconv 1.16 haf1e3a3_0",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.1 hd011deb_2",
    "libtool 2.4.6 he49afe7_1008",
    "libzlib 1.2.11 h9173be1_1013",
    "llvm-openmp 11.1.0 hda6cdc1_1",
    "llvm-tools 11.1.0 hd011deb_2",
    "m4 1.4.18 haf1e3a3_1001",
    "make 4.3 h22f3db7_1",
    "mpc 1.2.1 hbb51d92_0",
    "mpfr 4.1.0 h0f52abe_1",
    "perl 5.32.1 1_h0d85af4_perl5",
    "tapi 1100.0.11 h9ce4665_0",
    "zlib 1.2.11 h9173be1_1013"
   ],
   "host": [
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "llvm-openmp 11.1.0 hda6cdc1_1"
   ],
   "run": [
    "libgfortran 5.*",
    "libgfortran5 >=9.3.0",
    "llvm-openmp >=11.1.0"
   ]
  },
  "source": {
   "fn": "fftw-3.3.10.tar.gz",
   "sha256": "56c932549852cddcfafdab3820b0200c7742675be92179e59e6215b340e26467",
   "url": "http://www.fftw.org/fftw-3.3.10.tar.gz"
  },
  "test": {
   "commands": [
    "strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1",
    "test -f ${PREFIX}/include/fftw3.h || exit 1",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_omp${SHLIB_EXT}']\""
   ],
   "requires": [
    "python >=3"
   ]
  }
 },
 "version": "3.3.10"
}