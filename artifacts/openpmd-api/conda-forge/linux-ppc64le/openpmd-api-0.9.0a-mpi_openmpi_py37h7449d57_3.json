{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5, ADIOS and JSON.\nLanguage bindings are provided for C++11 (or newer) and Python 3.\nThis conda-forge package only provides serial I/O, please build from source\nfor MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\nJSON.\n",
  "dev_url": "https://github.com/openPMD/openPMD-api",
  "doc_url": "https://openpmd-api.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ax3l",
    "C0nsultant"
   ]
  },
  "home": "https://www.openPMD.org",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL 3",
  "license_family": "LGPL",
  "license_file": "COPYING.LESSER",
  "root_pkgs": [
   "openssl 1.1.1d h6eb9509_0",
   "libxml2 2.9.10 hc938f6a_0",
   "pyopenssl 19.0.0 py37_0",
   "libiconv 1.15 h6eb9509_1005",
   "pyrsistent 0.15.5 py37h6eb9509_0",
   "_libgcc_mutex 0.1 main",
   "libssh2 1.8.2 h47f401e_2",
   "pcre 8.43 hb209c28_0",
   "zipp 0.6.0 py_0",
   "expat 2.2.5 hb209c28_1004",
   "cffi 1.13.2 py37hd553616_0",
   "libcurl 7.65.3 h8f7db48_0",
   "urllib3 1.25.6 py37_0",
   "conda-build 3.18.11 py37_0",
   "yaml 0.1.7 h14c3975_1001",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py37_0",
   "idna 2.8 py37_1000",
   "icu 64.2 hb209c28_1",
   "tqdm 4.37.0 py_0",
   "decorator 4.4.1 py_0",
   "pycparser 2.19 py37_1",
   "six 1.13.0 py37_0",
   "pysocks 1.7.1 py37_0",
   "filelock 3.0.10 py_0",
   "pyyaml 5.1.2 py37h6eb9509_0",
   "perl 5.26.2 h6eb9509_1006",
   "jupyter_core 4.5.0 py_0",
   "pycosat 0.6.3 py37h6eb9509_1002",
   "zlib 1.2.11 h6eb9509_1006",
   "libffi 3.2.1 hb209c28_1006",
   "conda-package-handling 1.6.0 py37h6eb9509_0",
   "libgcc-ng 8.2.0 h822a55f_2",
   "lz4-c 1.8.3 hb209c28_1001",
   "requests 2.22.0 py37_1",
   "xz 5.2.4 h14c3975_1001",
   "ca-certificates 2019.9.11 hecc5488_0",
   "libstdcxx-ng 8.2.0 h822a55f_1",
   "cryptography 2.8 py37h1905b30_0",
   "gettext 0.19.8.1 h94c31b8_1002",
   "pip 19.3.1 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "glob2 0.7 py_0",
   "setuptools 41.6.0 py37_1",
   "jinja2 2.10.3 py_0",
   "jsonschema 3.1.1 py37_0",
   "bzip2 1.0.8 h6eb9509_1",
   "more-itertools 7.2.0 py_0",
   "python 3.7.3 h4f31140_1",
   "ncurses 6.1 hf484d3e_1002",
   "patch 2.7.6 h14c3975_1001",
   "ripgrep 11.0.2 h6eb9509_3",
   "certifi 2019.9.11 py37_0",
   "lzo 2.10 h14c3975_1000",
   "clyent 1.2.2 py_1",
   "py-lief 0.9.0 py37hb209c28_1",
   "pytz 2019.3 py_0",
   "conda 4.7.12 py37_0",
   "soupsieve 1.9.4 py37_0",
   "readline 8.0 hf8c457e_0",
   "wheel 0.33.6 py37_0",
   "sqlite 3.30.1 hd61ad8c_0",
   "liblief 0.9.0 h1d591a0_1",
   "curl 7.65.3 h60234ee_0",
   "python-libarchive-c 2.9 py37_0",
   "nbformat 4.4.0 py_1",
   "traitlets 4.3.3 py37_0",
   "anaconda-client 1.7.2 py_0",
   "tk 8.6.9 h151fe60_1003",
   "patchelf 0.10 hb209c28_0",
   "python-dateutil 2.8.1 py_0",
   "importlib_metadata 0.23 py37_0",
   "zstd 1.4.0 h738b7fd_0",
   "psutil 5.6.5 py37h6eb9509_0",
   "chardet 3.0.4 py37_1003",
   "markupsafe 1.1.1 py37h6eb9509_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "asn1crypto 1.2.0 py37_0",
   "su-exec 0.2 h14c3975_1001",
   "tini 0.18.0 h14c3975_1001",
   "git 2.23.0 pl526h8f7e40e_2",
   "pkginfo 1.5.0.1 py_0",
   "libarchive 3.3.3 h7cbd177_1005",
   "krb5 1.16.3 hd2bbab6_1001",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "click 7.0 py_0",
   "conda-forge-ci-setup 2.5.3 py37_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "VERBOSE_CM": "VERBOSE=1",
  "c_compiler": "gcc",
  "c_compiler_version": "8",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "8",
  "docker_image": "condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "mpi": "openmpi",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "mpich": "x.x",
   "openmpi": "x.x",
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "files": [
  "include/mpark/variant.hpp",
  "include/openPMD/Dataset.hpp",
  "include/openPMD/Datatype.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1Auxiliary.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1IOHandlerImpl.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ParallelADIOS1IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ParallelADIOS1IOHandlerImpl.hpp",
  "include/openPMD/IO/AbstractFilePosition.hpp",
  "include/openPMD/IO/AbstractIOHandler.hpp",
  "include/openPMD/IO/AbstractIOHandlerHelper.hpp",
  "include/openPMD/IO/AbstractIOHandlerImpl.hpp",
  "include/openPMD/IO/AccessType.hpp",
  "include/openPMD/IO/DummyIOHandler.hpp",
  "include/openPMD/IO/Format.hpp",
  "include/openPMD/IO/HDF5/HDF5Auxiliary.hpp",
  "include/openPMD/IO/HDF5/HDF5FilePosition.hpp",
  "include/openPMD/IO/HDF5/HDF5IOHandler.hpp",
  "include/openPMD/IO/HDF5/HDF5IOHandlerImpl.hpp",
  "include/openPMD/IO/HDF5/ParallelHDF5IOHandler.hpp",
  "include/openPMD/IO/HDF5/ParallelHDF5IOHandlerImpl.hpp",
  "include/openPMD/IO/IOTask.hpp",
  "include/openPMD/IO/JSON/JSONFilePosition.hpp",
  "include/openPMD/IO/JSON/JSONIOHandler.hpp",
  "include/openPMD/IO/JSON/JSONIOHandlerImpl.hpp",
  "include/openPMD/Iteration.hpp",
  "include/openPMD/IterationEncoding.hpp",
  "include/openPMD/Mesh.hpp",
  "include/openPMD/ParticlePatches.hpp",
  "include/openPMD/ParticleSpecies.hpp",
  "include/openPMD/Record.hpp",
  "include/openPMD/RecordComponent.hpp",
  "include/openPMD/Series.hpp",
  "include/openPMD/auxiliary/Filesystem.hpp",
  "include/openPMD/auxiliary/Memory.hpp",
  "include/openPMD/auxiliary/OutOfRangeMsg.hpp",
  "include/openPMD/auxiliary/ShareRaw.hpp",
  "include/openPMD/auxiliary/StringManip.hpp",
  "include/openPMD/auxiliary/Variant.hpp",
  "include/openPMD/backend/Attributable.hpp",
  "include/openPMD/backend/Attribute.hpp",
  "include/openPMD/backend/BaseRecord.hpp",
  "include/openPMD/backend/BaseRecordComponent.hpp",
  "include/openPMD/backend/Container.hpp",
  "include/openPMD/backend/MeshRecordComponent.hpp",
  "include/openPMD/backend/PatchRecord.hpp",
  "include/openPMD/backend/PatchRecordComponent.hpp",
  "include/openPMD/backend/Writable.hpp",
  "include/openPMD/benchmark/mpi/BlockSlicer.hpp",
  "include/openPMD/benchmark/mpi/DatasetFiller.hpp",
  "include/openPMD/benchmark/mpi/MPIBenchmark.hpp",
  "include/openPMD/benchmark/mpi/MPIBenchmarkReport.hpp",
  "include/openPMD/benchmark/mpi/OneDimensionalBlockSlicer.hpp",
  "include/openPMD/benchmark/mpi/RandomDatasetFiller.hpp",
  "include/openPMD/binding/python/Numpy.hpp",
  "include/openPMD/config.hpp",
  "include/openPMD/openPMD.hpp",
  "include/openPMD/version.hpp",
  "lib/cmake/openPMD/Modules/FindADIOS.cmake",
  "lib/cmake/openPMD/openPMDConfig.cmake",
  "lib/cmake/openPMD/openPMDConfigVersion.cmake",
  "lib/cmake/openPMD/openPMDTargets-release.cmake",
  "lib/cmake/openPMD/openPMDTargets.cmake",
  "lib/libopenPMD.ADIOS1.Parallel.so",
  "lib/libopenPMD.ADIOS1.Serial.so",
  "lib/libopenPMD.so",
  "lib/pkgconfig/openPMD.pc",
  "lib/python3.7/site-packages/openpmd_api.cpython-37m-powerpc64le-linux-gnu.so"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "mpi_openmpi_py37h7449d57_3",
  "build_number": 3,
  "depends": [
   "adios * mpi_openmpi_*",
   "blosc",
   "bzip2",
   "hdf5 >=1.10.5,<1.10.6.0a0 mpi_openmpi_*",
   "libgcc-ng >=8.2.0",
   "libstdcxx-ng >=8.2.0",
   "mpi4py",
   "numpy >=1.15.0",
   "openmpi >=4.0,<4.1.0a0",
   "python >=3.7,<3.8.0a0",
   "zlib"
  ],
  "license": "LGPL 3",
  "license_family": "LGPL",
  "name": "openpmd-api",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1573539451044,
  "version": "0.9.0a"
 },
 "metadata_version": 1,
 "name": "openpmd-api",
 "raw_recipe": "{% set name = \"openpmd-api\" %}\n{% set version = \"0.9.0a\" %}\n{% set build = 3 %}\n{% set version_fn = version.replace(\"a\", \"-alpha\") %}\n{% set sha256 = \"2fd84f276453122b89ce66d4467ec162669315be2c75ae45d2a514d7b96a3a42\" %}\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n# prioritize nompi variant via build number\n{% if mpi == 'nompi' %}\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version_fn }}.tar.gz\n  url: https://github.com/openPMD/openPMD-api/archive/{{ version_fn }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: True  # [py27]\n\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi == 'nompi' %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% else %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    # strict runtime dependency on build-time MPI flavor\n    - {{ name }} * {{ mpi_prefix }}_* \n    # https://conda.io/docs/user-guide/tasks/build-packages/variants.html#referencing-subpackages\n    # in 0.X.*, newer minor versions are compatible\n    - {{ pin_subpackage('openpmd-api', min_pin='x.x', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - cmake >=3.11\n  host:\n    - {{ mpi }}  # [mpi != 'nompi'] \n    - python\n    - pybind11 >=2.3.0\n    # need to list hdf5|adios twice to get version pinning from conda_build_config\n    # and build pinning from {{ mpi_prefix }}\n    - adios >=1.13.1                    # [unix]\n    - hdf5  >=1.8.13\n    - adios >=1.13.1 = mpi_{{ mpi }}_*  # [unix and mpi != 'nompi']\n    - hdf5  >=1.8.13 = mpi_{{ mpi }}_*  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - mpi4py     # [mpi != 'nompi']\n    - python\n    - numpy >=1.15.0\n    # FIXME: for some reason warnings about this (ADIOS1 deps)\n    - blosc\n    - zlib\n    - bzip2\n\ntest:\n  imports:\n    - openpmd_api\n  commands:\n    - python -c \"import openpmd_api; print(openpmd_api.__version__);\"\n    - python -c \"import openpmd_api; print(openpmd_api.variants)\"\n    - test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake                     # [unix]\n    - test -f ${PREFIX}/lib/libopenPMD.so                                         # [linux]\n    - otool -L ${PREFIX}/lib/libopenPMD.dylib                                     # [osx]\n    - if exist %LIBRARY_PREFIX%\\bin\\openPMD.dll (exit 0) else (exit 1)            # [win]\n    - otool -L ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.dylib                       # [osx and mpi != 'mpich']\n    - ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so                               # [linux]\n    - if exist %LIBRARY_PREFIX%\\cmake\\openPMDConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://www.openPMD.org\n  license: LGPL 3\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  summary: 'C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files.'\n\n  description: |\n    This library provides a common high-level API for openPMD writing and\n    reading. It provides a common interface to I/O libraries and file formats\n    such as HDF5, ADIOS and JSON.\n    Language bindings are provided for C++11 (or newer) and Python 3.\n    This conda-forge package only provides serial I/O, please build from source\n    for MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\n    JSON.\n  doc_url: https://openpmd-api.readthedocs.io\n  dev_url: https://github.com/openPMD/openPMD-api\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - C0nsultant\n",
 "rendered_recipe": {
  "about": {
   "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5, ADIOS and JSON.\nLanguage bindings are provided for C++11 (or newer) and Python 3.\nThis conda-forge package only provides serial I/O, please build from source\nfor MPI parallel I/O on HPC systems. Window support is limited to HDF5 and\nJSON.\n",
   "dev_url": "https://github.com/openPMD/openPMD-api",
   "doc_url": "https://openpmd-api.readthedocs.io",
   "home": "https://www.openPMD.org",
   "license": "LGPL 3",
   "license_family": "LGPL",
   "license_file": "COPYING.LESSER",
   "summary": "C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files."
  },
  "build": {
   "number": "3",
   "run_exports": [
    "openpmd-api * mpi_openmpi_*",
    "openpmd-api >=0.9,<0.10.0a0"
   ],
   "string": "mpi_openmpi_py37h7449d57_3"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "C0nsultant",
    "ax3l"
   ]
  },
  "package": {
   "name": "openpmd-api",
   "version": "0.9.0a"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 main",
    "binutils_impl_linux-ppc64le 2.31.1 h37cdf52_2",
    "binutils_linux-ppc64le 2.31.1 he53550c_12",
    "bzip2 1.0.8 h6eb9509_1",
    "ca-certificates 2019.9.11 hecc5488_0",
    "cmake 3.15.5 hd143910_0",
    "curl 7.65.3 h60234ee_0",
    "expat 2.2.5 hb209c28_1004",
    "gcc_impl_linux-ppc64le 8.2.0 he01c8ba_1",
    "gcc_linux-ppc64le 8.2.0 h9f3bcec_12",
    "gxx_impl_linux-ppc64le 8.2.0 h822a55f_1",
    "gxx_linux-ppc64le 8.2.0 h9f3bcec_12",
    "krb5 1.16.3 hd2bbab6_1001",
    "libcurl 7.65.3 h8f7db48_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 8.2.0 h822a55f_2",
    "libssh2 1.8.2 h47f401e_2",
    "libstdcxx-ng 8.2.0 h822a55f_1",
    "libuv 1.33.1 h6eb9509_0",
    "make 4.2.1 h14c3975_2004",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1d h6eb9509_0",
    "rhash 1.3.6 h14c3975_1001",
    "tk 8.6.9 h151fe60_1003",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h6eb9509_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 main",
    "adios 1.13.1 mpi_openmpi_hd9e7268_1018",
    "blosc 1.17.0 hb209c28_1",
    "bzip2 1.0.8 h6eb9509_1",
    "ca-certificates 2019.9.11 hecc5488_0",
    "hdf5 1.10.5 mpi_openmpi_h168f69e_1004",
    "libffi 3.2.1 hb209c28_1006",
    "libgcc-ng 8.2.0 h822a55f_2",
    "libgfortran-ng 8.2.0 h822a55f_1",
    "libstdcxx-ng 8.2.0 h822a55f_1",
    "mpi 1.0 openmpi",
    "ncurses 6.1 hf484d3e_1002",
    "openmpi 4.0.1 hcbf1d47_2",
    "openssl 1.1.1d h6eb9509_0",
    "pybind11 2.4.3 py37h1bb5118_0",
    "python 3.7.3 h4f31140_1",
    "readline 8.0 hf8c457e_0",
    "sqlite 3.30.1 hd61ad8c_0",
    "tk 8.6.9 h151fe60_1003",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h6eb9509_1006"
   ],
   "run": [
    "adios * mpi_openmpi_*",
    "blosc",
    "bzip2",
    "hdf5 >=1.10.5,<1.10.6.0a0 mpi_openmpi_*",
    "libgcc-ng >=8.2.0",
    "libstdcxx-ng >=8.2.0",
    "mpi4py",
    "numpy >=1.15.0",
    "openmpi >=4.0,<4.1.0a0",
    "openmpi >=4.0,<4.1.0a0",
    "python >=3.7,<3.8.0a0",
    "zlib"
   ]
  },
  "source": {
   "fn": "0.9.0-alpha.tar.gz",
   "sha256": "2fd84f276453122b89ce66d4467ec162669315be2c75ae45d2a514d7b96a3a42",
   "url": "https://github.com/openPMD/openPMD-api/archive/0.9.0-alpha.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import openpmd_api; print(openpmd_api.__version__);\"",
    "python -c \"import openpmd_api; print(openpmd_api.variants)\"",
    "test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake",
    "test -f ${PREFIX}/lib/libopenPMD.so",
    "ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so"
   ],
   "imports": [
    "openpmd_api"
   ]
  }
 },
 "version": "0.9.0a"
}