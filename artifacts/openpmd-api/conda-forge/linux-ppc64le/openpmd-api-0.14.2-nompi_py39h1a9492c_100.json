{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5, ADIOS1, ADIOS2, and JSON.\nLanguage bindings are provided for C++11 (or newer) and Python 3.\nThis conda-forge package provides serial and MPI-parallel I/O. Windows\nsupport is limited to serial versions of HDF5, ADIOS2 and JSON.\n",
  "dev_url": "https://github.com/openPMD/openPMD-api",
  "doc_url": "https://openpmd-api.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ax3l",
    "franzpoeschel"
   ]
  },
  "home": "https://www.openPMD.org",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "license_file": "COPYING.LESSER",
  "root_pkgs": [
   "xz 5.2.5 h6eb9509_1",
   "patch 2.7.6 h4e0d66e_1002",
   "libxml2 2.9.12 h5b1524f_0",
   "liblief 0.11.5 h3b9df90_0",
   "pyrsistent 0.17.3 py38h98b8a6f_2",
   "pycparser 2.20 pyh9f0ad1d_2",
   "python 3.8.10 h82ac395_1_cpython",
   "libgcc-ng 11.1.0 h16e2c27_4",
   "py-lief 0.11.5 py38hfdc2fcd_0",
   "ncurses 6.2 hea85c5d_4",
   "libssh2 1.9.0 ha5a9321_6",
   "_openmp_mutex 4.5 1_gnu",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 h6eb9509_0",
   "git 2.32.0 pl5321h29e2a4d_0",
   "tqdm 4.61.2 pyhd8ed1ab_1",
   "importlib-metadata 4.6.1 py38hf8b3453_0",
   "libedit 3.1.20191231 h41a240f_2",
   "su-exec 0.2 h6eb9509_1002",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "readline 8.1 h5c45dff_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "soupsieve 2.0.1 py_1",
   "lzo 2.10 h6eb9509_1000",
   "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
   "zlib 1.2.11 h6eb9509_1010",
   "bzip2 1.0.8 h4e0d66e_4",
   "expat 2.4.1 h3b9df90_0",
   "conda 4.10.3 py38hf8b3453_0",
   "conda-build 3.21.4 py38hf8b3453_0",
   "markupsafe 2.0.1 py38h98b8a6f_0",
   "libcurl 7.78.0 he415e40_0",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "tini 0.18.0 h14c3975_1001",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "python-libarchive-c 3.1 py38hf8b3453_0",
   "tk 8.6.10 h38e1d09_1",
   "requests 2.26.0 pyhd8ed1ab_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "gettext 0.19.8.1 hf23c357_1005",
   "zstd 1.5.0 h65c4b1a_0",
   "libgomp 11.1.0 h16e2c27_4",
   "pcre2 10.37 h32277c3_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "certifi 2021.5.30 py38hf8b3453_0",
   "psutil 5.8.0 py38h98b8a6f_1",
   "cffi 1.14.6 py38h0dac770_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "cryptography 3.4.7 py38h257c4d3_0",
   "libnghttp2 1.43.0 h42039ad_0",
   "jupyter_core 4.7.1 py38hf8b3453_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "perl 5.32.1 0_h4e0d66e_perl5",
   "pyyaml 5.4.1 py38h98b8a6f_0",
   "curl 7.78.0 h57b39c4_0",
   "sqlite 3.36.0 h4e2196e_0",
   "libstdcxx-ng 11.1.0 h8186cfa_4",
   "patchelf 0.11 hb209c28_0",
   "chardet 4.0.0 py38hf8b3453_1",
   "libev 4.33 h6eb9509_1",
   "lz4-c 1.9.3 h3b9df90_0",
   "pysocks 1.7.1 py38hf8b3453_3",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h98b8a6f_1004",
   "c-ares 1.17.1 h4e0d66e_1",
   "six 1.16.0 pyh6c4a22f_0",
   "libffi 3.3 hea85c5d_2",
   "yaml 0.2.5 h6eb9509_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "brotlipy 0.7.0 py38h98b8a6f_1001",
   "pycosat 0.6.3 py38h98b8a6f_1006",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libarchive 3.5.1 h3281d6a_2",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "clyent 1.2.2 py_1",
   "idna 3.1 pyhd3deb0d_0",
   "ipython_genutils 0.2.0 py_1",
   "conda-package-handling 1.7.3 py38h98b8a6f_0",
   "icu 68.1 hea85c5d_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "setuptools 49.6.0 py38hf8b3453_3",
   "ripgrep 13.0.0 ha57a3a6_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "ca-certificates 2021.5.30 h1084571_0",
   "_libgcc_mutex 0.1 conda_forge",
   "krb5 1.19.2 haf43566_0",
   "python_abi 3.8 2_cp38",
   "openssl 1.1.1k h4e0d66e_1",
   "click 8.0.1 py38hf8b3453_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "pip 21.2.4 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.10.2 py38h6345821_0",
   "jq 1.6 h339bb43_1000",
   "oniguruma 6.9.7.1 h4e0d66e_0"
  ],
  "summary": "C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "VERBOSE_CM": "VERBOSE=1",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "curl": "7",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "mpi": "nompi",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "curl": {
    "max_pin": "x"
   },
   "mpich": "x.x",
   "openmpi": "x.x",
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ],
   [
    "python",
    "python_impl"
   ]
  ]
 },
 "files": [
  "bin/openpmd-ls",
  "bin/openpmd-pipe",
  "etc/xeus-cling/tags.d/openpmd-api.json",
  "include/mpark/variant.hpp",
  "include/openPMD/ChunkInfo.hpp",
  "include/openPMD/Dataset.hpp",
  "include/openPMD/Datatype.hpp",
  "include/openPMD/DatatypeHelpers.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1Auxiliary.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ADIOS1IOHandlerImpl.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2Auxiliary.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2FilePosition.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ADIOS2PreloadAttributes.hpp",
  "include/openPMD/IO/ADIOS/ParallelADIOS1IOHandler.hpp",
  "include/openPMD/IO/ADIOS/ParallelADIOS1IOHandlerImpl.hpp",
  "include/openPMD/IO/AbstractFilePosition.hpp",
  "include/openPMD/IO/AbstractIOHandler.hpp",
  "include/openPMD/IO/AbstractIOHandlerHelper.hpp",
  "include/openPMD/IO/AbstractIOHandlerImpl.hpp",
  "include/openPMD/IO/AbstractIOHandlerImplCommon.hpp",
  "include/openPMD/IO/Access.hpp",
  "include/openPMD/IO/DummyIOHandler.hpp",
  "include/openPMD/IO/Format.hpp",
  "include/openPMD/IO/HDF5/HDF5Auxiliary.hpp",
  "include/openPMD/IO/HDF5/HDF5FilePosition.hpp",
  "include/openPMD/IO/HDF5/HDF5IOHandler.hpp",
  "include/openPMD/IO/HDF5/HDF5IOHandlerImpl.hpp",
  "include/openPMD/IO/HDF5/ParallelHDF5IOHandler.hpp",
  "include/openPMD/IO/HDF5/ParallelHDF5IOHandlerImpl.hpp",
  "include/openPMD/IO/IOTask.hpp",
  "include/openPMD/IO/InvalidatableFile.hpp",
  "include/openPMD/IO/JSON/JSONFilePosition.hpp",
  "include/openPMD/IO/JSON/JSONIOHandler.hpp",
  "include/openPMD/IO/JSON/JSONIOHandlerImpl.hpp",
  "include/openPMD/Iteration.hpp",
  "include/openPMD/IterationEncoding.hpp",
  "include/openPMD/Mesh.hpp",
  "include/openPMD/ParticlePatches.hpp",
  "include/openPMD/ParticleSpecies.hpp",
  "include/openPMD/ReadIterations.hpp",
  "include/openPMD/Record.hpp",
  "include/openPMD/RecordComponent.hpp",
  "include/openPMD/RecordComponent.tpp",
  "include/openPMD/Series.hpp",
  "include/openPMD/Span.hpp",
  "include/openPMD/Streaming.hpp",
  "include/openPMD/UnitDimension.hpp",
  "include/openPMD/WriteIterations.hpp",
  "include/openPMD/auxiliary/Date.hpp",
  "include/openPMD/auxiliary/DerefDynamicCast.hpp",
  "include/openPMD/auxiliary/Environment.hpp",
  "include/openPMD/auxiliary/Export.hpp",
  "include/openPMD/auxiliary/Filesystem.hpp",
  "include/openPMD/auxiliary/JSON.hpp",
  "include/openPMD/auxiliary/Memory.hpp",
  "include/openPMD/auxiliary/Option.hpp",
  "include/openPMD/auxiliary/OutOfRangeMsg.hpp",
  "include/openPMD/auxiliary/ShareRaw.hpp",
  "include/openPMD/auxiliary/StringManip.hpp",
  "include/openPMD/auxiliary/Unused.hpp",
  "include/openPMD/auxiliary/Variant.hpp",
  "include/openPMD/auxiliary/VariantSrc.hpp",
  "include/openPMD/backend/Attributable.hpp",
  "include/openPMD/backend/Attribute.hpp",
  "include/openPMD/backend/BaseRecord.hpp",
  "include/openPMD/backend/BaseRecordComponent.hpp",
  "include/openPMD/backend/Container.hpp",
  "include/openPMD/backend/MeshRecordComponent.hpp",
  "include/openPMD/backend/PatchRecord.hpp",
  "include/openPMD/backend/PatchRecordComponent.hpp",
  "include/openPMD/backend/Writable.hpp",
  "include/openPMD/benchmark/MemoryProfiler.hpp",
  "include/openPMD/benchmark/Timer.hpp",
  "include/openPMD/benchmark/mpi/BlockSlicer.hpp",
  "include/openPMD/benchmark/mpi/DatasetFiller.hpp",
  "include/openPMD/benchmark/mpi/MPIBenchmark.hpp",
  "include/openPMD/benchmark/mpi/MPIBenchmarkReport.hpp",
  "include/openPMD/benchmark/mpi/OneDimensionalBlockSlicer.hpp",
  "include/openPMD/benchmark/mpi/RandomDatasetFiller.hpp",
  "include/openPMD/binding/python/Numpy.hpp",
  "include/openPMD/binding/python/Pickle.hpp",
  "include/openPMD/binding/python/UnitDimension.hpp",
  "include/openPMD/binding/python/Variant.hpp",
  "include/openPMD/cli/ls.hpp",
  "include/openPMD/config.hpp",
  "include/openPMD/helper/list_series.hpp",
  "include/openPMD/openPMD.hpp",
  "include/openPMD/version.hpp",
  "lib/cmake/openPMD/Modules/FindADIOS.cmake",
  "lib/cmake/openPMD/openPMDConfig.cmake",
  "lib/cmake/openPMD/openPMDConfigVersion.cmake",
  "lib/cmake/openPMD/openPMDTargets-release.cmake",
  "lib/cmake/openPMD/openPMDTargets.cmake",
  "lib/libopenPMD.ADIOS1.Parallel.so",
  "lib/libopenPMD.ADIOS1.Serial.so",
  "lib/libopenPMD.so",
  "lib/pkgconfig/openPMD.pc",
  "lib/python3.9/site-packages/openpmd_api/DaskArray.py",
  "lib/python3.9/site-packages/openpmd_api/DaskDataFrame.py",
  "lib/python3.9/site-packages/openpmd_api/DataFrame.py",
  "lib/python3.9/site-packages/openpmd_api/__init__.py",
  "lib/python3.9/site-packages/openpmd_api/ls/__init__.py",
  "lib/python3.9/site-packages/openpmd_api/ls/__main__.py",
  "lib/python3.9/site-packages/openpmd_api/openpmd_api_cxx.cpython-39-powerpc64le-linux-gnu.so",
  "lib/python3.9/site-packages/openpmd_api/pipe/__init__.py",
  "lib/python3.9/site-packages/openpmd_api/pipe/__main__.py",
  "share/xeus-cling/tagfiles/openpmd-api-doxygen-web.tag.xml"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "nompi_py39h1a9492c_100",
  "build_number": 100,
  "depends": [
   "adios * nompi_*",
   "adios2 * nompi_*",
   "adios2 >=2.7.1,<2.7.2.0a0",
   "blosc",
   "bzip2",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0",
   "numpy >=1.15.0",
   "python >=3.9,<3.10.0a0",
   "python_abi 3.9.* *_cp39",
   "zlib"
  ],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "name": "openpmd-api",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1629307715323,
  "version": "0.14.2"
 },
 "metadata_version": 1,
 "name": "openpmd-api",
 "raw_recipe": "{% set name = \"openpmd-api\" %}\n{% set version = \"0.14.2\" %}\n{% set build = 0 %}\n{% set sha256 = \"25c6b4bcd0ae1ba668b633b8514e66c402da54901c26861fc754fca55717c836\" %}\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n# prioritize nompi variant via build number\n{% if mpi == 'nompi' %}\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.tar.gz\n  url: https://github.com/openPMD/openPMD-api/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [py27]\n\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi == 'nompi' %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% else %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% endif %}\n  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n\n  run_exports:\n    # strict runtime dependency on build-time MPI flavor\n    - {{ name }} * {{ mpi_prefix }}_*\n    # patch-releases are not (yet) ABI compatible:\n    #   https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html#referencing-subpackages\n    #   https://abi-laboratory.pro/?view=timeline&l=adios2\n    #   https://abi-laboratory.pro/?view=timeline&l=openpmd-api\n    - {{ pin_compatible('adios2', min_pin='x.x.x', max_pin='x.x.x') }}  # [python_impl != 'pypy']\n    - openpmd-api {{ version }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n    - cmake >=3.15.0\n    - curl\n    - pkg-config\n    # In OpenMPI, the compiler wrappers are binaries and the wrappers in build\n    # can use host libraries by adding OPAL_PREFIX and in mpich, compiler\n    # wrappers are bash scripts and wrappers in build can't use host libraries.\n    - openmpi  # [mpi == \"openmpi\" and (build_platform != target_platform)]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi'] \n    - python\n    - pybind11 >=2.6.2\n    - numpy >=1.15.0  # for ctest tests\n    # need to list hdf5|adios|adios2 twice to get version pinning from\n    # conda_build_config and build pinning from {{ mpi_prefix }}\n    - adios  >=1.13.1                    # [unix]\n    - adios2 >=2.7.0                     # [python_impl != 'pypy']\n    - catch2 >=2.13.4\n    - hdf5   >=1.8.13\n    - adios  >=1.13.1 = mpi_{{ mpi }}_*  # [unix and mpi != 'nompi']\n    - adios2 >=2.7.0  = mpi_{{ mpi }}_*  # [mpi != 'nompi' and python_impl != 'pypy']\n    - hdf5   >=1.8.13 = mpi_{{ mpi }}_*  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - mpi4py     # [mpi != 'nompi']\n    - python\n    - numpy >=1.15.0\n    # FIXME: for some reason warnings about this (ADIOS1 deps)\n    - blosc\n    - zlib\n    - bzip2\n\ntest:\n  imports:\n    - openpmd_api\n  commands:\n    - python -c \"import openpmd_api; print(openpmd_api.__version__);\"\n    - python -c \"import openpmd_api; print(openpmd_api.variants)\"\n    - test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake                     # [unix]\n    - test -f ${PREFIX}/lib/libopenPMD.so                                         # [linux]\n    - otool -L ${PREFIX}/lib/libopenPMD.dylib                                     # [osx]\n    - if exist %LIBRARY_PREFIX%\\bin\\openPMD.dll (exit 0) else (exit 1)            # [win]\n    - otool -L ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.dylib                       # [osx and mpi != 'mpich']\n    - ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so                               # [linux]\n    - if exist %LIBRARY_PREFIX%\\cmake\\openPMDConfig.cmake (exit 0) else (exit 1)  # [win]\n    - test -f ${PREFIX}/share/xeus-cling/tagfiles/openpmd-api-doxygen-web.tag.xml  # [unix]\n    - test -f ${PREFIX}/etc/xeus-cling/tags.d/openpmd-api.json                     # [unix]\n    - if exist %LIBRARY_PREFIX%\\share\\xeus-cling\\tagfiles\\openpmd-api-doxygen-web.tag.xml (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\etc\\xeus-cling\\tags.d\\openpmd-api.json (exit 0) else (exit 1)                     # [win]\n\nabout:\n  home: https://www.openPMD.org\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  summary: C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files.\n\n  description: |\n    This library provides a common high-level API for openPMD writing and\n    reading. It provides a common interface to I/O libraries and file formats\n    such as HDF5, ADIOS1, ADIOS2, and JSON.\n    Language bindings are provided for C++11 (or newer) and Python 3.\n    This conda-forge package provides serial and MPI-parallel I/O. Windows\n    support is limited to serial versions of HDF5, ADIOS2 and JSON.\n  doc_url: https://openpmd-api.readthedocs.io\n  dev_url: https://github.com/openPMD/openPMD-api\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - franzpoeschel\n",
 "rendered_recipe": {
  "about": {
   "description": "This library provides a common high-level API for openPMD writing and\nreading. It provides a common interface to I/O libraries and file formats\nsuch as HDF5, ADIOS1, ADIOS2, and JSON.\nLanguage bindings are provided for C++11 (or newer) and Python 3.\nThis conda-forge package provides serial and MPI-parallel I/O. Windows\nsupport is limited to serial versions of HDF5, ADIOS2 and JSON.\n",
   "dev_url": "https://github.com/openPMD/openPMD-api",
   "doc_url": "https://openpmd-api.readthedocs.io",
   "home": "https://www.openPMD.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING.LESSER",
   "summary": "C++ & Python API for writing & reading (.h5, .bp, .json, ...), serial & MPI parallel openPMD files."
  },
  "build": {
   "number": "100",
   "run_exports": [
    "adios2 >=2.7.1,<2.7.2.0a0",
    "openpmd-api * nompi_*",
    "openpmd-api 0.14.2"
   ],
   "string": "nompi_py39h1a9492c_100"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ax3l",
    "franzpoeschel"
   ]
  },
  "package": {
   "name": "openpmd-api",
   "version": "0.14.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.36.1 h5836da8_2",
    "binutils_linux-ppc64le 2.36 he035471_0",
    "bzip2 1.0.8 h4e0d66e_4",
    "c-ares 1.17.2 h4e0d66e_0",
    "ca-certificates 2021.5.30 h1084571_0",
    "cmake 3.21.1 hadba709_0",
    "curl 7.78.0 h57b39c4_0",
    "expat 2.4.1 h3b9df90_0",
    "gcc_impl_linux-ppc64le 9.4.0 hcbd312b_8",
    "gcc_linux-ppc64le 9.4.0 h2449294_0",
    "gxx_impl_linux-ppc64le 9.4.0 hcbd312b_8",
    "gxx_linux-ppc64le 9.4.0 h64afa7a_0",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_12",
    "krb5 1.19.2 haf43566_0",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libcurl 7.78.0 he415e40_0",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-devel_linux-ppc64le 9.4.0 he021ec0_8",
    "libgcc-ng 11.1.0 h16e2c27_8",
    "libgomp 11.1.0 h16e2c27_8",
    "libnghttp2 1.43.0 h42039ad_0",
    "libsanitizer 9.4.0 h106b142_8",
    "libssh2 1.9.0 ha5a9321_6",
    "libstdcxx-devel_linux-ppc64le 9.4.0 he021ec0_8",
    "libstdcxx-ng 11.1.0 h8186cfa_8",
    "libuv 1.42.0 h4e0d66e_0",
    "lz4-c 1.9.3 h3b9df90_1",
    "make 4.3 hf817498_1",
    "ncurses 6.2 hea85c5d_4",
    "openssl 1.1.1k h4e0d66e_1",
    "pkg-config 0.29.2 h339bb43_1008",
    "rhash 1.4.1 h4e0d66e_0",
    "sysroot_linux-ppc64le 2.17 h395ec9b_12",
    "tk 8.6.10 h38e1d09_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h6eb9509_1010",
    "zstd 1.5.0 h65c4b1a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "adios 1.13.1 nompi_ha21b18b_1121",
    "adios2 2.7.1 nompi_py39h5c9ede7_100",
    "blosc 1.21.0 h3b9df90_0",
    "bzip2 1.0.8 h4e0d66e_4",
    "c-ares 1.17.2 h4e0d66e_0",
    "ca-certificates 2021.5.30 h1084571_0",
    "catch2 2.13.6 h2acdbc0_0",
    "hdf5 1.10.6 nompi_h09d1b6e_1114",
    "krb5 1.19.2 haf43566_0",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libblas 3.9.0 11_linuxppc64le_openblas",
    "libcblas 3.9.0 11_linuxppc64le_openblas",
    "libcurl 7.78.0 he415e40_0",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libffi 3.3 hea85c5d_2",
    "libgcc-ng 11.1.0 h16e2c27_8",
    "libgfortran-ng 11.1.0 hfdc3801_8",
    "libgfortran5 11.1.0 h24cf76c_8",
    "libgomp 11.1.0 h16e2c27_8",
    "liblapack 3.9.0 11_linuxppc64le_openblas",
    "libnghttp2 1.43.0 h42039ad_0",
    "libopenblas 0.3.17 pthreads_h486567c_1",
    "libpng 1.6.37 h38e1d09_2",
    "libsodium 1.0.18 h6eb9509_1",
    "libssh2 1.9.0 ha5a9321_6",
    "libstdcxx-ng 11.1.0 h8186cfa_8",
    "ncurses 6.2 hea85c5d_4",
    "numpy 1.21.2 py39he089932_0",
    "openssl 1.1.1k h4e0d66e_1",
    "pybind11 2.7.1 py39h4d17caa_0",
    "pybind11-global 2.7.1 py39h4d17caa_0",
    "python 3.9.6 h82ac395_1_cpython",
    "python_abi 3.9 2_cp39",
    "readline 8.1 h5c45dff_0",
    "sqlite 3.36.0 h4e2196e_0",
    "tk 8.6.10 h38e1d09_1",
    "tzdata 2021a he74cb21_1",
    "xz 5.2.5 h6eb9509_1",
    "zeromq 4.3.4 h3b9df90_0",
    "zfp 0.5.5 h3b9df90_5",
    "zlib 1.2.11 h6eb9509_1010"
   ],
   "run": [
    "adios * nompi_*",
    "adios2 * nompi_*",
    "adios2 >=2.7.1,<2.7.2.0a0",
    "blosc",
    "bzip2",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0",
    "numpy >=1.15.0",
    "python >=3.9,<3.10.0a0",
    "python_abi 3.9.* *_cp39",
    "zlib"
   ]
  },
  "source": {
   "fn": "0.14.2.tar.gz",
   "sha256": "25c6b4bcd0ae1ba668b633b8514e66c402da54901c26861fc754fca55717c836",
   "url": "https://github.com/openPMD/openPMD-api/archive/0.14.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"import openpmd_api; print(openpmd_api.__version__);\"",
    "python -c \"import openpmd_api; print(openpmd_api.variants)\"",
    "test -f ${PREFIX}/lib/cmake/openPMD/openPMDConfig.cmake",
    "test -f ${PREFIX}/lib/libopenPMD.so",
    "ldd ${PREFIX}/lib/libopenPMD.ADIOS1.Serial.so",
    "test -f ${PREFIX}/share/xeus-cling/tagfiles/openpmd-api-doxygen-web.tag.xml",
    "test -f ${PREFIX}/etc/xeus-cling/tags.d/openpmd-api.json"
   ],
   "imports": [
    "openpmd_api"
   ]
  }
 },
 "version": "0.14.2"
}