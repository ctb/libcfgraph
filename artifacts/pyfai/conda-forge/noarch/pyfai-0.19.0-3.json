{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
  "dev_url": "https://github.com/silx-kit/pyFAI/",
  "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "parent_recipe": {
    "name": "pyfai-base",
    "path": "/Users/runner/work/1/s/recipe",
    "version": "0.19.0"
   },
   "recipe-maintainers": [
    "CJ-Wright",
    "tacaswell",
    "chiahaoliu",
    "tschoonj",
    "kif",
    "t20100"
   ]
  },
  "home": "https://github.com/silx-kit/pyFAI/",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "copyright",
  "root_pkgs": [
   "ruamel_yaml 0.15.80 py38h94c058a_1003",
   "ca-certificates 2020.12.5 h033912b_0",
   "conda-env 2.6.0 1",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38heedec30_2",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "wheel 0.36.2 pyhd3deb0d_0",
   "anaconda-client 1.7.2 py_0",
   "libcurl 7.71.1 h9bf37e3_8",
   "jsonschema 3.2.0 py_2",
   "cryptography 3.3.1 py38h6b4ec92_0",
   "cffi 1.14.4 py38h979bc6b_1",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "zstd 1.4.8 hf387650_1",
   "soupsieve 2.0.1 py_1",
   "requests 2.25.1 pyhd3deb0d_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "markupsafe 1.1.1 py38h5406a74_3",
   "libcxx 11.0.1 habf9029_0",
   "pyyaml 5.4.1 py38h5406a74_0",
   "psutil 5.8.0 py38h5406a74_1",
   "certifi 2020.12.5 py38h50d1736_1",
   "perl 5.32.0 hbcb3906_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "conda-forge-ci-setup 3.7.1 py38he866dac_0",
   "c-ares 1.17.1 hc929b4f_0",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "tk 8.6.10 h0419947_1",
   "xz 5.2.5 haf1e3a3_1",
   "conda-build 3.21.4 py38h50d1736_0",
   "python-libarchive-c 2.9 py38h50d1736_2",
   "liblief 0.10.1 hb1e8313_2",
   "chardet 4.0.0 py38h50d1736_0",
   "brotlipy 0.7.0 py38h94c058a_1001",
   "zlib 1.2.11 h7795811_1010",
   "pcre 8.44 hb1e8313_0",
   "libffi 3.3 h046ec9c_2",
   "libxml2 2.9.10 h802ca4f_3",
   "curl 7.71.1 hcb81553_8",
   "click 7.1.2 pyh9f0ad1d_0",
   "tqdm 4.55.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h7937167_1005",
   "git 2.30.0 pl5320hd05cdc2_0",
   "attrs 20.3.0 pyhd3deb0d_0",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "expat 2.2.10 h1c7c35f_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "pip 21.0 pyhd8ed1ab_1",
   "readline 8.0 h0678c8f_2",
   "ripgrep 12.1.1 haf1e3a3_1",
   "conda 4.9.2 py38h50d1736_0",
   "pytz 2020.5 pyhd8ed1ab_0",
   "pycosat 0.6.3 py38h94c058a_1005",
   "python 3.8.6 h624753d_4_cpython",
   "yaml 0.2.5 haf1e3a3_0",
   "oniguruma 6.9.3 hc929b4f_0",
   "openssl 1.1.1i h35c211d_0",
   "libarchive 3.5.1 h0a5793d_1",
   "pyrsistent 0.17.3 py38h5406a74_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "jupyter_core 4.7.0 py38h50d1736_1",
   "bzip2 1.0.8 hc929b4f_4",
   "importlib-metadata 3.4.0 py38h50d1736_0",
   "clyent 1.2.2 py_1",
   "sqlite 3.34.0 h17101e1_0",
   "conda-package-handling 1.7.2 py38h94c058a_0",
   "pysocks 1.7.1 py38h5347e94_2",
   "lz4-c 1.9.3 h046ec9c_0",
   "zipp 3.4.0 py_0",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "krb5 1.17.2 h60d9502_0",
   "lzo 2.10 haf1e3a3_1000",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "urllib3 1.26.2 pyhd8ed1ab_0",
   "icu 68.1 h74dc148_0",
   "setuptools 49.6.0 py38h5347e94_2"
  ],
  "summary": "Python implementation of fast azimuthal integration",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "c_compiler": "clang",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [],
 "index": {
  "arch": null,
  "build": "3",
  "build_number": 3,
  "depends": [
   "hdf5plugin",
   "matplotlib",
   "pyfai-base >=0.19.0,<0.19.1.0a0",
   "silx"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "pyfai",
  "noarch": "generic",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1611914311763,
  "version": "0.19.0"
 },
 "metadata_version": 1,
 "name": "pyfai",
 "raw_recipe": "# This file created by conda-build 3.21.4\n# ------------------------------------------------\n\npackage:\n  name: pyfai\n  version: 0.19.0\nsource:\n  sha256: 4dcbc92470997b5002d5626da4df428ab12efcfcec437d4cb001f41141665774\n  url: https://pypi.io/packages/source/p/pyFAI/pyFAI-0.19.0.tar.gz\nbuild:\n  noarch: generic\n  number: 3\n  string: '3'\nrequirements:\n  build: []\n  run:\n    - hdf5plugin\n    - matplotlib\n    - pyfai-base >=0.19.0,<0.19.1.0a0\n    - silx\ntest:\n  imports:\n    - pyFAI\n    - pyFAI.gui\n    - pyFAI.test\n    - pyFAI.third_party\nabout:\n  description: 'pyFAI is an azimuthal integration library that tries to be fast (as\n    fast\n\n    as C and even more using OpenCL and GPU). It is based on histogramming of\n\n    the 2theta/Q positions of each (center of) pixel weighted by the intensity\n\n    of each pixel, but parallel version uses a SparseMatrix-DenseVector\n\n    multiplication. Neighboring output bins get also a contribution of pixels\n\n    next to the border thanks to pixel splitting. Finally pyFAI provides also\n\n    tools to calibrate the experimental setup using Debye-Scherrer rings of a\n\n    reference compound.\n\n    '\n  dev_url: https://github.com/silx-kit/pyFAI/\n  doc_url: http://www.silx.org/doc/pyFAI/latest/\n  home: https://github.com/silx-kit/pyFAI/\n  license: MIT\n  license_family: MIT\n  license_file: copyright\n  summary: Python implementation of fast azimuthal integration\nextra:\n  copy_test_source_files: true\n  final: true\n  recipe-maintainers:\n    - CJ-Wright\n    - chiahaoliu\n    - kif\n    - t20100\n    - tacaswell\n    - tschoonj\n",
 "rendered_recipe": {
  "about": {
   "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
   "dev_url": "https://github.com/silx-kit/pyFAI/",
   "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
   "home": "https://github.com/silx-kit/pyFAI/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "copyright",
   "summary": "Python implementation of fast azimuthal integration"
  },
  "build": {
   "noarch": "generic",
   "number": 3,
   "string": "3"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "CJ-Wright",
    "chiahaoliu",
    "kif",
    "t20100",
    "tacaswell",
    "tschoonj"
   ]
  },
  "package": {
   "name": "pyfai",
   "version": "0.19.0"
  },
  "requirements": {
   "build": [],
   "run": [
    "hdf5plugin",
    "matplotlib",
    "pyfai-base >=0.19.0,<0.19.1.0a0",
    "silx"
   ]
  },
  "source": {
   "sha256": "4dcbc92470997b5002d5626da4df428ab12efcfcec437d4cb001f41141665774",
   "url": "https://pypi.io/packages/source/p/pyFAI/pyFAI-0.19.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyFAI",
    "pyFAI.gui",
    "pyFAI.test",
    "pyFAI.third_party"
   ]
  }
 },
 "version": "0.19.0"
}