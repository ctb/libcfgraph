{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
  "dev_url": "https://developer.nvidia.com/cutensor/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "jakirkham"
   ]
  },
  "home": "https://developer.nvidia.com/cutensor",
  "identifiers": [],
  "keywords": [],
  "license": "cuTENSOR Software License Agreement",
  "license_file": "libcutensor/libcutensor/license.pdf",
  "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "attrs 20.3.0 pyhd3deb0d_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "brotlipy 0.7.0 py36h68aa20f_1001",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2020.12.5 h5b45459_0",
   "certifi 2020.12.5 py36ha15d459_1",
   "cffi 1.14.4 py36he58ceb7_1",
   "chardet 4.0.0 py36ha15d459_1",
   "click 7.1.2 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "conda 4.9.2 py36ha15d459_0",
   "conda-build 3.21.4 py36ha15d459_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.7.1 py36h6e52ffc_0",
   "conda-package-handling 1.7.2 py36ha9b6521_0",
   "console_shortcut 0.1.1 4",
   "cryptography 3.3.1 py36he58ceb7_1",
   "decorator 4.4.2 py_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "glob2 0.7 py_0",
   "idna 2.10 pyhd3eb1b0_0",
   "importlib-metadata 3.4.0 py36ha15d459_0",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "jsonschema 3.2.0 py_2",
   "jupyter_core 4.7.0 py36ha15d459_1",
   "libarchive 3.5.1 h8686738_1",
   "libiconv 1.16 he774522_0",
   "liblief 0.10.1 ha925a31_2",
   "libxml2 2.9.10 hf5bbc77_3",
   "lz4-c 1.9.3 h8ffe710_0",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36h68aa20f_3",
   "menuinst 1.4.16 py36h9f0ad1d_1",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "openssl 1.1.1i h8ffe710_0",
   "pip 21.0 pyhd8ed1ab_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "powershell_shortcut 0.0.1 3",
   "psutil 5.8.0 py36h68aa20f_1",
   "py-lief 0.10.1 py36h33355b6_2",
   "pycosat 0.6.3 py36h68aa20f_1006",
   "pycparser 2.20 py_2",
   "pyopenssl 20.0.1 pyhd3eb1b0_1",
   "pyrsistent 0.17.3 py36h68aa20f_2",
   "pysocks 1.7.1 py36ha15d459_3",
   "python 3.6.12 h39d44d4_0_cpython",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36ha15d459_2",
   "python_abi 3.6 1_cp36m",
   "pytz 2020.5 pyhd8ed1ab_0",
   "pywin32 300 py36h68aa20f_0",
   "pyyaml 5.4.1 py36h68aa20f_0",
   "requests 2.25.1 pyhd3eb1b0_0",
   "ripgrep 12.1.1 h301d43c_1",
   "ruamel_yaml 0.15.80 py36h68aa20f_1003",
   "setuptools 49.6.0 py36ha15d459_3",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "soupsieve 2.0.1 py_1",
   "sqlite 3.33.0 h2a8f88b_0",
   "tqdm 4.55.1 pyhd3eb1b0_0",
   "traitlets 4.3.3 py36h9f0ad1d_1",
   "typing_extensions 3.7.4.3 py_0",
   "urllib3 1.26.2 pyhd3eb1b0_0",
   "vc 14.2 h21ff451_1",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.27.29016 h5e58377_2",
   "wheel 0.36.2 pyhd3eb1b0_0",
   "wincertstore 0.2 py36ha15d459_1006",
   "win_inet_pton 1.1.0 py36ha15d459_2",
   "xz 5.2.5 h62dcd97_1",
   "yaml 0.2.5 he774522_0",
   "zipp 3.4.0 py_0",
   "zlib 1.2.11 h62dcd97_4",
   "zstd 1.4.8 h4e2f164_1"
  ],
  "summary": "Tensor Linear Algebra on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.0",
  "cudnn": "7",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Library/bin/cutensor.dll",
  "Library/include/cutensor.h",
  "Library/include/cutensor/types.h",
  "Library/lib/cutensor.lib",
  "Scripts/.cutensor-post-link.bat"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h5987435_2",
  "build_number": 2,
  "depends": [
   "cudatoolkit 11.0|11.0.*",
   "vc >=14.1,<15.0a0",
   "vs2015_runtime >=14.16.27012"
  ],
  "license": "cuTENSOR Software License Agreement",
  "name": "cutensor",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1611654663007,
  "version": "1.2.2.5"
 },
 "metadata_version": 1,
 "name": "cutensor",
 "raw_recipe": "{% set version = \"1.2.2\" %}\n{% set patch_version = \"5\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/{{ version }}/local_installers/libcutensor-linux-x86_64-{{ version }}.{{ patch_version }}.tar.gz   # [linux64 and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n  url: https://developer.download.nvidia.com/compute/cutensor/{{ version }}/local_installers/libcutensor-linux-ppc64le-{{ version }}.{{ patch_version }}.tar.gz  # [ppc64le and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n  url: https://developer.download.nvidia.com/compute/cutensor/{{ version }}/local_installers/libcutensor-linux-sbsa-{{ version }}.{{ patch_version }}.tar.gz  # [aarch64 and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n  url: https://developer.download.nvidia.com/compute/cutensor/{{ version }}/local_installers/libcutensor_{{ version }}.exe  # [win64 and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n\n  sha256: 954ee22b80d6b82fd4decd42b7faead86af7c3817653b458620a66174e5b89b6  # [linux64]\n  sha256: d914a721b8a6bbfbf4f2bdea3bb51775e5df39abc383d415b3b06bbde2a47e6e  # [ppc64le]\n  sha256: 031b75946d2ce22f8c2736f7b4216b9377406afcb35012093a66e2801bfe2990  # [aarch64]\n  sha256: 88d3e2c662e601214ef5caa26ca2db0492eab6ec3bf9dc9a746bb1a7b8c3aab2  # [win64]\n\nbuild:\n  number: 2\n  skip: True  # [win32 or cuda_compiler_version in (\"None\", \"9.2\", \"10.0\")]\n  script:\n    - mkdir -p $PREFIX/include                                            # [unix]\n    - cp -r include/* $PREFIX/include/                                    # [unix]\n    - mkdir -p $PREFIX/lib                                                # [unix]\n    - mv lib/{{ cuda_compiler_version }}/libcutensor.so* $PREFIX/lib/     # [unix and cuda_compiler_version in (\"10.1\", \"10.2\")]\n    - mv lib/11/libcutensor.so* $PREFIX/lib/                              # [unix and cuda_compiler_version in (\"11.0\", )]\n\n    - 7z x %SRC_DIR%\\\\libcutensor_1.2.2.exe                                                                     # [win64]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                                                             # [win64]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\{{ cuda_compiler_version }}\\\\cutensor.dll %LIBRARY_BIN%\\\\  # [win64 and cuda_compiler_version in (\"10.1\", \"10.2\")]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\{{ cuda_compiler_version }}\\\\cutensor.lib %LIBRARY_LIB%\\\\  # [win64 and cuda_compiler_version in (\"10.1\", \"10.2\")]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\11\\\\cutensor.dll %LIBRARY_BIN%\\\\                           # [win64 and cuda_compiler_version in (\"11.0\", )]\n    - copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\11\\\\cutensor.lib %LIBRARY_LIB%\\\\                           # [win64 and cuda_compiler_version in (\"11.0\", )]\n  ignore_run_exports_from:\n    - {{ compiler('c') }}    # [linux]\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  missing_dso_whitelist:\n    - '*/libgomp.*'  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n    - libgomp  # [linux]\n    - 7zip  # [win]\n  run:\n    # Only GCC_3.0 or older symbols present\n    - libgcc-ng >=3.0     # [linux]\n    # Only GLIBCXX_3.4 or older symbols present\n    - libstdcxx-ng >=3.4  # [linux]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  commands:\n    - test -f $PREFIX/include/cutensor.h                    # [linux]\n    - test -f $PREFIX/include/cutensor/types.h              # [linux]\n    - test -f $PREFIX/lib/libcutensor.so                    # [linux]\n\n    - if not exist %LIBRARY_INC%\\\\cutensor.h exit 1         # [win64]\n    - if not exist %LIBRARY_INC%\\\\cutensor\\\\types.h exit 1  # [win64]\n    - if not exist %LIBRARY_BIN%\\\\cutensor.dll exit 1       # [win64]\n    - if not exist %LIBRARY_LIB%\\\\cutensor.lib exit 1       # [win64]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: cuTENSOR Software License Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: license.pdf  # [not win64 and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n  license_file: libcutensor/libcutensor/license.pdf  # [win64 and cuda_compiler_version in (\"10.1\", \"10.2\", \"11.0\")]\n  summary: \"Tensor Linear Algebra on NVIDIA GPUs\"\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - leofang\n    - jakirkham\n",
 "rendered_recipe": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "cuTENSOR Software License Agreement",
   "license_file": "libcutensor/libcutensor/license.pdf",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports_from": null,
   "missing_dso_whitelist": null,
   "number": "2",
   "run_exports": [
    "cutensor >=1.2.2.5,<2.0a0"
   ],
   "script": [
    "7z x %SRC_DIR%\\\\libcutensor_1.2.2.exe",
    "copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\11\\\\cutensor.dll %LIBRARY_BIN%\\\\",
    "copy %SRC_DIR%\\\\libcutensor\\\\libcutensor\\\\lib\\\\11\\\\cutensor.lib %LIBRARY_LIB%\\\\"
   ],
   "string": "h5987435_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jakirkham",
    "leofang"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.2.2.5"
  },
  "requirements": {
   "build": [
    "7zip 19.00 h74a9793_2",
    "nvcc_win-64 11.0 h5987435_11",
    "vc 14.2 hb210afc_2",
    "vs2015_runtime 14.28.29325 h5e1d092_0",
    "vs2017_win-64 19.16.27038 h2e3bad8_2",
    "vswhere 2.8.4 h57928b3_0"
   ],
   "host": [
    "cudatoolkit 11.0.3 h3f58a73_6",
    "vc 14.2 hb210afc_2",
    "vs2015_runtime 14.28.29325 h5e1d092_0"
   ],
   "run": [
    "cudatoolkit 11.0|11.0.*",
    "vc >=14.1,<15.0a0",
    "vs2015_runtime >=14.16.27012"
   ],
   "run_constrained": []
  },
  "source": {
   "sha256": "88d3e2c662e601214ef5caa26ca2db0492eab6ec3bf9dc9a746bb1a7b8c3aab2",
   "url": "https://developer.download.nvidia.com/compute/cutensor/1.2.2/local_installers/libcutensor_1.2.2.exe"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\cutensor.h exit 1",
    "if not exist %LIBRARY_INC%\\\\cutensor\\\\types.h exit 1",
    "if not exist %LIBRARY_BIN%\\\\cutensor.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\cutensor.lib exit 1"
   ],
   "requires": [
    "git",
    "nvcc_win-64 11.0.*",
    "vs2017_win-64"
   ]
  }
 },
 "version": "1.2.2.5"
}