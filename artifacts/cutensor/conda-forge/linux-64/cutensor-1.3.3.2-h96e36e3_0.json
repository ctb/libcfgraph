{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
  "dev_url": "https://developer.nvidia.com/cutensor/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "jakirkham"
   ]
  },
  "home": "https://developer.nvidia.com/cutensor",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
  "root_pkgs": [
   "tini 0.18.0 h14c3975_1001",
   "libssh2 1.10.0 ha56f1ee_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "cffi 1.14.6 py38h3931269_1",
   "xz 5.2.5 h516909a_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_8",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "yaml 0.2.5 h516909a_0",
   "sqlite 3.36.0 h9cd32fc_1",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "ipython_genutils 0.2.0 py_1",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "expat 2.4.1 h9c3ff4c_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "idna 3.1 pyhd3deb0d_0",
   "requests 2.26.0 pyhd8ed1ab_0",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "jupyter_core 4.8.1 py38h578d9bd_0",
   "git 2.33.0 pl5321hc30692c_0",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "traitlets 5.1.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h516909a_1010",
   "ripgrep 13.0.0 habb4d0f_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "libarchive 3.5.2 hccf745f_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "pcre2 10.37 h032f7d1_0",
   "perl 5.32.1 0_h7f98852_perl5",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "lzo 2.10 h516909a_1000",
   "libnghttp2 1.43.0 h812cca2_0",
   "krb5 1.19.2 hcc1bbae_0",
   "icu 68.1 h58526e2_0",
   "tk 8.6.11 h27826a3_1",
   "libgcc-ng 11.2.0 h1d223b6_8",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "libiconv 1.16 h516909a_0",
   "ncurses 6.2 h58526e2_4",
   "bzip2 1.0.8 h7f98852_4",
   "python 3.8.12 hb7a2778_0_cpython",
   "clyent 1.2.2 py_1",
   "six 1.16.0 pyh6c4a22f_0",
   "libcurl 7.79.0 h2574ce0_0",
   "importlib-metadata 4.8.1 py38h578d9bd_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "curl 7.79.0 hea6ffbf_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "libxml2 2.9.12 h72842e0_0",
   "gettext 0.19.8.1 h73d1719_1006",
   "libedit 3.1.20191231 he28a2e2_2",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "setuptools 58.0.4 py38h578d9bd_0",
   "glob2 0.7 py_0",
   "patchelf 0.13 h58526e2_0",
   "libstdcxx-ng 11.2.0 he4da1e4_8",
   "py-lief 0.11.5 py38h709712a_0",
   "soupsieve 2.0.1 py_1",
   "_libgcc_mutex 0.1 conda_forge",
   "libffi 3.4.2 h9c3ff4c_1",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "pyyaml 5.4.1 py38h497a2fe_1",
   "zstd 1.5.0 ha95c52a_0",
   "python_abi 3.8 2_cp38",
   "ca-certificates 2021.5.30 ha878542_0",
   "chardet 4.0.0 py38h578d9bd_1",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "libev 4.33 h516909a_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "patch 2.7.6 h7f98852_1002",
   "su-exec 0.2 h516909a_1002",
   "conda 4.10.3 py38h578d9bd_1",
   "certifi 2021.5.30 py38h578d9bd_0",
   "openssl 1.1.1l h7f98852_0",
   "pip 21.2.4 pyhd8ed1ab_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "tqdm 4.62.2 pyhd8ed1ab_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "pysocks 1.7.1 py38h578d9bd_3",
   "c-ares 1.17.2 h7f98852_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.11.0 py38h904d315_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "Tensor Linear Algebra on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.0",
  "cudnn": "undefined",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "quay.io/condaforge/linux-anvil-cuda:11.0",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cuda_compiler_version",
    "cdt_name",
    "cudnn"
   ],
   [
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ],
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "bin/.cutensor-post-link.sh",
  "include/cutensor.h",
  "include/cutensor/types.h",
  "lib/libcutensor.so",
  "lib/libcutensor.so.1",
  "lib/libcutensor.so.1.3.3"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h96e36e3_0",
  "build_number": 0,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17,<3.0.a0",
   "_openmp_mutex >=4.5",
   "cudatoolkit 11.0.*",
   "libgcc-ng >=3.0",
   "libstdcxx-ng >=3.4"
  ],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "name": "cutensor",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1632426814193,
  "version": "1.3.3.2"
 },
 "metadata_version": 1,
 "name": "cutensor",
 "raw_recipe": "{% set version = \"1.3.3\" %}\n{% set patch_version = \"2\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz     # [linux64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz   # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}.{{ patch_version }}-archive.zip    # [win64]\n\n  sha256: 2e9517f31305872a7e496b6aa8ea329acda6b947b0c1eb1250790eaa2d4e2ecc  # [linux64]\n  sha256: 79f294c4a7933e5acee5f150145c526d6cd4df16eefb63f2d65df1dbc683cd68  # [ppc64le]\n  sha256: 3abeacbe7085af7026ca1399a77c681c219c10a1448a062964e97aaac2b05851  # [win64]\n\nbuild:\n  number: 0\n  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+\n  skip: True  # [win32 or cuda_compiler_version not in (\"10.2\", \"11.0\", \"11.1\")]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le]\n  script:\n    - mkdir -p $PREFIX/include                                            # [linux]\n    - cp -r include/* $PREFIX/include/                                    # [linux]\n    - mkdir -p $PREFIX/lib                                                # [linux]\n    - mv lib/{{ cuda_compiler_version }}/libcutensor.so* $PREFIX/lib/     # [linux and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - mv lib/11/libcutensor.so* $PREFIX/lib/                              # [linux and cuda_compiler_version == \"11.1\"]\n    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so       # [ppc64le]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\cutensor.dll %LIBRARY_BIN%\\\\  # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\cutensor.lib %LIBRARY_LIB%\\\\  # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\11\\\\cutensor.dll %LIBRARY_BIN%\\\\                           # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\cutensor.lib %LIBRARY_LIB%\\\\                           # [win64 and cuda_compiler_version in (\"11.1\", )]\n  ignore_run_exports_from:\n    - {{ compiler('c') }}    # [linux]\n    - {{ compiler('cuda') }}\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  missing_dso_whitelist:\n    - '*/libgomp.*'  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    - libgomp  # [linux]\n  host:\n    - patchelf >=0.12  # [linux]\n  run:\n    # Only GCC_3.0 or older symbols present\n    - libgcc-ng >=3.0     # [linux]\n    # Only GLIBCXX_3.4 or older symbols present\n    - libstdcxx-ng >=3.4  # [linux]\n    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == \"11.1\"]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: \"Tensor Linear Algebra on NVIDIA GPUs\"\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - leofang\n    - jakirkham\n",
 "rendered_recipe": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports_from": [
    "gcc_linux-64 7.*",
    "nvcc_linux-64 11.0.*"
   ],
   "missing_dso_whitelist": [
    "*/libgomp.*"
   ],
   "number": "0",
   "run_exports": [
    "cutensor >=1.3.3.2,<2.0a0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp -r include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11.0/libcutensor.so* $PREFIX/lib/"
   ],
   "script_env": null,
   "string": "h96e36e3_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jakirkham",
    "leofang"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.3.3.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h5bd9786_12",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_33",
    "gcc_impl_linux-64 7.5.0 hda68d29_13",
    "gcc_linux-64 7.5.0 h47867f9_33",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_12",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libgcc-ng 11.2.0 h1d223b6_8",
    "libgomp 11.2.0 h1d223b6_8",
    "libstdcxx-ng 11.2.0 he4da1e4_8",
    "nvcc_linux-64 11.0 h38088af_13",
    "sed 4.8 he412f7d_0",
    "sysroot_linux-64 2.17 h4a8ded7_12"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "libgcc-ng 11.2.0 h1d223b6_8",
    "libgomp 11.2.0 h1d223b6_8",
    "libstdcxx-ng 11.2.0 he4da1e4_8",
    "patchelf 0.13 h58526e2_0"
   ],
   "run": [
    "__glibc >=2.17,<3.0.a0",
    "_openmp_mutex >=4.5",
    "cudatoolkit 11.0.*",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "2e9517f31305872a7e496b6aa8ea329acda6b947b0c1eb1250790eaa2d4e2ecc",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-1.3.3.2-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.0.*",
    "gcc_linux-64 7.*",
    "git",
    "gxx_linux-64 7.*",
    "nvcc_linux-64 11.0.*",
    "sysroot_linux-64 2.17.*"
   ]
  }
 },
 "version": "1.3.3.2"
}