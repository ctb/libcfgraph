{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "uproot (originally \u03bcproot, for \"micro-Python ROOT\") is a reader and a writer\nof the ROOT file format using only Python and Numpy. Unlike the standard C++\nROOT implementation, uproot is only an I/O library, primarily intended to\nstream data into machine learning libraries in Python. Unlike PyROOT and\nroot_numpy, uproot does not depend on C++ ROOT. Instead, it uses Numpy calls\nto rapidly cast data blocks in the ROOT file as Numpy arrays.\n",
  "dev_url": "https://github.com/scikit-hep/uproot",
  "doc_url": "https://uproot.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lgray",
    "chrisburr",
    "jpivarski",
    "henryiii"
   ]
  },
  "home": "https://github.com/scikit-hep/uproot",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libnghttp2 1.43.0 h42039ad_0",
   "idna 2.10 pyh9f0ad1d_0",
   "readline 8.0 h41a240f_2",
   "conda 4.9.2 py38hf8b3453_0",
   "_openmp_mutex 4.5 1_gnu",
   "markupsafe 1.1.1 py38h98b8a6f_3",
   "psutil 5.8.0 py38h98b8a6f_1",
   "libssh2 1.9.0 h0e66b82_5",
   "yaml 0.2.5 h6eb9509_0",
   "attrs 20.3.0 pyhd3deb0d_0",
   "libedit 3.1.20191231 h41a240f_2",
   "pycparser 2.20 pyh9f0ad1d_2",
   "jupyter_core 4.7.1 py38hf8b3453_0",
   "patch 2.7.6 h6eb9509_1001",
   "libiconv 1.16 h6eb9509_0",
   "cryptography 3.3.1 py38h48e7634_1",
   "urllib3 1.26.3 pyhd8ed1ab_0",
   "zstd 1.4.8 h65c4b1a_1",
   "libstdcxx-ng 9.3.0 h22bc1b8_18",
   "python-libarchive-c 2.9 py38hf8b3453_2",
   "git 2.30.0 pl5320hf6c9d78_0",
   "libgcc-ng 9.3.0 hc7a5eb4_18",
   "ncurses 6.2 hea85c5d_4",
   "pycosat 0.6.3 py38h98b8a6f_1006",
   "pcre 8.44 hb209c28_0",
   "libgomp 9.3.0 hc7a5eb4_18",
   "ca-certificates 2020.12.5 h1084571_0",
   "su-exec 0.2 h6eb9509_1002",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "conda-package-handling 1.7.2 py38h3750d88_0",
   "libarchive 3.5.1 hb8455fb_1",
   "pip 21.0.1 pyhd8ed1ab_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "clyent 1.2.2 py_1",
   "libev 4.33 h6eb9509_1",
   "lzo 2.10 h6eb9509_1000",
   "libxml2 2.9.10 h5b1524f_3",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "python 3.8.6 h8137939_5_cpython",
   "curl 7.71.1 hfd09b2d_8",
   "jsonschema 3.2.0 py_2",
   "liblief 0.10.1 ha4af025_2",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "ripgrep 12.1.1 h6eb9509_1",
   "brotlipy 0.7.0 py38h98b8a6f_1001",
   "tqdm 4.56.0 pyhd8ed1ab_0",
   "pyyaml 5.4.1 py38h98b8a6f_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "openssl 1.1.1i h4e0d66e_0",
   "python-dateutil 2.8.1 py_0",
   "zipp 3.4.0 py_0",
   "soupsieve 2.0.1 py_1",
   "tini 0.18.0 h14c3975_1001",
   "ipython_genutils 0.2.0 py_1",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "python_abi 3.8 1_cp38",
   "certifi 2020.12.5 py38hf8b3453_1",
   "_libgcc_mutex 0.1 conda_forge",
   "tk 8.6.10 h38e1d09_1",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "zlib 1.2.11 h6eb9509_1010",
   "setuptools 49.6.0 py38hf8b3453_3",
   "glob2 0.7 py_0",
   "pyrsistent 0.17.3 py38h98b8a6f_2",
   "traitlets 5.0.5 py_0",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "xz 5.2.5 h6eb9509_1",
   "anaconda-client 1.7.2 py_0",
   "py-lief 0.10.1 py38h7f2f977_2",
   "krb5 1.17.2 h2004cfc_0",
   "libffi 3.3 hea85c5d_2",
   "ld_impl_linux-ppc64le 2.35.1 ha35d02b_2",
   "expat 2.2.10 h3b9df90_0",
   "perl 5.32.0 h339bb43_0",
   "pysocks 1.7.1 py38hf8b3453_3",
   "gettext 0.19.8.1 hf23c357_1005",
   "pytz 2021.1 pyhd8ed1ab_0",
   "sqlite 3.34.0 h961021d_0",
   "importlib-metadata 3.4.0 py38hf8b3453_0",
   "cffi 1.14.4 py38h0dac770_1",
   "lz4-c 1.9.3 h3b9df90_0",
   "c-ares 1.17.1 h339bb43_0",
   "icu 68.1 hea85c5d_0",
   "conda-build 3.21.4 py38hf8b3453_0",
   "libcurl 7.71.1 he8386ad_8",
   "patchelf 0.11 hb209c28_0",
   "ruamel_yaml 0.15.80 py38h98b8a6f_1004",
   "six 1.15.0 pyh9f0ad1d_0",
   "jinja2 2.11.3 pyh44b312d_0",
   "chardet 4.0.0 py38hf8b3453_1",
   "oniguruma 6.9.3 h339bb43_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h339bb43_1000",
   "conda-forge-ci-setup 3.7.1 py38h6345821_0"
  ],
  "summary": "ROOT I/O in pure Python and Numpy.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "python",
    "python_impl"
   ]
  ]
 },
 "files": [],
 "index": {
  "arch": "ppc64le",
  "build": "py37h35e4cab_0",
  "build_number": 0,
  "depends": [
   "awkward >=1",
   "lz4",
   "python >=3.7,<3.8.0a0",
   "python-xxhash",
   "python_abi 3.7.* *_cp37m",
   "uproot-base",
   "xrootd",
   "zstandard"
  ],
  "license": "BSD-3-Clause",
  "name": "uproot",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1612555688747,
  "version": "4.0.2"
 },
 "metadata_version": 1,
 "name": "uproot",
 "raw_recipe": "{% set name = \"uproot\" %}\n{% set version = \"4.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d592000e8aa3f7ce50165782ea7efc5c81776d869a0915a065cc0002a654933f\n\nbuild:\n  number: 0\n\nrequirements:\n  host:\n    - python\n  run:\n    - python\n    - uproot-base\n    # Compression\n    - lz4\n    - zstandard\n    - python-xxhash\n    # Other common requirements\n    - xrootd  # [not win]\n    - awkward >=1  # [python_impl != 'pypy']\n\ntest:\n  imports:\n    - uproot\n    - uproot.behaviors\n  commands:\n    - python -c 'import uproot; assert len(uproot.open(\"root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root\")[\"Events\"][\"PV_x\"].array()) == 29308627'  # [not win and python_impl != 'pypy']\n\noutputs:\n  - name: uproot-base\n    build:\n      noarch: python\n      script:\n        - {{ PYTHON }} -m pip install . -vv\n    requirements:\n      host:\n        - pip\n        - numpy\n        - python >=3.5\n      run:\n        - numpy\n        - python >=3.5\n    test:\n      imports:\n        - uproot\n        - uproot.behaviors\n      commands:\n        - pip check\n      requires:\n        - pip\n\n  - name: uproot\n\nabout:\n  home: https://github.com/scikit-hep/uproot\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: ROOT I/O in pure Python and Numpy.\n  description: |\n    uproot (originally \u03bcproot, for \"micro-Python ROOT\") is a reader and a writer\n    of the ROOT file format using only Python and Numpy. Unlike the standard C++\n    ROOT implementation, uproot is only an I/O library, primarily intended to\n    stream data into machine learning libraries in Python. Unlike PyROOT and\n    root_numpy, uproot does not depend on C++ ROOT. Instead, it uses Numpy calls\n    to rapidly cast data blocks in the ROOT file as Numpy arrays.\n  dev_url: https://github.com/scikit-hep/uproot\n  doc_url: https://uproot.readthedocs.io/en/latest/\n\nextra:\n  recipe-maintainers:\n    - lgray\n    - chrisburr\n    - jpivarski\n    - henryiii\n",
 "rendered_recipe": {
  "about": {
   "description": "uproot (originally \u03bcproot, for \"micro-Python ROOT\") is a reader and a writer\nof the ROOT file format using only Python and Numpy. Unlike the standard C++\nROOT implementation, uproot is only an I/O library, primarily intended to\nstream data into machine learning libraries in Python. Unlike PyROOT and\nroot_numpy, uproot does not depend on C++ ROOT. Instead, it uses Numpy calls\nto rapidly cast data blocks in the ROOT file as Numpy arrays.\n",
   "dev_url": "https://github.com/scikit-hep/uproot",
   "doc_url": "https://uproot.readthedocs.io/en/latest/",
   "home": "https://github.com/scikit-hep/uproot",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "ROOT I/O in pure Python and Numpy."
  },
  "build": {
   "number": "0",
   "string": "py37h35e4cab_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "chrisburr",
    "henryiii",
    "jpivarski",
    "lgray"
   ]
  },
  "package": {
   "name": "uproot",
   "version": "4.0.2"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.12.5 h1084571_0",
    "ld_impl_linux-ppc64le 2.35.1 ha35d02b_2",
    "libffi 3.3 hea85c5d_2",
    "libgcc-ng 9.3.0 hc7a5eb4_18",
    "libgomp 9.3.0 hc7a5eb4_18",
    "libstdcxx-ng 9.3.0 h22bc1b8_18",
    "ncurses 6.2 hea85c5d_4",
    "openssl 1.1.1i h4e0d66e_0",
    "python 3.7.9 h8137939_0_cpython",
    "readline 8.0 h41a240f_2",
    "sqlite 3.34.0 h961021d_0",
    "tk 8.6.10 h38e1d09_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h6eb9509_1010"
   ],
   "run": [
    "awkward >=1",
    "lz4",
    "python >=3.7,<3.8.0a0",
    "python-xxhash",
    "python_abi 3.7.* *_cp37m",
    "uproot-base",
    "xrootd",
    "zstandard"
   ]
  },
  "source": {
   "sha256": "d592000e8aa3f7ce50165782ea7efc5c81776d869a0915a065cc0002a654933f",
   "url": "https://pypi.io/packages/source/u/uproot/uproot-4.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c 'import uproot; assert len(uproot.open(\"root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root\")[\"Events\"][\"PV_x\"].array()) == 29308627'"
   ],
   "imports": [
    "uproot",
    "uproot.behaviors"
   ]
  }
 },
 "version": "4.0.2"
}