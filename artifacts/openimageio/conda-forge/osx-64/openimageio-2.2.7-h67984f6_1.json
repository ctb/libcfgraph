{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.3",
  "conda_private": false,
  "conda_version": "4.8.5",
  "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz"
   ]
  },
  "home": "https://sites.google.com/site/openimageio/home",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE.md",
  "root_pkgs": [
   "certifi 2020.6.20 py38h5347e94_2",
   "conda-env 2.6.0 1",
   "markupsafe 1.1.1 py38h94c058a_2",
   "requests 2.24.0 pyh9f0ad1d_0",
   "tk 8.6.10 hb0a8c7a_1",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38heedec30_2",
   "zipp 3.3.0 py_0",
   "jq 1.6 h1de35cc_1000",
   "ruamel_yaml 0.15.80 py38h4d0b108_1002",
   "anaconda-client 1.7.2 py_0",
   "libcurl 7.71.1 h9bf37e3_8",
   "jsonschema 3.2.0 py_2",
   "sqlite 3.33.0 h960bd1c_1",
   "libffi 3.2.1 hb1e8313_1007",
   "pycparser 2.20 pyh9f0ad1d_2",
   "soupsieve 2.0.1 py_1",
   "tqdm 4.50.2 pyh9f0ad1d_0",
   "libxml2 2.9.10 h2c6e4a5_2",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "traitlets 5.0.4 py_1",
   "shyaml 0.6.1 py_0",
   "ripgrep 12.1.1 h0b31af3_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "conda 4.8.5 py38h5347e94_2",
   "openssl 1.1.1h haf1e3a3_0",
   "libiconv 1.16 haf1e3a3_0",
   "urllib3 1.25.10 py_0",
   "expat 2.2.9 hb1e8313_2",
   "lz4-c 1.9.2 hb1e8313_3",
   "xz 5.2.5 haf1e3a3_1",
   "conda-package-handling 1.7.0 py38h4d0b108_5",
   "pip 20.2.3 py_0",
   "liblief 0.10.1 hb1e8313_2",
   "python 3.8.6 hcfdab8c_0_cpython",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "importlib-metadata 2.0.0 py_1",
   "curl 7.71.1 hcb81553_8",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-forge-ci-setup 3.4.0 py38h32f6830_0",
   "zstd 1.4.5 h289c70a_2",
   "brotlipy 0.7.0 py38h4d0b108_1000",
   "pyrsistent 0.17.3 py38h4d0b108_1",
   "nbformat 5.0.7 py_0",
   "pycosat 0.6.3 py38h4d0b108_1004",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "perl 5.26.2 haec8ef5_1006",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "cffi 1.14.3 py38hc4dd44e_0",
   "zlib 1.2.11 h7795811_1009",
   "readline 8.0 h0678c8f_2",
   "pyopenssl 19.1.0 py_1",
   "icu 67.1 hb1e8313_0",
   "c-ares 1.16.1 haf1e3a3_3",
   "pytz 2020.1 pyh9f0ad1d_0",
   "yaml 0.2.5 haf1e3a3_0",
   "bzip2 1.0.8 haf1e3a3_3",
   "conda-build 3.20.3 py38h32f6830_0",
   "krb5 1.17.1 h75d18d8_3",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "ncurses 6.2 hb1e8313_1",
   "clyent 1.2.2 py_1",
   "pcre 8.44 h4a8c4bd_0",
   "pkginfo 1.5.0.1 py_0",
   "pysocks 1.7.1 py38h32f6830_1",
   "psutil 5.7.2 py38h94c058a_1",
   "libarchive 3.4.3 hf12134e_0",
   "gettext 0.19.8.1 h46ab8bc_1002",
   "chardet 3.0.4 py38h32f6830_1007",
   "importlib_metadata 2.0.0 1",
   "pyyaml 5.3.1 py38h94c058a_1",
   "python-libarchive-c 2.9 py38h5347e94_2",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "git 2.28.0 pl526hde3ca24_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "lzo 2.10 haf1e3a3_1000",
   "jupyter_core 4.6.3 py38h32f6830_2",
   "setuptools 49.6.0 py38h32f6830_1",
   "cryptography 3.1.1 py38h52adbb4_0",
   "oniguruma 6.9.3 h01d97ff_0",
   "libcxx 10.0.1 h5f48129_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0"
  ],
  "summary": "Simple but powerful APIs for reading & writing many image formats",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.7.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "boost": "1.72.0",
  "c_compiler": "clang",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "10",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "ffmpeg": "4.3",
  "fortran_compiler": "gfortran",
  "giflib": "5.2",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "jpeg": "9",
  "libpng": "1.6",
  "libtiff": "4.1.0",
  "libwebp": "1.1",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.11",
  "openexr": "2.5.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost": {
    "max_pin": "x.x.x"
   },
   "ffmpeg": {
    "max_pin": "x.x"
   },
   "jpeg": {
    "max_pin": "x"
   },
   "libpng": {
    "max_pin": "x.x"
   },
   "libtiff": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "include/OpenImageIO/argparse.h",
  "include/OpenImageIO/array_view.h",
  "include/OpenImageIO/atomic.h",
  "include/OpenImageIO/attrdelegate.h",
  "include/OpenImageIO/benchmark.h",
  "include/OpenImageIO/color.h",
  "include/OpenImageIO/dassert.h",
  "include/OpenImageIO/deepdata.h",
  "include/OpenImageIO/detail/fmt/core.h",
  "include/OpenImageIO/detail/fmt/format-inl.h",
  "include/OpenImageIO/detail/fmt/format.h",
  "include/OpenImageIO/detail/fmt/ostream.h",
  "include/OpenImageIO/detail/fmt/printf.h",
  "include/OpenImageIO/detail/pugixml/pugiconfig.hpp",
  "include/OpenImageIO/detail/pugixml/pugixml.cpp",
  "include/OpenImageIO/detail/pugixml/pugixml.hpp",
  "include/OpenImageIO/errorhandler.h",
  "include/OpenImageIO/export.h",
  "include/OpenImageIO/filesystem.h",
  "include/OpenImageIO/filter.h",
  "include/OpenImageIO/fmath.h",
  "include/OpenImageIO/fstream_mingw.h",
  "include/OpenImageIO/function_view.h",
  "include/OpenImageIO/hash.h",
  "include/OpenImageIO/image_view.h",
  "include/OpenImageIO/imagebuf.h",
  "include/OpenImageIO/imagebufalgo.h",
  "include/OpenImageIO/imagebufalgo_util.h",
  "include/OpenImageIO/imagecache.h",
  "include/OpenImageIO/imageio.h",
  "include/OpenImageIO/missing_math.h",
  "include/OpenImageIO/oiioversion.h",
  "include/OpenImageIO/optparser.h",
  "include/OpenImageIO/parallel.h",
  "include/OpenImageIO/paramlist.h",
  "include/OpenImageIO/platform.h",
  "include/OpenImageIO/plugin.h",
  "include/OpenImageIO/refcnt.h",
  "include/OpenImageIO/simd.h",
  "include/OpenImageIO/span.h",
  "include/OpenImageIO/strided_ptr.h",
  "include/OpenImageIO/string_view.h",
  "include/OpenImageIO/strutil.h",
  "include/OpenImageIO/sysutil.h",
  "include/OpenImageIO/texture.h",
  "include/OpenImageIO/thread.h",
  "include/OpenImageIO/tiffutils.h",
  "include/OpenImageIO/timer.h",
  "include/OpenImageIO/typedesc.h",
  "include/OpenImageIO/unittest.h",
  "include/OpenImageIO/unordered_map_concurrent.h",
  "include/OpenImageIO/ustring.h",
  "include/OpenImageIO/varyingref.h",
  "include/OpenImageIO/version.h",
  "lib/cmake/OpenImageIO/OpenImageIOConfig.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOConfigVersion.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets-release.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets.cmake",
  "lib/libOpenImageIO.2.2.7.dylib",
  "lib/libOpenImageIO.2.2.dylib",
  "lib/libOpenImageIO.dylib",
  "lib/libOpenImageIO_Util.2.2.7.dylib",
  "lib/libOpenImageIO_Util.2.2.dylib",
  "lib/libOpenImageIO_Util.dylib",
  "lib/pkgconfig/OpenImageIO.pc",
  "share/cmake/Modules/FindOpenImageIO.cmake",
  "share/doc/OpenImageIO/CHANGES-0.x.md",
  "share/doc/OpenImageIO/CHANGES-1.x.md",
  "share/doc/OpenImageIO/CHANGES.md",
  "share/doc/OpenImageIO/LICENSE.md",
  "share/doc/OpenImageIO/THIRD-PARTY.md",
  "share/fonts/OpenImageIO/DroidSans-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSans.ttf",
  "share/fonts/OpenImageIO/DroidSansMono.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSerif-BoldItalic.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Italic.ttf",
  "share/fonts/OpenImageIO/DroidSerif.ttf"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h67984f6_1",
  "build_number": 1,
  "depends": [
   "boost >=1.72.0,<1.72.1.0a0",
   "ffmpeg >=4.3.1,<4.4.0a0",
   "giflib >=5.2.1,<5.3.0a0",
   "jpeg >=9d,<10a",
   "libcxx >=10.0.1",
   "libpng >=1.6.37,<1.7.0a0",
   "libraw >=0.20.0,<0.21.0a0",
   "libtiff >=4.1.0,<5.0a0",
   "libwebp >=1.1.0,<1.2.0a0",
   "libwebp-base >=1.1.0,<2.0a0",
   "openexr >=2.5.1,<2.6.0a0",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "openimageio",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1602656764061,
  "version": "2.2.7"
 },
 "metadata_version": 1,
 "name": "openimageio",
 "raw_recipe": "{% set name = \"openimageio\" %}\n{% set version = \"2.2.7\" %}\n{% set sha256 = \"857ac83798d6d2bda5d4d11a90618ff19486da2e5a4c4ff022c5976b5746fe8c\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: Release-{{ version }}.tar.gz\n  url: https://github.com/OpenImageIO/oiio/archive/Release-{{ version }}.0.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pybind11\n    - boost\n    - ffmpeg\n    - giflib\n    - jpeg\n    - libpng\n    - libtiff\n    - libwebp\n    - openexr\n    - libraw\n  run:\n    # boost and libwebp don't have a run_exports section\n    - {{ pin_compatible('boost', max_pin='x.x.x') }}\n    - {{ pin_compatible('libwebp', max_pin='x.x') }}\n    # ffmpeg 3.x does not have a run-export section\n    - {{ pin_compatible('ffmpeg', max_pin='x.x') }}\n\noutputs:\n  - name: openimageio\n    script: install_lib.sh\n    test:\n      commands:\n        - test -d ${PREFIX}/include/OpenImageIO  # [unix]\n        - test -f ${PREFIX}/include/OpenImageIO/oiioversion.h  # [unix]\n        - test -f ${PREFIX}/lib/libOpenImageIO.so  # [linux]\n        - test -f ${PREFIX}/lib/libOpenImageIO.dylib  # [osx]\n\n  - name: py-openimageio\n    script: install_python.sh\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('cxx') }}\n      host:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n        - pybind11\n        - boost\n        - ffmpeg\n        - giflib\n        - jpeg\n        - libpng\n        - libtiff\n        - libwebp\n        - openexr\n      run:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n    test:\n      imports:\n        - OpenImageIO\n\nabout:\n  home: https://sites.google.com/site/openimageio/home\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Simple but powerful APIs for reading & writing many image formats\n  description: |\n    OpenImageIO consists of:\n    - Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n      for reading and writing image files of nearly any format, without the calling\n      application needing to know any of the details of these file formats, and indeed\n      without the calling application needing to be aware of which formats are available.\n    - Plugins implementing I/O for several popular image file formats, including TIFF,\n      JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n      Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n      WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n      (readable as individual frames). More are being developed all the time.\n    - An ImageCache class that transparently manages a cache so that it can access truly\n      vast amounts of image data (tens of thousands of image files totaling multiple TB)\n      very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - lgritz\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
   "home": "https://sites.google.com/site/openimageio/home",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Simple but powerful APIs for reading & writing many image formats"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "openimageio >=2.2.7,<2.3.0a0"
   ],
   "string": "h67984f6_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JohanMabille",
    "SylvainCorlay",
    "lgritz",
    "wolfv"
   ]
  },
  "package": {
   "name": "openimageio",
   "version": "2.2.7"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 haf1e3a3_3",
    "c-ares 1.16.1 haf1e3a3_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "cctools_osx-64 949.0.1 h5ba7a2e_7",
    "clang 10.0.1 default_hf57f61e_1",
    "clang_osx-64 10.0.1 h05bbb7f_10",
    "clangxx 10.0.1 default_hf57f61e_1",
    "clangxx_osx-64 10.0.1 h05bbb7f_10",
    "cmake 3.18.2 h9f6fb0d_0",
    "compiler-rt 10.0.1 he6db49b_0",
    "compiler-rt_osx-64 10.0.1 h033240e_0",
    "expat 2.2.9 hb1e8313_2",
    "krb5 1.17.1 h75d18d8_3",
    "ld64_osx-64 530 h3c32e8a_7",
    "libclang-cpp10 10.0.1 default_hf57f61e_1",
    "libcurl 7.71.1 h9bf37e3_8",
    "libcxx 10.0.1 h5f48129_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm10 10.0.1 h009f743_3",
    "libnghttp2 1.41.0 h7580e61_2",
    "libssh2 1.9.0 h8a08a2b_5",
    "libuv 1.40.0 haf1e3a3_0",
    "llvm-tools 10.0.1 h1341992_3",
    "ncurses 6.2 hb1e8313_2",
    "openssl 1.1.1h haf1e3a3_0",
    "rhash 1.3.6 h1de35cc_1001",
    "tapi 1000.10.8 h879752b_4",
    "tk 8.6.10 hb0a8c7a_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1009"
   ],
   "host": [
    "boost 1.72.0 py38h89463c3_1",
    "boost-cpp 1.72.0 he5d75e3_3",
    "bzip2 1.0.8 haf1e3a3_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "ffmpeg 4.3.1 h9903f1f_0",
    "freetype 2.10.3 ha233b18_0",
    "gettext 0.19.8.1 h46ab8bc_1002",
    "giflib 5.2.1 h0b31af3_2",
    "gmp 6.2.0 hb1e8313_3",
    "gnutls 3.6.13 hc269f14_0",
    "icu 67.1 hb1e8313_0",
    "ilmbase 2.5.1 hd174df1_0",
    "jpeg 9d h0b31af3_0",
    "lame 3.100 h1de35cc_1001",
    "lcms2 2.11 h174193d_0",
    "libblas 3.8.0 17_openblas",
    "libcblas 3.8.0 17_openblas",
    "libcxx 10.0.1 h5f48129_0",
    "libffi 3.2.1 hb1e8313_1007",
    "libgfortran 5.0.0 h7cc5361_12",
    "libgfortran5 9.3.0 h7cc5361_12",
    "libiconv 1.16 haf1e3a3_0",
    "liblapack 3.8.0 17_openblas",
    "libopenblas 0.3.10 openmp_h54245bb_5",
    "libpng 1.6.37 hb0a8c7a_2",
    "libraw 0.20.0 h843297d_0",
    "libtiff 4.1.0 h2ae36a8_6",
    "libwebp 1.1.0 hd3bf737_4",
    "libwebp-base 1.1.0 h0b31af3_3",
    "llvm-openmp 10.0.1 h28b9765_0",
    "lz4-c 1.9.2 hb1e8313_3",
    "ncurses 6.2 hb1e8313_2",
    "nettle 3.4.1 h3efe00b_1002",
    "numpy 1.19.2 py38h8ccc501_1",
    "openexr 2.5.1 h7475705_0",
    "openh264 2.1.1 hd174df1_0",
    "openssl 1.1.1h haf1e3a3_0",
    "pybind11 2.5.0 py38h02bb52f_1",
    "python 3.8.6 hcfdab8c_0_cpython",
    "python_abi 3.8 1_cp38",
    "readline 8.0 h0678c8f_2",
    "sqlite 3.33.0 h960bd1c_1",
    "tk 8.6.10 hb0a8c7a_1",
    "x264 1!152.20180806 h1de35cc_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1009",
    "zstd 1.4.5 h289c70a_2"
   ],
   "run": [
    "boost >=1.72.0,<1.72.1.0a0",
    "ffmpeg >=4.3.1,<4.4.0a0",
    "giflib >=5.2.1,<5.3.0a0",
    "jpeg >=9d,<10a",
    "libcxx >=10.0.1",
    "libpng >=1.6.37,<1.7.0a0",
    "libraw >=0.20.0,<0.21.0a0",
    "libtiff >=4.1.0,<5.0a0",
    "libwebp >=1.1.0,<1.2.0a0",
    "libwebp-base >=1.1.0,<2.0a0",
    "openexr >=2.5.1,<2.6.0a0",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "fn": "Release-2.2.7.tar.gz",
   "sha256": "857ac83798d6d2bda5d4d11a90618ff19486da2e5a4c4ff022c5976b5746fe8c",
   "url": "https://github.com/OpenImageIO/oiio/archive/Release-2.2.7.0.tar.gz"
  }
 },
 "version": "2.2.7"
}