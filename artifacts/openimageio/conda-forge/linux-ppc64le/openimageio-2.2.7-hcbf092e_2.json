{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.5",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz"
   ]
  },
  "home": "https://sites.google.com/site/openimageio/home",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE.md",
  "root_pkgs": [
   "setuptools 49.6.0 py38h88c697e_2",
   "nbformat 5.0.8 py_0",
   "_libgcc_mutex 0.1 conda_forge",
   "idna 2.10 pyh9f0ad1d_0",
   "expat 2.2.9 hb209c28_2",
   "gettext 0.19.8.1 h731f51d_1004",
   "libnghttp2 1.41.0 h0eba5ba_2",
   "ripgrep 12.1.1 h6eb9509_1",
   "tk 8.6.10 h151fe60_1",
   "six 1.15.0 pyh9f0ad1d_0",
   "pytz 2020.4 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "zipp 3.4.0 py_0",
   "curl 7.71.1 hfd09b2d_8",
   "python-libarchive-c 2.9 py38h88c697e_2",
   "ld_impl_linux-ppc64le 2.35.1 hf6defc1_0",
   "libev 4.33 h6eb9509_1",
   "su-exec 0.2 h6eb9509_1002",
   "patchelf 0.11 hb209c28_0",
   "conda-package-handling 1.7.2 py38h3750d88_0",
   "python-dateutil 2.8.1 py_0",
   "pip 20.2.4 py_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "lzo 2.10 h6eb9509_1000",
   "py-lief 0.10.1 py38h7f2f977_2",
   "soupsieve 2.0.1 py_1",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "tini 0.18.0 h14c3975_1001",
   "pysocks 1.7.1 py38h88c697e_2",
   "openssl 1.1.1h h6eb9509_0",
   "certifi 2020.11.8 py38hf8b3453_0",
   "libssh2 1.9.0 h0e66b82_5",
   "importlib-metadata 3.1.0 pyhd8ed1ab_0",
   "sqlite 3.33.0 h433b40a_1",
   "conda-build 3.20.5 py38h88c697e_0",
   "conda 4.9.2 py38hf8b3453_0",
   "pycosat 0.6.3 py38h3750d88_1005",
   "cryptography 3.2.1 py38h9e52ca2_0",
   "pyyaml 5.3.1 py38h3750d88_1",
   "traitlets 5.0.5 py_0",
   "liblief 0.10.1 ha4af025_2",
   "brotlipy 0.7.0 py38h3750d88_1001",
   "ipython_genutils 0.2.0 py_1",
   "clyent 1.2.2 py_1",
   "git 2.29.2 pl5320hb310f45_1",
   "jsonschema 3.2.0 py_2",
   "markupsafe 1.1.1 py38h3750d88_2",
   "bzip2 1.0.8 h6eb9509_3",
   "libxml2 2.9.10 hfa5d076_2",
   "glob2 0.7 py_0",
   "anaconda-client 1.7.2 py_0",
   "perl 5.32.0 h339bb43_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "python_abi 3.8 1_cp38",
   "patch 2.7.6 h6eb9509_1001",
   "libcurl 7.71.1 he8386ad_8",
   "pyopenssl 19.1.0 py_1",
   "chardet 3.0.4 py38h88c697e_1008",
   "xz 5.2.5 h6eb9509_1",
   "libiconv 1.16 h6eb9509_0",
   "zstd 1.4.5 h1dc757f_2",
   "requests 2.25.0 pyhd3deb0d_0",
   "c-ares 1.17.1 h339bb43_0",
   "ruamel_yaml 0.15.80 py38h3750d88_1003",
   "jupyter_core 4.7.0 py38hf8b3453_0",
   "python 3.8.6 hb656b93_0_cpython",
   "tqdm 4.53.0 pyhd8ed1ab_1",
   "pyrsistent 0.17.3 py38h69e6286_1",
   "libstdcxx-ng 9.3.0 h42fc837_17",
   "cffi 1.14.3 py38hf6601a2_1",
   "ca-certificates 2020.11.8 h1084571_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "readline 8.0 h41a240f_2",
   "attrs 20.3.0 pyhd3deb0d_0",
   "libedit 3.1.20191231 h41a240f_2",
   "ncurses 6.2 hea85c5d_4",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "krb5 1.17.2 h2004cfc_0",
   "icu 67.1 hb209c28_0",
   "lz4-c 1.9.2 hb209c28_3",
   "psutil 5.7.3 py38h3750d88_0",
   "zlib 1.2.11 h6eb9509_1010",
   "libgcc-ng 9.3.0 hb998004_17",
   "urllib3 1.25.11 py_0",
   "libgomp 9.3.0 hb998004_17",
   "libarchive 3.4.3 h75da85a_0",
   "importlib_metadata 3.1.0 hd8ed1ab_0",
   "libffi 3.2.1 hb209c28_1007",
   "pcre 8.44 hb209c28_0",
   "yaml 0.2.5 h6eb9509_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "jq 1.6 h14c3975_1000",
   "shyaml 0.6.1 py_0",
   "oniguruma 6.9.3 h339bb43_0",
   "conda-forge-ci-setup 3.5.1 py38h6345821_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Simple but powerful APIs for reading & writing many image formats",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "boost": "1.74.0",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version",
   "extend_keys"
  ],
  "ffmpeg": "4.3",
  "fortran_compiler": "gfortran",
  "giflib": "5.2",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "jpeg": "9",
  "libpng": "1.6",
  "libraw": "0.20",
  "libtiff": "4.1.0",
  "libwebp": "1.1",
  "lua": "5",
  "numpy": "1.11",
  "openexr": "2.5",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost": {
    "max_pin": "x.x.x"
   },
   "ffmpeg": {
    "max_pin": "x.x"
   },
   "jpeg": {
    "max_pin": "x"
   },
   "libpng": {
    "max_pin": "x.x"
   },
   "libtiff": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "files": [
  "include/OpenImageIO/argparse.h",
  "include/OpenImageIO/array_view.h",
  "include/OpenImageIO/atomic.h",
  "include/OpenImageIO/attrdelegate.h",
  "include/OpenImageIO/benchmark.h",
  "include/OpenImageIO/color.h",
  "include/OpenImageIO/dassert.h",
  "include/OpenImageIO/deepdata.h",
  "include/OpenImageIO/detail/fmt/core.h",
  "include/OpenImageIO/detail/fmt/format-inl.h",
  "include/OpenImageIO/detail/fmt/format.h",
  "include/OpenImageIO/detail/fmt/ostream.h",
  "include/OpenImageIO/detail/fmt/printf.h",
  "include/OpenImageIO/detail/pugixml/pugiconfig.hpp",
  "include/OpenImageIO/detail/pugixml/pugixml.cpp",
  "include/OpenImageIO/detail/pugixml/pugixml.hpp",
  "include/OpenImageIO/errorhandler.h",
  "include/OpenImageIO/export.h",
  "include/OpenImageIO/filesystem.h",
  "include/OpenImageIO/filter.h",
  "include/OpenImageIO/fmath.h",
  "include/OpenImageIO/fstream_mingw.h",
  "include/OpenImageIO/function_view.h",
  "include/OpenImageIO/hash.h",
  "include/OpenImageIO/image_view.h",
  "include/OpenImageIO/imagebuf.h",
  "include/OpenImageIO/imagebufalgo.h",
  "include/OpenImageIO/imagebufalgo_util.h",
  "include/OpenImageIO/imagecache.h",
  "include/OpenImageIO/imageio.h",
  "include/OpenImageIO/missing_math.h",
  "include/OpenImageIO/oiioversion.h",
  "include/OpenImageIO/optparser.h",
  "include/OpenImageIO/parallel.h",
  "include/OpenImageIO/paramlist.h",
  "include/OpenImageIO/platform.h",
  "include/OpenImageIO/plugin.h",
  "include/OpenImageIO/refcnt.h",
  "include/OpenImageIO/simd.h",
  "include/OpenImageIO/span.h",
  "include/OpenImageIO/strided_ptr.h",
  "include/OpenImageIO/string_view.h",
  "include/OpenImageIO/strutil.h",
  "include/OpenImageIO/sysutil.h",
  "include/OpenImageIO/texture.h",
  "include/OpenImageIO/thread.h",
  "include/OpenImageIO/tiffutils.h",
  "include/OpenImageIO/timer.h",
  "include/OpenImageIO/typedesc.h",
  "include/OpenImageIO/unittest.h",
  "include/OpenImageIO/unordered_map_concurrent.h",
  "include/OpenImageIO/ustring.h",
  "include/OpenImageIO/varyingref.h",
  "include/OpenImageIO/version.h",
  "lib/cmake/OpenImageIO/OpenImageIOConfig.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOConfigVersion.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets-release.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets.cmake",
  "lib/libOpenImageIO.so",
  "lib/libOpenImageIO.so.2.2",
  "lib/libOpenImageIO.so.2.2.7",
  "lib/libOpenImageIO_Util.so",
  "lib/libOpenImageIO_Util.so.2.2",
  "lib/libOpenImageIO_Util.so.2.2.7",
  "lib/pkgconfig/OpenImageIO.pc",
  "share/cmake/Modules/FindOpenImageIO.cmake",
  "share/doc/OpenImageIO/CHANGES-0.x.md",
  "share/doc/OpenImageIO/CHANGES-1.x.md",
  "share/doc/OpenImageIO/CHANGES.md",
  "share/doc/OpenImageIO/LICENSE.md",
  "share/doc/OpenImageIO/THIRD-PARTY.md",
  "share/fonts/OpenImageIO/DroidSans-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSans.ttf",
  "share/fonts/OpenImageIO/DroidSansMono.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSerif-BoldItalic.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Italic.ttf",
  "share/fonts/OpenImageIO/DroidSerif.ttf"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "hcbf092e_2",
  "build_number": 2,
  "depends": [
   "boost >=1.74.0,<1.74.1.0a0",
   "ffmpeg >=4.3.1,<4.4.0a0",
   "giflib >=5.2.1,<5.3.0a0",
   "jpeg >=9d,<10a",
   "libgcc-ng >=9.3.0",
   "libpng >=1.6.37,<1.7.0a0",
   "libraw >=0.20.2,<0.21.0a0",
   "libstdcxx-ng >=9.3.0",
   "libtiff >=4.1.0,<5.0a0",
   "libwebp >=1.1.0,<1.2.0a0",
   "libwebp-base >=1.1.0,<2.0a0",
   "openexr >=2.5.3,<2.6.0a0",
   "python_abi 3.6.* *_cp36m"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "openimageio",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1606408872904,
  "version": "2.2.7"
 },
 "metadata_version": 1,
 "name": "openimageio",
 "raw_recipe": "{% set name = \"openimageio\" %}\n{% set version = \"2.2.7\" %}\n{% set sha256 = \"857ac83798d6d2bda5d4d11a90618ff19486da2e5a4c4ff022c5976b5746fe8c\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: Release-{{ version }}.tar.gz\n  url: https://github.com/OpenImageIO/oiio/archive/Release-{{ version }}.0.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n  host:\n    - python\n    - pybind11\n    - boost\n    - ffmpeg\n    - giflib\n    - jpeg\n    - libpng\n    - libtiff\n    - libwebp\n    - openexr\n    - libraw\n  run:\n    # boost and libwebp don't have a run_exports section\n    - {{ pin_compatible('boost', max_pin='x.x.x') }}\n    - {{ pin_compatible('libwebp', max_pin='x.x') }}\n    # ffmpeg 3.x does not have a run-export section\n    - {{ pin_compatible('ffmpeg', max_pin='x.x') }}\n\noutputs:\n  - name: openimageio\n    script: install_lib.sh\n    test:\n      commands:\n        - test -d ${PREFIX}/include/OpenImageIO  # [unix]\n        - test -f ${PREFIX}/include/OpenImageIO/oiioversion.h  # [unix]\n        - test -f ${PREFIX}/lib/libOpenImageIO.so  # [linux]\n        - test -f ${PREFIX}/lib/libOpenImageIO.dylib  # [osx]\n\n  - name: py-openimageio\n    script: install_python.sh\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n        - pybind11\n        - boost\n        - ffmpeg\n        - giflib\n        - jpeg\n        - libpng\n        - libtiff\n        - libwebp\n        - openexr\n      run:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n    test:\n      imports:\n        - OpenImageIO\n\nabout:\n  home: https://sites.google.com/site/openimageio/home\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Simple but powerful APIs for reading & writing many image formats\n  description: |\n    OpenImageIO consists of:\n    - Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n      for reading and writing image files of nearly any format, without the calling\n      application needing to know any of the details of these file formats, and indeed\n      without the calling application needing to be aware of which formats are available.\n    - Plugins implementing I/O for several popular image file formats, including TIFF,\n      JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n      Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n      WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n      (readable as individual frames). More are being developed all the time.\n    - An ImageCache class that transparently manages a cache so that it can access truly\n      vast amounts of image data (tens of thousands of image files totaling multiple TB)\n      very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - lgritz\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
   "home": "https://sites.google.com/site/openimageio/home",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Simple but powerful APIs for reading & writing many image formats"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "openimageio >=2.2.7,<2.3.0a0"
   ],
   "string": "hcbf092e_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JohanMabille",
    "SylvainCorlay",
    "lgritz",
    "wolfv"
   ]
  },
  "package": {
   "name": "openimageio",
   "version": "2.2.7"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.35.1 h014d743_0",
    "binutils_linux-ppc64le 2.35 hd8189f2_29",
    "bzip2 1.0.8 h6eb9509_3",
    "c-ares 1.17.1 h339bb43_0",
    "ca-certificates 2020.11.8 h1084571_0",
    "cmake 3.19.1 hc6267a1_0",
    "expat 2.2.9 hb209c28_2",
    "gcc_impl_linux-ppc64le 9.3.0 h8de11e6_17",
    "gcc_linux-ppc64le 9.3.0 h1b213c7_29",
    "gxx_impl_linux-ppc64le 9.3.0 hdcd7d83_17",
    "gxx_linux-ppc64le 9.3.0 hab34850_29",
    "kernel-headers_linux-ppc64le 3.10.0 hbe0c576_10",
    "krb5 1.17.2 h2004cfc_0",
    "ld_impl_linux-ppc64le 2.35.1 hf6defc1_0",
    "libcurl 7.71.1 he8386ad_8",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-devel_linux-ppc64le 9.3.0 h206f0cf_17",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgomp 9.3.0 hb998004_17",
    "libnghttp2 1.41.0 h0eba5ba_2",
    "libssh2 1.9.0 h0e66b82_5",
    "libstdcxx-devel_linux-ppc64le 9.3.0 h20c6264_17",
    "libstdcxx-ng 9.3.0 h42fc837_17",
    "libuv 1.40.0 hf817498_0",
    "make 4.3 hf817498_1",
    "ncurses 6.2 hea85c5d_4",
    "openssl 1.1.1h h6eb9509_0",
    "rhash 1.3.6 h6eb9509_1001",
    "sysroot_linux-ppc64le 2.17 h8b29623_10",
    "tk 8.6.10 h151fe60_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h6eb9509_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "boost 1.74.0 py36hf915a8e_1",
    "boost-cpp 1.74.0 h19ce0eb_0",
    "bzip2 1.0.8 h6eb9509_3",
    "ca-certificates 2020.11.8 h1084571_0",
    "ffmpeg 4.3.1 h0c2983a_1",
    "freetype 2.10.4 hf907cff_0",
    "giflib 5.2.1 h339bb43_2",
    "gmp 6.2.1 hea85c5d_0",
    "gnutls 3.6.13 hb04485b_1",
    "icu 67.1 hb209c28_0",
    "ilmbase 2.5.3 hb61f777_0",
    "jpeg 9d h339bb43_0",
    "lame 3.100 h14c3975_1001",
    "lcms2 2.11 h6d9531b_1",
    "ld_impl_linux-ppc64le 2.35.1 hf6defc1_0",
    "libblas 3.9.0 3_openblas",
    "libcblas 3.9.0 3_openblas",
    "libffi 3.2.1 hb209c28_1007",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgfortran-ng 9.3.0 hf44303d_17",
    "libgfortran5 9.3.0 hf44303d_17",
    "libgomp 9.3.0 hb998004_17",
    "libiconv 1.16 h6eb9509_0",
    "liblapack 3.9.0 3_openblas",
    "libopenblas 0.3.12 pthreads_h4812303_1",
    "libpng 1.6.37 h38e1d09_2",
    "libraw 0.20.2 hc389b2a_0",
    "libstdcxx-ng 9.3.0 h42fc837_17",
    "libtiff 4.1.0 h1719985_6",
    "libwebp 1.1.0 hb1bed59_4",
    "libwebp-base 1.1.0 h339bb43_3",
    "lz4-c 1.9.2 hb209c28_3",
    "ncurses 6.2 hea85c5d_4",
    "nettle 3.6 ha07698b_0",
    "numpy 1.19.4 py36h9d7d35c_1",
    "openexr 2.5.3 h6332354_0",
    "openh264 2.1.1 hb61f777_0",
    "openssl 1.1.1h h6eb9509_0",
    "pybind11 2.6.1 py36hf049f50_0",
    "python 3.6.11 h1e5e406_2_cpython",
    "python_abi 3.6 1_cp36m",
    "readline 8.0 h41a240f_2",
    "sqlite 3.33.0 h433b40a_1",
    "tk 8.6.10 h151fe60_1",
    "x264 1!152.20180806 h14c3975_0",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h6eb9509_1010",
    "zstd 1.4.5 h1dc757f_2"
   ],
   "run": [
    "boost >=1.74.0,<1.74.1.0a0",
    "ffmpeg >=4.3.1,<4.4.0a0",
    "giflib >=5.2.1,<5.3.0a0",
    "jpeg >=9d,<10a",
    "libgcc-ng >=9.3.0",
    "libpng >=1.6.37,<1.7.0a0",
    "libraw >=0.20.2,<0.21.0a0",
    "libstdcxx-ng >=9.3.0",
    "libtiff >=4.1.0,<5.0a0",
    "libwebp >=1.1.0,<1.2.0a0",
    "libwebp-base >=1.1.0,<2.0a0",
    "openexr >=2.5.3,<2.6.0a0",
    "python_abi 3.6.* *_cp36m"
   ]
  },
  "source": {
   "fn": "Release-2.2.7.tar.gz",
   "sha256": "857ac83798d6d2bda5d4d11a90618ff19486da2e5a4c4ff022c5976b5746fe8c",
   "url": "https://github.com/OpenImageIO/oiio/archive/Release-2.2.7.0.tar.gz"
  }
 },
 "version": "2.2.7"
}