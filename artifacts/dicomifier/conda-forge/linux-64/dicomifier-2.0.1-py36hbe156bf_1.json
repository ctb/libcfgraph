{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.4",
  "conda_private": false,
  "conda_version": "4.8.5",
  "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
  "dev_url": "https://github.com/lamyj/dicomifier",
  "doc_url": "https://github.com/lamyj/dicomifier",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "home": "https://github.com/lamyj/dicomifier",
  "identifiers": [],
  "keywords": [],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "pytz 2020.1 pyh9f0ad1d_0",
   "urllib3 1.25.10 py_0",
   "bzip2 1.0.8 h516909a_3",
   "py-lief 0.10.1 py38h348cfbe_2",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "zstd 1.4.5 h6597ccf_2",
   "libgomp 9.3.0 h5dbcf3e_17",
   "tk 8.6.10 hed695b0_1",
   "pyopenssl 19.1.0 py_1",
   "ncurses 6.2 he1b5a44_2",
   "patchelf 0.11 he1b5a44_0",
   "setuptools 49.6.0 py38h924ce5b_2",
   "readline 8.0 he28a2e2_2",
   "lz4-c 1.9.2 he1b5a44_3",
   "zlib 1.2.11 h516909a_1009",
   "patch 2.7.6 h14c3975_1001",
   "zipp 3.3.0 py_0",
   "anaconda-client 1.7.2 py_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "git 2.28.0 pl526h5e3e691_1",
   "lzo 2.10 h516909a_1000",
   "pip 20.2.3 py_0",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "tini 0.18.0 h14c3975_1001",
   "libev 4.33 h516909a_1",
   "sqlite 3.33.0 h4cf870e_1",
   "yaml 0.2.5 h516909a_0",
   "clyent 1.2.2 py_1",
   "libnghttp2 1.41.0 h8cfc5f6_2",
   "importlib-metadata 2.0.0 py_1",
   "pkginfo 1.5.0.1 py_0",
   "idna 2.10 pyh9f0ad1d_0",
   "openssl 1.1.1h h516909a_0",
   "psutil 5.7.2 py38h8df0ef7_1",
   "curl 7.71.1 he644dc0_8",
   "pycosat 0.6.3 py38h8df0ef7_1005",
   "conda 4.8.5 py38h924ce5b_2",
   "nbformat 5.0.7 py_0",
   "perl 5.26.2 h516909a_1006",
   "six 1.15.0 pyh9f0ad1d_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "libarchive 3.4.3 hf837322_0",
   "libffi 3.2.1 he1b5a44_1007",
   "cffi 1.14.3 py38h1bdcb99_1",
   "conda-package-handling 1.7.0 py38h8df0ef7_6",
   "requests 2.24.0 pyh9f0ad1d_0",
   "_openmp_mutex 4.5 1_gnu",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "tqdm 4.50.2 pyh9f0ad1d_0",
   "su-exec 0.2 h516909a_1002",
   "traitlets 5.0.4 py_1",
   "ripgrep 12.1.1 h516909a_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "soupsieve 2.0.1 py_1",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "expat 2.2.9 he1b5a44_2",
   "jsonschema 3.2.0 py_2",
   "libiconv 1.16 h516909a_0",
   "liblief 0.10.1 he1b5a44_2",
   "pcre 8.44 he1b5a44_0",
   "cryptography 3.1.1 py38hb23e4d4_1",
   "ld_impl_linux-64 2.35 h769bd43_9",
   "ipython_genutils 0.2.0 py_1",
   "icu 67.1 he1b5a44_0",
   "brotlipy 0.7.0 py38h8df0ef7_1001",
   "ca-certificates 2020.6.20 hecda079_0",
   "libgcc-ng 9.3.0 h5dbcf3e_17",
   "libssh2 1.9.0 hab1572f_5",
   "jupyter_core 4.6.3 py38h32f6830_2",
   "libxml2 2.9.10 h68273f3_2",
   "ruamel_yaml 0.15.80 py38h8df0ef7_1003",
   "xz 5.2.5 h516909a_1",
   "libcurl 7.71.1 hcdd3856_8",
   "_libgcc_mutex 0.1 conda_forge",
   "libstdcxx-ng 9.3.0 h2ae2ef3_17",
   "python 3.8.6 h852b56e_0_cpython",
   "c-ares 1.16.1 h516909a_3",
   "python-libarchive-c 2.9 py38h924ce5b_2",
   "python-dateutil 2.8.1 py_0",
   "krb5 1.17.1 hfafb76e_3",
   "pyrsistent 0.17.3 py38h1e0a361_1",
   "chardet 3.0.4 py38h924ce5b_1008",
   "markupsafe 1.1.1 py38h8df0ef7_2",
   "libedit 3.1.20191231 he28a2e2_2",
   "python_abi 3.8 1_cp38",
   "pyyaml 5.3.1 py38h8df0ef7_1",
   "importlib_metadata 2.0.0 1",
   "certifi 2020.6.20 py38h924ce5b_2",
   "pysocks 1.7.1 py38h924ce5b_2",
   "glob2 0.7 py_0",
   "oniguruma 6.9.3 h516909a_0",
   "conda-build 3.20.4 py38h924ce5b_0",
   "conda-env 2.6.0 1",
   "jq 1.6 h14c3975_1000",
   "conda-forge-ci-setup 3.4.0 py38h9b328fc_0",
   "shyaml 0.6.1 py_0",
   "click 7.1.2 pyh9f0ad1d_0"
  ],
  "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.72.0",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/bruker2dicom",
  "bin/dicom2nifti",
  "bin/dicomifier",
  "include/dicomifier/Dataset.h",
  "include/dicomifier/Exception.h",
  "include/dicomifier/Field.h",
  "include/dicomifier/grammar.h",
  "include/dicomifier/grammar.txx",
  "lib/libdicomifier.so",
  "lib/libdicomifier.so.2",
  "lib/libdicomifier.so.2.0.1",
  "lib/python3.6/site-packages/dicomifier/__init__.py",
  "lib/python3.6/site-packages/dicomifier/__main__.py",
  "lib/python3.6/site-packages/dicomifier/_dicomifier.cpython-36m-x86_64-linux-gnu.so",
  "lib/python3.6/site-packages/dicomifier/bruker.cpython-36m-x86_64-linux-gnu.so",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/__init__.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/convert.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/frame_index_generator.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/io/__init__.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/io/flat_dicom_writer.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/io/nested_dicom_writer.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/iods/__init__.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/iods/enhanced_mr_image_storage.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/iods/mr_image_storage.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/__init__.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/equipment.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/frame_of_reference.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/image.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/mr.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/patient.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/series.py",
  "lib/python3.6/site-packages/dicomifier/bruker_to_dicom/modules/study.py",
  "lib/python3.6/site-packages/dicomifier/commands/__init__.py",
  "lib/python3.6/site-packages/dicomifier/commands/diffusion_scheme.py",
  "lib/python3.6/site-packages/dicomifier/commands/list.py",
  "lib/python3.6/site-packages/dicomifier/commands/to_dicom.py",
  "lib/python3.6/site-packages/dicomifier/commands/to_nifti.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/__init__.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/convert.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/image.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/io.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/meta_data.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/series/__init__.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/series/default_series_finder.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/series/series_finder.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/series/siemens_xa_classic_2d_series_finder.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/siemens.py",
  "lib/python3.6/site-packages/dicomifier/dicom_to_nifti/stacks.py",
  "lib/python3.6/site-packages/dicomifier/meta_data.py",
  "lib/python3.6/site-packages/dicomifier/nifti/__init__.py",
  "lib/python3.6/site-packages/dicomifier/nifti/diffusion.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36hbe156bf_1",
  "build_number": 1,
  "depends": [
   "boost-cpp >=1.72.0,<1.72.1.0a0",
   "libgcc-ng >=7.5.0",
   "libstdcxx-ng >=7.5.0",
   "nibabel",
   "numpy",
   "odil >=0.12",
   "python >=3.6,<3.7.0a0",
   "python-dateutil",
   "python_abi 3.6.* *_cp36m"
  ],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "name": "dicomifier",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1602679737929,
  "version": "2.0.1"
 },
 "metadata_version": 1,
 "name": "dicomifier",
 "raw_recipe": "{% set name = \"dicomifier\" %}\n{% set version = \"2.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lamyj/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: f2a89398b8bb8bb4df0dce7844d0b45be383ab0bb839dd835801e943b3d616dc\n  patches: []\n\nbuild:\n  number: 1\n  skip: true  # [py<=35 or win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - odil >=0.12\n    - pybind11\n    - python\n  run:\n    - boost-cpp\n    - nibabel\n    - numpy\n    - odil >=0.12\n    - python\n    - python-dateutil\n\ntest:\n  imports:\n    - dicomifier\n  commands:\n    - bruker2dicom --help > /dev/null\n    - dicom2nifti --help > /dev/null\n\nabout:\n  home: https://github.com/lamyj/dicomifier\n  license: CECILL-B\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: Convert data from Bruker to DICOM and from DICOM to NIfTI\n\n  description: |\n    Dicomifier is a set of tools to convert Bruker data to DICOM files, and \n    DICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo \n    time or subject parameters such as weight or height) throughout the \n    conversion process, storing them in JSON format, allowing easy access in \n    multiple environments. The meta-data from Bruker is aligned on the DICOM \n    dictionary for unified human and animal processing pipelines.\n\n  doc_url: https://github.com/lamyj/dicomifier\n  dev_url: https://github.com/lamyj/dicomifier\n\nextra:\n  recipe-maintainers:\n    - lamyj\n",
 "rendered_recipe": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "1",
   "string": "py36hbe156bf_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "2.0.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35 h18a2f87_9",
    "binutils_linux-64 2.35 hc3fd857_29",
    "bzip2 1.0.8 h516909a_3",
    "c-ares 1.16.1 h516909a_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "cmake 3.18.2 h5c55442_0",
    "expat 2.2.9 he1b5a44_2",
    "gcc_impl_linux-64 7.5.0 hda68d29_13",
    "gcc_linux-64 7.5.0 he2a3fca_29",
    "gxx_impl_linux-64 7.5.0 h64c220c_13",
    "gxx_linux-64 7.5.0 h547f3ba_29",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "krb5 1.17.1 hfafb76e_3",
    "ld_impl_linux-64 2.35 h769bd43_9",
    "libcurl 7.71.1 hcdd3856_8",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-ng 9.3.0 h5dbcf3e_17",
    "libgomp 9.3.0 h5dbcf3e_17",
    "libnghttp2 1.41.0 h8cfc5f6_2",
    "libssh2 1.9.0 hab1572f_5",
    "libstdcxx-ng 9.3.0 h2ae2ef3_17",
    "libuv 1.40.0 h516909a_0",
    "ncurses 6.2 he1b5a44_2",
    "ninja 1.10.1 hc9558a2_1",
    "openssl 1.1.1h h516909a_0",
    "rhash 1.3.6 h516909a_1001",
    "sysroot_linux-64 2.12 h77966d4_13",
    "tk 8.6.10 hed695b0_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "boost-cpp 1.72.0 h9359b55_3",
    "bzip2 1.0.8 h516909a_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "icu 67.1 he1b5a44_0",
    "jsoncpp 1.8.4 hc9558a2_1002",
    "ld_impl_linux-64 2.35 h769bd43_9",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.3.0 h5dbcf3e_17",
    "libgomp 9.3.0 h5dbcf3e_17",
    "libstdcxx-ng 9.3.0 h2ae2ef3_17",
    "lz4-c 1.9.2 he1b5a44_3",
    "ncurses 6.2 he1b5a44_2",
    "odil 0.12.0 py36h726a249_3",
    "openssl 1.1.1h h516909a_0",
    "pybind11 2.5.0 py36hdb11119_1",
    "python 3.6.11 h4d41432_2_cpython",
    "python_abi 3.6 1_cp36m",
    "readline 8.0 he28a2e2_2",
    "sqlite 3.33.0 h4cf870e_1",
    "tk 8.6.10 hed695b0_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010",
    "zstd 1.4.5 h6597ccf_2"
   ],
   "run": [
    "boost-cpp >=1.72.0,<1.72.1.0a0",
    "libgcc-ng >=7.5.0",
    "libstdcxx-ng >=7.5.0",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python >=3.6,<3.7.0a0",
    "python-dateutil",
    "python_abi 3.6.* *_cp36m"
   ]
  },
  "source": {
   "sha256": "f2a89398b8bb8bb4df0dce7844d0b45be383ab0bb839dd835801e943b3d616dc",
   "url": "https://github.com/lamyj/dicomifier/archive/v2.0.1.tar.gz"
  },
  "test": {
   "commands": [
    "bruker2dicom --help > /dev/null",
    "dicom2nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier"
   ]
  }
 },
 "version": "2.0.1"
}