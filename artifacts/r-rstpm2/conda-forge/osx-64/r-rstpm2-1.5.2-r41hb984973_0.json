{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.1",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "home": "http://github.com/mclements/rstpm2",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0-or-later",
  "license_family": "GPL3",
  "license_file": [
   "/Users/runner/miniforge3/conda-bld/r-rstpm2_1621984041985/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/GPL-2",
   "/Users/runner/miniforge3/conda-bld/r-rstpm2_1621984041985/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/GPL-3"
  ],
  "root_pkgs": [
   "python_abi 3.9 1_cp39",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "ca-certificates 2020.12.5 h033912b_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "c-ares 1.17.1 h0d85af4_1",
   "idna 2.10 pyh9f0ad1d_0",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "ruamel_yaml 0.15.80 py39h4b0b724_1004",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "importlib-metadata 4.0.1 py39h6e9494a_0",
   "pyyaml 5.4.1 py39hcbf5805_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "krb5 1.19.1 hcfbf3a7_0",
   "soupsieve 2.0.1 py_1",
   "pip 21.1.2 pyhd8ed1ab_0",
   "jupyter_core 4.7.1 py39h6e9494a_0",
   "curl 7.76.1 hb861fe1_2",
   "requests 2.25.1 pyhd3deb0d_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "libcurl 7.76.1 hf45b732_2",
   "cffi 1.14.5 py39h319c39b_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "perl 5.32.0 hbcb3906_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "cryptography 3.4.7 py39ha2c9959_0",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "liblief 0.11.4 he49afe7_0",
   "sqlite 3.35.5 h44b9ce1_0",
   "click 8.0.1 py39h6e9494a_0",
   "tk 8.6.10 h0419947_1",
   "xz 5.2.5 haf1e3a3_1",
   "tzdata 2021a he74cb21_0",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "psutil 5.8.0 py39h89e85a6_1",
   "zlib 1.2.11 h7795811_1010",
   "pcre 8.44 hb1e8313_0",
   "libffi 3.3 h046ec9c_2",
   "markupsafe 2.0.1 py39h89e85a6_0",
   "git 2.30.2 pl5320h2551975_1",
   "py-lief 0.11.4 py39h9fcab8e_0",
   "libcxx 11.1.0 habf9029_0",
   "gettext 0.19.8.1 h7937167_1005",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39h6e9494a_1",
   "conda-package-handling 1.7.3 py39h89e85a6_0",
   "python-libarchive-c 2.9 py39h6e9494a_2",
   "conda-build 3.21.4 py39h6e9494a_0",
   "pysocks 1.7.1 py39h6e9494a_3",
   "urllib3 1.26.4 pyhd8ed1ab_0",
   "python 3.9.4 h9133fd0_0_cpython",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "openssl 1.1.1k h0d85af4_0",
   "zstd 1.5.0 h582d3a0_0",
   "conda 4.10.1 py39h6e9494a_0",
   "ripgrep 12.1.1 haf1e3a3_1",
   "pycosat 0.6.3 py39hcbf5805_1006",
   "tqdm 4.60.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "libxml2 2.9.12 h93ec3fd_0",
   "brotlipy 0.7.0 py39hcbf5805_1001",
   "setuptools 49.6.0 py39h6e9494a_3",
   "pyrsistent 0.17.3 py39hcbf5805_2",
   "conda-forge-ci-setup 3.9.4 py39hb0a6171_0",
   "bzip2 1.0.8 h0d85af4_4",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libnghttp2 1.43.0 h07e645a_0",
   "clyent 1.2.2 py_1",
   "libarchive 3.5.1 h2b60450_2",
   "libssh2 1.9.0 h52ee1ee_6",
   "lz4-c 1.9.3 h046ec9c_0",
   "certifi 2020.12.5 py39h6e9494a_1",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 haf1e3a3_1000",
   "python-dateutil 2.8.1 py_0",
   "expat 2.4.1 he49afe7_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "icu 68.1 h74dc148_0"
  ],
  "summary": "R implementation of generalized survival models (GSMs), smooth accelerated failure time (AFT) models and Markov multi-state models. For the GSMs, g(S(t|x))=eta(t,x) for a link function g, survival S at time t with covariates x and a linear predictor eta(t,x). The main assumption is that the time effect(s) are smooth <doi:10.1177/0962280216664760>. For fully parametric models with natural splines, this re-implements Stata's 'stpm2' function, which are flexible parametric survival models developed by Royston and colleagues. We have extended the parametric models to include any smooth parametric smoothers for time. We have also extended the model to include any smooth penalized smoothers from the 'mgcv' package, using penalized likelihood. These models include left truncation, right censoring, interval censoring, gamma frailties and normal random effects <doi:10.1002/sim.7451>. For the smooth AFTs, S(t|x) = S_0(t*eta(t,x)), where the baseline survival function S_0(t)=exp(-exp(eta_0(t))) is modelled for natural splines for eta_0, and the time-dependent cumulative acceleration factor eta(t,x)=\\int_0^t exp(eta_1(u,x)) du for log acceleration factor eta_1(u,x). The Markov multi-state models allow for a range of models with smooth transitions to predict transition probabilities, length of stay, utilities and costs, with differences, ratios and standardisation.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "11",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "9",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libblas": "3.8 *netlib",
  "liblapack": "3.8 *netlib",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "4.1",
  "target_platform": "osx-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "fortran_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/R/library/rstpm2/CITATION",
  "lib/R/library/rstpm2/DESCRIPTION",
  "lib/R/library/rstpm2/INDEX",
  "lib/R/library/rstpm2/Meta/Rd.rds",
  "lib/R/library/rstpm2/Meta/data.rds",
  "lib/R/library/rstpm2/Meta/features.rds",
  "lib/R/library/rstpm2/Meta/hsearch.rds",
  "lib/R/library/rstpm2/Meta/links.rds",
  "lib/R/library/rstpm2/Meta/nsInfo.rds",
  "lib/R/library/rstpm2/Meta/package.rds",
  "lib/R/library/rstpm2/Meta/vignette.rds",
  "lib/R/library/rstpm2/NAMESPACE",
  "lib/R/library/rstpm2/NEWS.md",
  "lib/R/library/rstpm2/R/rstpm2",
  "lib/R/library/rstpm2/R/rstpm2.rdb",
  "lib/R/library/rstpm2/R/rstpm2.rdx",
  "lib/R/library/rstpm2/Rcpp-tests.R",
  "lib/R/library/rstpm2/Thumbs.db",
  "lib/R/library/rstpm2/aft.aux",
  "lib/R/library/rstpm2/aft.pdf",
  "lib/R/library/rstpm2/auto/aft.el",
  "lib/R/library/rstpm2/auto/math.el",
  "lib/R/library/rstpm2/competing_risks.R",
  "lib/R/library/rstpm2/data/Rdata.rdb",
  "lib/R/library/rstpm2/data/Rdata.rds",
  "lib/R/library/rstpm2/data/Rdata.rdx",
  "lib/R/library/rstpm2/doc/Introduction.R",
  "lib/R/library/rstpm2/doc/Introduction.Rnw",
  "lib/R/library/rstpm2/doc/Introduction.pdf",
  "lib/R/library/rstpm2/doc/SimpleGuide.R",
  "lib/R/library/rstpm2/doc/SimpleGuide.Rnw",
  "lib/R/library/rstpm2/doc/SimpleGuide.pdf",
  "lib/R/library/rstpm2/doc/index.html",
  "lib/R/library/rstpm2/doc/multistate.Rnw",
  "lib/R/library/rstpm2/doc/multistate.pdf",
  "lib/R/library/rstpm2/doc/predictnl.R",
  "lib/R/library/rstpm2/doc/predictnl.Rnw",
  "lib/R/library/rstpm2/doc/predictnl.pdf",
  "lib/R/library/rstpm2/fig1-README.md.jpg",
  "lib/R/library/rstpm2/fig2-README.md.jpg",
  "lib/R/library/rstpm2/help/AnIndex",
  "lib/R/library/rstpm2/help/aliases.rds",
  "lib/R/library/rstpm2/help/paths.rds",
  "lib/R/library/rstpm2/help/rstpm2.rdb",
  "lib/R/library/rstpm2/help/rstpm2.rdx",
  "lib/R/library/rstpm2/html/00Index.html",
  "lib/R/library/rstpm2/html/R.css",
  "lib/R/library/rstpm2/libs/rstpm2.dylib",
  "lib/R/library/rstpm2/math.aux",
  "lib/R/library/rstpm2/math.fdb_latexmk",
  "lib/R/library/rstpm2/math.fls",
  "lib/R/library/rstpm2/math.html",
  "lib/R/library/rstpm2/math.input",
  "lib/R/library/rstpm2/math.org",
  "lib/R/library/rstpm2/math.out",
  "lib/R/library/rstpm2/math.toc",
  "lib/R/library/rstpm2/model.bug",
  "lib/R/library/rstpm2/pstpm2.out",
  "lib/R/library/rstpm2/test.do",
  "lib/R/library/rstpm2/tutorial/auto/timevar.el",
  "lib/R/library/rstpm2/tutorial/haz_1.png",
  "lib/R/library/rstpm2/tutorial/hazz_1.png",
  "lib/R/library/rstpm2/tutorial/histo_1.png",
  "lib/R/library/rstpm2/tutorial/histo_2.png",
  "lib/R/library/rstpm2/tutorial/surv_1.png",
  "lib/R/library/rstpm2/tutorial/surv_1_age.png",
  "lib/R/library/rstpm2/tutorial/surv_5_age.png",
  "lib/R/library/rstpm2/tutorial/timevar.html",
  "lib/R/library/rstpm2/tutorial/timevar.org",
  "lib/R/library/rstpm2/tutorial/timevar.pdf",
  "lib/R/library/rstpm2/tutorial/timevar2.html",
  "lib/R/library/rstpm2/tvc-cox.R",
  "lib/R/library/rstpm2/unitTests/runTests.R",
  "lib/R/library/rstpm2/unitTests/runit.Basic.R",
  "lib/R/library/rstpm2/working_code.R"
 ],
 "index": {
  "arch": "x86_64",
  "build": "r41hb984973_0",
  "build_number": 0,
  "depends": [
   "libblas >=3.8.0,<4.0a0",
   "libcxx >=11.1.0",
   "libgfortran 5.*",
   "libgfortran5 >=9.3.0",
   "liblapack >=3.8.0,<4.0a0",
   "r-base >=4.1,<4.2.0a0",
   "r-bbmle >=1.0.20",
   "r-desolve",
   "r-fastghquad",
   "r-mgcv",
   "r-rcpp >=0.10.2",
   "r-rcpparmadillo",
   "r-survival"
  ],
  "license": "GPL-2.0-or-later",
  "license_family": "GPL3",
  "name": "r-rstpm2",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1621984606238,
  "version": "1.5.2"
 },
 "metadata_version": 1,
 "name": "r-rstpm2",
 "raw_recipe": "{% set version = \"1.5.2\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rstpm2\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/rstpm2_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rstpm2/rstpm2_{{ version }}.tar.gz\n  sha256: a49e3d70473a31d54289ae271b825cda162fda02cb7701abb1532c50c41fd430\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ compiler('fortran') }}        # [not win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - libblas\n    - liblapack\n    - r-base\n    - r-bh\n    - r-rcpp >=0.10.2\n    - r-rcpparmadillo\n    - r-bbmle >=1.0.20\n    - r-desolve\n    - r-fastghquad\n    - r-mgcv\n    - r-survival\n  run:\n    - libblas\n    - liblapack\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    #- r-bh\n    - r-rcpp >=0.10.2\n    - r-rcpparmadillo\n    - r-bbmle >=1.0.20\n    - r-desolve\n    - r-fastghquad\n    - r-mgcv\n    - r-survival\n\ntest:\n  commands:\n    - $R -e \"library('rstpm2')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rstpm2')\\\"\"  # [win]\n\nabout:\n  home: http://github.com/mclements/rstpm2\n  license: GPL-2.0-or-later\n  summary: R implementation of generalized survival models (GSMs), smooth accelerated failure time (AFT) models and Markov multi-state models. For the GSMs, g(S(t|x))=eta(t,x) for a link function g, survival S at time t with covariates x and a linear predictor eta(t,x). The main assumption is that the time effect(s) are\n    smooth <doi:10.1177/0962280216664760>. For fully parametric models with natural splines, this re-implements Stata's 'stpm2' function, which are flexible parametric survival models developed by Royston and colleagues. We have extended the parametric models to include any smooth parametric smoothers for time. We have also\n    extended the model to include any smooth penalized smoothers from the 'mgcv' package, using penalized likelihood. These models include left truncation, right censoring, interval censoring, gamma frailties and normal random effects <doi:10.1002/sim.7451>. For the smooth AFTs, S(t|x) = S_0(t*eta(t,x)), where the baseline\n    survival function S_0(t)=exp(-exp(eta_0(t))) is modelled for natural splines for eta_0, and the time-dependent cumulative acceleration factor eta(t,x)=\\int_0^t exp(eta_1(u,x)) du for log acceleration factor eta_1(u,x). The Markov multi-state models allow for a range of models with smooth transitions to predict transition\n    probabilities, length of stay, utilities and costs, with differences, ratios and standardisation.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: rstpm2\n# Type: Package\n# Title: Smooth Survival Models, Including Generalized Survival Models\n# Authors@R: c(person(\"Mark\", \"Clements\", role = c(\"aut\", \"cre\"), email = \"mark.clements@ki.se\"), person(\"Xing-Rong\", \"Liu\", role = \"aut\", email = \"xingrong.liu@ki.se\"), person(\"Paul\", \"Lambert\", role = \"ctb\", email=\"pl4@leicester.ac.uk\"), person(\"Lasse\", \"Hjort Jakobsen\", role = \"ctb\", email=\"lasse.j@rn.dk\"), person(\"Alessandro\", \"Gasparini\", role = \"ctb\"), person(\"Gordon\",\"Smyth\", role=\"cph\"), person(\"Patrick\",\"Alken\", role=\"cph\"), person(\"Simon\",\"Wood\", role=\"cph\"), person(\"Rhys\",\"Ulerich\", role=\"cph\"))\n# Version: 1.5.1\n# Date: 2019-10-28\n# Depends: R (>= 3.0.2), methods, survival, splines\n# Imports: graphics, Rcpp (>= 0.10.2), stats, mgcv, bbmle (>= 1.0.20), fastGHQuad, deSolve, utils, parallel\n# Suggests: eha, testthat, ggplot2, lattice, readstata13, mstate\n# LinkingTo: Rcpp,RcppArmadillo\n# Maintainer: Mark Clements <mark.clements@ki.se>\n# Description: R implementation of generalized survival models (GSMs), smooth accelerated failure time (AFT) models and Markov multi-state models. For the GSMs, g(S(t|x))=eta(t,x) for a link function g, survival S at time t with covariates x and a linear predictor eta(t,x). The main assumption is that the time effect(s) are smooth <doi:10.1177/0962280216664760>. For fully parametric models with natural splines, this re-implements Stata's 'stpm2' function, which are flexible parametric survival models developed by Royston and colleagues. We have extended the parametric models to include any smooth parametric smoothers for time. We have also extended the model to include any smooth penalized smoothers from the 'mgcv' package, using penalized likelihood. These models include left truncation, right censoring, interval censoring, gamma frailties and normal random effects <doi:10.1002/sim.7451>. For the smooth AFTs, S(t|x) = S_0(t*eta(t,x)), where the baseline survival function S_0(t)=exp(-exp(eta_0(t))) is modelled for natural splines for eta_0, and the time-dependent cumulative acceleration factor eta(t,x)=\\int_0^t exp(eta_1(u,x)) du for log acceleration factor eta_1(u,x). The Markov multi-state models allow for a range of models with smooth transitions to predict transition probabilities, length of stay, utilities and costs, with differences, ratios and standardisation.\n# URL: http://github.com/mclements/rstpm2\n# BugReports: http://github.com/mclements/rstpm2/issues\n# License: GPL-2 | GPL-3\n# LazyData: yes\n# NeedsCompilation: yes\n# Packaged: 2019-11-05 07:48:56 UTC; marcle\n# Author: Mark Clements [aut, cre], Xing-Rong Liu [aut], Paul Lambert [ctb], Lasse Hjort Jakobsen [ctb], Alessandro Gasparini [ctb], Gordon Smyth [cph], Patrick Alken [cph], Simon Wood [cph], Rhys Ulerich [cph]\n# Repository: CRAN\n# Date/Publication: 2019-11-05 23:00:05 UTC\n",
 "rendered_recipe": {
  "about": {
   "home": "http://github.com/mclements/rstpm2",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL3",
   "license_file": [
    "/Users/runner/miniforge3/conda-bld/r-rstpm2_1621984041985/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/GPL-2",
    "/Users/runner/miniforge3/conda-bld/r-rstpm2_1621984041985/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/GPL-3"
   ],
   "summary": "R implementation of generalized survival models (GSMs), smooth accelerated failure time (AFT) models and Markov multi-state models. For the GSMs, g(S(t|x))=eta(t,x) for a link function g, survival S at time t with covariates x and a linear predictor eta(t,x). The main assumption is that the time effect(s) are smooth <doi:10.1177/0962280216664760>. For fully parametric models with natural splines, this re-implements Stata's 'stpm2' function, which are flexible parametric survival models developed by Royston and colleagues. We have extended the parametric models to include any smooth parametric smoothers for time. We have also extended the model to include any smooth penalized smoothers from the 'mgcv' package, using penalized likelihood. These models include left truncation, right censoring, interval censoring, gamma frailties and normal random effects <doi:10.1002/sim.7451>. For the smooth AFTs, S(t|x) = S_0(t*eta(t,x)), where the baseline survival function S_0(t)=exp(-exp(eta_0(t))) is modelled for natural splines for eta_0, and the time-dependent cumulative acceleration factor eta(t,x)=\\int_0^t exp(eta_1(u,x)) du for log acceleration factor eta_1(u,x). The Markov multi-state models allow for a range of models with smooth transitions to predict transition probabilities, length of stay, utilities and costs, with differences, ratios and standardisation."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r41hb984973_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rstpm2",
   "version": "1.5.2"
  },
  "requirements": {
   "build": [
    "cctools_osx-64 949.0.1 h6407bdd_22",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hb91bd55_2",
    "clangxx 11.1.0 default_he082bbe_1",
    "clangxx_osx-64 11.1.0 h7e1b574_2",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "gfortran_impl_osx-64 9.3.0 h9cc0e5e_22",
    "gfortran_osx-64 9.3.0 h18f7dce_14",
    "gmp 6.2.1 h2e338ed_0",
    "isl 0.22.1 hb1e8313_2",
    "ld64_osx-64 530 he8994da_21",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcxx 11.1.0 habf9029_0",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_22",
    "libgfortran-devel_osx-64 9.3.0 h6c81a4c_22",
    "libgfortran5 9.3.0 h6c81a4c_22",
    "libiconv 1.16 haf1e3a3_0",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.0 hd011deb_1",
    "llvm-openmp 11.1.0 hda6cdc1_1",
    "llvm-tools 11.1.0 hd011deb_2",
    "make 4.3 h22f3db7_1",
    "mpc 1.1.0 ha57cd0f_1009",
    "mpfr 4.0.2 h72d8aaf_1",
    "tapi 1100.0.11 h9ce4665_0",
    "zlib 1.2.11 h7795811_1010"
   ],
   "host": [
    "_r-mutex 1.0.1 anacondar_1",
    "bwidget 1.9.14 h694c41f_0",
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.17.1 h0d85af4_1",
    "ca-certificates 2020.12.5 h033912b_0",
    "cairo 1.16.0 he43a7df_1008",
    "cctools_osx-64 949.0.1 h6407bdd_22",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hb91bd55_2",
    "clangxx 11.1.0 default_he082bbe_1",
    "clangxx_osx-64 11.1.0 h7e1b574_2",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "curl 7.76.1 hb861fe1_2",
    "font-ttf-dejavu-sans-mono 2.37 hab24e00_0",
    "font-ttf-inconsolata 3.000 h77eed37_0",
    "font-ttf-source-code-pro 2.038 h77eed37_0",
    "font-ttf-ubuntu 0.83 hab24e00_0",
    "fontconfig 2.13.1 h10f422b_1005",
    "fonts-conda-ecosystem 1 0",
    "fonts-conda-forge 1 0",
    "freetype 2.10.4 h4cff582_1",
    "fribidi 1.0.10 hbcb3906_0",
    "gettext 0.19.8.1 h7937167_1005",
    "gfortran_impl_osx-64 9.3.0 h9cc0e5e_22",
    "gfortran_osx-64 9.3.0 h18f7dce_14",
    "gmp 6.2.1 h2e338ed_0",
    "graphite2 1.3.13 h2e338ed_1001",
    "gsl 2.6 h71c5fe9_2",
    "harfbuzz 2.8.1 h159f659_0",
    "icu 68.1 h74dc148_0",
    "isl 0.22.1 hb1e8313_2",
    "jbig 2.1 h0d85af4_2003",
    "jpeg 9d hbcb3906_0",
    "krb5 1.19.1 hcfbf3a7_0",
    "ld64_osx-64 530 he8994da_21",
    "ldid 2.1.2 h7660a38_2",
    "lerc 2.2.1 h046ec9c_0",
    "libblas 3.8.0 11_h508aa58_netlib",
    "libcblas 3.8.0 11_h508aa58_netlib",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcurl 7.76.1 hf45b732_2",
    "libcxx 11.1.0 habf9029_0",
    "libdeflate 1.7 h35c211d_5",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.3 h046ec9c_2",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_22",
    "libgfortran-devel_osx-64 9.3.0 h6c81a4c_22",
    "libgfortran5 9.3.0 h6c81a4c_22",
    "libglib 2.68.2 hd556434_0",
    "libiconv 1.16 haf1e3a3_0",
    "liblapack 3.8.0 11_h508aa58_netlib",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.0 hd011deb_1",
    "libnghttp2 1.43.0 h07e645a_0",
    "libopenblas 0.3.15 openmp_h5e1b9a4_1",
    "libpng 1.6.37 h7cec526_2",
    "libssh2 1.9.0 h52ee1ee_6",
    "libtiff 4.3.0 h1167814_1",
    "libwebp-base 1.2.0 h0d85af4_2",
    "libxml2 2.9.12 h93ec3fd_0",
    "llvm-openmp 11.1.0 hda6cdc1_1",
    "llvm-tools 11.1.0 hd011deb_2",
    "lz4-c 1.9.3 h046ec9c_0",
    "make 4.3 h22f3db7_1",
    "mpc 1.1.0 ha57cd0f_1009",
    "mpfr 4.0.2 h72d8aaf_1",
    "ncurses 6.2 h2e338ed_4",
    "openssl 1.1.1k h0d85af4_0",
    "pango 1.48.5 ha05cd14_0",
    "pcre 8.44 hb1e8313_0",
    "pcre2 10.36 h5cf9962_1",
    "pixman 0.40.0 hbcb3906_0",
    "r-base 4.1.0 h4d23a9d_1",
    "r-bbmle 1.0.23.1 r41hc72bb7e_1",
    "r-bdsmatrix 1.3_4 r41h28b5c78_1",
    "r-bh 1.75.0_0 r41hc72bb7e_0",
    "r-desolve 1.28 r41h749f5a1_2",
    "r-fastghquad 1.0 r41h9951f98_1",
    "r-lattice 0.20_44 r41h28b5c78_0",
    "r-mass 7.3_54 r41h28b5c78_0",
    "r-matrix 1.3_3 r41hc2c5f09_0",
    "r-mgcv 1.8_35 r41hc2c5f09_0",
    "r-mvtnorm 1.1_1 r41h749f5a1_1",
    "r-nlme 3.1_152 r41h749f5a1_0",
    "r-numderiv 2016.8_1.1 r41hc72bb7e_3",
    "r-rcpp 1.0.6 r41h9951f98_0",
    "r-rcpparmadillo 0.10.5.0.0 r41he5a6823_0",
    "r-survival 3.2_11 r41h28b5c78_0",
    "readline 8.1 h05e3726_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.10 h0419947_1",
    "tktable 2.10 h49f0cf7_3",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010",
    "zstd 1.5.0 h582d3a0_0"
   ],
   "run": [
    "libblas >=3.8.0,<4.0a0",
    "libcxx >=11.1.0",
    "libgfortran 5.*",
    "libgfortran5 >=9.3.0",
    "liblapack >=3.8.0,<4.0a0",
    "r-base >=4.1,<4.2.0a0",
    "r-bbmle >=1.0.20",
    "r-desolve",
    "r-fastghquad",
    "r-mgcv",
    "r-rcpp >=0.10.2",
    "r-rcpparmadillo",
    "r-survival"
   ]
  },
  "source": {
   "sha256": "a49e3d70473a31d54289ae271b825cda162fda02cb7701abb1532c50c41fd430",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/rstpm2/rstpm2_1.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/rstpm2_1.5.2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('rstpm2')\""
   ]
  }
 },
 "version": "1.5.2"
}