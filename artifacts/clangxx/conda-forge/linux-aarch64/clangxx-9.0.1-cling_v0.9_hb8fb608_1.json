{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "parent_recipe": {
    "name": "clang_packages",
    "path": "/home/conda/recipe_root",
    "version": "9.0.1"
   },
   "recipe-maintainers": [
    "inducer",
    "isuruf",
    "jakirkham",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr"
   ]
  },
  "home": "http://llvm.org/",
  "identifiers": [],
  "keywords": [],
  "license": "NCSA",
  "license_file": "LICENSE.TXT",
  "root_pkgs": [
   "six 1.16.0 pyh6c4a22f_0",
   "python_abi 3.8 2_cp38",
   "curl 7.78.0 hea6ffbf_0",
   "yaml 0.2.5 h516909a_0",
   "libev 4.33 h516909a_1",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "libxml2 2.9.12 h72842e0_0",
   "zlib 1.2.11 h516909a_1010",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "c-ares 1.17.1 h7f98852_1",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "setuptools 49.6.0 py38h578d9bd_3",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 py38h578d9bd_3",
   "soupsieve 2.0.1 py_1",
   "git 2.32.0 pl5321hc30692c_0",
   "certifi 2021.5.30 py38h578d9bd_0",
   "lzo 2.10 h516909a_1000",
   "glob2 0.7 py_0",
   "libstdcxx-ng 11.1.0 h56837e0_4",
   "perl 5.32.1 0_h7f98852_perl5",
   "py-lief 0.11.5 py38h709712a_0",
   "idna 3.1 pyhd3deb0d_0",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "traitlets 5.0.5 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libiconv 1.16 h516909a_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "libgcc-ng 11.1.0 hc902ee8_4",
   "su-exec 0.2 h516909a_1002",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "tini 0.18.0 h14c3975_1001",
   "expat 2.4.1 h9c3ff4c_0",
   "clyent 1.2.2 py_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "libgomp 11.1.0 hc902ee8_4",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "libffi 3.3 h58526e2_2",
   "krb5 1.19.2 hcc1bbae_0",
   "_libgcc_mutex 0.1 conda_forge",
   "tqdm 4.61.2 pyhd8ed1ab_1",
   "python 3.8.10 h49503c6_1_cpython",
   "libssh2 1.9.0 ha56f1ee_6",
   "cffi 1.14.6 py38ha65f79e_0",
   "pcre2 10.37 h032f7d1_0",
   "tk 8.6.10 h21135ba_1",
   "conda-build 3.21.4 py38h578d9bd_0",
   "ipython_genutils 0.2.0 py_1",
   "zstd 1.5.0 ha95c52a_0",
   "icu 68.1 h58526e2_0",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "readline 8.1 h46c0cb4_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "xz 5.2.5 h516909a_1",
   "libcurl 7.78.0 h2574ce0_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "libarchive 3.5.1 hccf745f_2",
   "ripgrep 13.0.0 habb4d0f_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "importlib-metadata 4.6.1 py38h578d9bd_0",
   "ca-certificates 2021.5.30 ha878542_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "requests 2.26.0 pyhd8ed1ab_0",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h0b5b191_1005",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "patchelf 0.11 he1b5a44_0",
   "sqlite 3.36.0 h9cd32fc_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "ncurses 6.2 h58526e2_4",
   "bzip2 1.0.8 h7f98852_4",
   "chardet 4.0.0 py38h578d9bd_1",
   "patch 2.7.6 h7f98852_1002",
   "libedit 3.1.20191231 he28a2e2_2",
   "libnghttp2 1.43.0 h812cca2_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "openssl 1.1.1l h7f98852_0",
   "conda-forge-ci-setup 3.10.2 py38h7bc8238_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "conda-env 2.6.0 1",
   "conda 4.10.3 py38h578d9bd_1",
   "pip 21.2.4 pyhd8ed1ab_0",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "Development headers and libraries for Clang",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "variant": "cling_v0.9",
  "vc": "14",
  "zlib": "1.2"
 },
 "files": [
  "bin/-clang++",
  "bin/clang++"
 ],
 "index": {
  "arch": "aarch64",
  "build": "cling_v0.9_hb8fb608_1",
  "build_number": 1,
  "depends": [
   "clang 9.0.1 cling_v0.9_h250126e_1",
   "clang-9 9.0.1 cling_v0.9_h26c6c2b_1"
  ],
  "license": "NCSA",
  "name": "clangxx",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1631529790428,
  "version": "9.0.1"
 },
 "metadata_version": 1,
 "name": "clangxx",
 "raw_recipe": "# This file created by conda-build 3.21.4\n# ------------------------------------------------\n\npackage:\n  name: clangxx\n  version: 9.0.1\nsource:\n  - folder: .\n    patches:\n      - patches/0001-Find-conda-gcc-installation.patch\n      - patches/0001-Set-VERSION-in-osx-as-well.patch\n      - patches/0002-Fix-sysroot-detection-for-linux.patch\n      - patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch\n      - patches/0003-clang-Fix-normalizeProgramName-s-handling-of-dots-ou.patch\n      - patches/amd-roc-2.7.0.diff\n      - patches/apple-silicon.diff\n      - patches/cling/0001-Temporary-parsers-should-not-manipulate-global-parse.patch\n      - patches/cling/0002-Only-reset-extra-parsers-if-not-temporary.patch\n      - patches/cling/0003-Let-autoload-act-on-fwd-declares.patch\n      - patches/cling/0004-Do-not-complain-about-invalid-sources-for-PCH-files.patch\n      - patches/cling/0005-Extend-SubstTemplateTypeParmType-to-support-non-cano.patch\n      - patches/cling/0006-Remove-macro-and-print-macro.patch\n      - patches/cling/0007-From-Vassil-add-debug-printout-of-ModuleBuilder-data.patch\n      - patches/cling/0008-Cleanup-cached-constant-.str-from-codegen.patch\n      - patches/cling/0009-Implement-FileManager-uncaching.patch\n      - patches/cling/0010-Adapt-the-user-of-invalidateCache-to-its-new-signatu.patch\n      - patches/cling/0011-Mark-the-file-entry-invalid-until-reread.-Invalidate.patch\n      - patches/cling/0012-In-cases-of-nested-parsing-at-execution-time-sometim.patch\n      - patches/cling/0013-Implement-soft-reset-of-the-diagnostics-engine.patch\n      - patches/cling/0014-Access-sema-internals-and-revert-the-list-of-unused-.patch\n      - patches/cling/0015-Propagate-cache-flags-from-LookupFile-to-FileManager.patch\n      - patches/cling/0016-Pass-the-OpenFile-flag-also-to-DirectoryLookup.patch\n      - patches/cling/0017-Merge-Ctors-from-nested-transactions.patch\n      - patches/cling/0018-SrcMan-can-happen-for-Locs-from-the-command-line.patch\n      - patches/cling/0019-Make-sure-the-inode-did-not-get-updated-since-we-rea.patch\n      - patches/cling/0020-More-RAIIs-for-autoloading.patch\n      - patches/cling/0021-Fix-cling-teardown-issues-when-a-pch-is-attached.-Ku.patch\n      - patches/cling/0022-Use-raw-string-literals-to-correctly-stringify-and-i.patch\n      - patches/cling/0023-Accessor-to-is-file-opened-this-is-crucial-info-for-.patch\n      - patches/cling/0024-Buffer-the-pending-instantiations-in-case-or-recursi.patch\n      - patches/cling/0025-Also-store-Parser-paren-numbers-likely-fixes-ROOT-69.patch\n      - patches/cling/0026-Allow-switching-of-CodeGen-llvm-Module.patch\n      - patches/cling/0027-Avoid-dupe-llvm.ident-operands.patch\n      - patches/cling/0028-Hand-over-deferred-objects-to-the-new-CGModule-fixes.patch\n      - patches/cling/0029-CGModule-can-have-pending-WeakRefReferences-carry-ov.patch\n      - patches/cling/0030-Survive-pragma-once-from-virtual-file.patch\n      - patches/cling/0031-Provide-possibly-updated-CodegenOpts-to-StartModule.patch\n      - patches/cling/0032-Clear-pending-decls-from-Builder-in-case-of-errors-R.patch\n      - patches/cling/0033-Add-ASTConsumer-HandleInvalidTagDeclDefinition.patch\n      - patches/cling/0034-Fix-ROOT-7775-by-making-all-static-init-function-nam.patch\n      - patches/cling/0035-Inject-DeclUnloader-as-a-friend.patch\n      - patches/cling/0036-Do-not-load-the-source-file-just-to-get-an-irrelevan.patch\n      - patches/cling/0037-Construct-DestroyTemplateIdAnnotationsRAIIObj-given-.patch\n      - patches/cling/0038-Keep-track-of-emitted-deferred-decls-in-case-cling-n.patch\n      - patches/cling/0039-Forget-Decls-by-removing-them-from-the-DeferredDecls.patch\n      - patches/cling/0040-Find-an-easier-way-of-accessing-CodeGenModule-intern.patch\n      - patches/cling/0041-Keep-the-collection-of-EmittedDeferredDecls-for-subs.patch\n      - patches/cling/0042-Track-previously-deferred-emitted-symbol-put-back-as.patch\n      - patches/cling/0043-CLING-Move-cling-DeclUnloader-and-ParserStateRAII-in.patch\n      - patches/cling/0044-Fix-assertion-when-removing-decls-coming-from-a-pch-.patch\n      - patches/cling/0045-Do-not-collect-DeleteExprs-over-incremental-end-of-T.patch\n      - patches/cling/0046-In-the-RAII-ctor-set-private-Parser-fields-to-defaul.patch\n      - patches/cling/0047-Do-not-remove-DeferredDecls-when-they-become-Emitted.patch\n      - patches/cling/0048-Keep-track-of-immediately-emitted-deferred-decls.-Di.patch\n      - patches/cling/0049-Only-keep-track-of-weak-symbols.-Move-to-addDeferred.patch\n      - patches/cling/0050-Make-sure-no-EmittedDeferredDecls-are-left.patch\n      - patches/cling/0051-Keep-DeferredDecl-entry-when-forgetting-symbols-from.patch\n      - patches/cling/0052-Move-addEmittedDeferredDecl-into-separate-function-a.patch\n      - patches/cling/0053-Pass-mangled-name-to-CodeGenerator-forgetDecl.-From-.patch\n      - patches/cling/0054-Clear-also-EmittedDeferredDecls.patch\n      - patches/cling/0055-Also-remember-ODROnce-vars-fixes-cling-test-Prompt-S.patch\n      - patches/cling/0056-Keep-into-account-if-files-were-virtual.patch\n      - patches/cling/0057-cxxmodules-Don-t-complain-when-modulemap-for-implici.patch\n      - patches/cling/0058-Enable-ROOT-s-builtin_llvm-Off.patch\n      - patches/cling/0059-Reimplement-the-replaceStmts-logic.patch\n      - patches/cling/0060-Preserve-AnonStructIds-of-mangling-ctx.patch\n      - patches/cling/0061-Allow-interfaces-to-operate-on-in-memory-buffers-wit.patch\n      - patches/cross-compile.diff\n    sha256: 5778512b2e065c204010f88777d44b95250671103e434f9dc7363ab2e3804253\n    url: https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang-9.0.1.src.tar.xz\n  - folder: tools/extra\n    sha256: b26fd72a78bd7db998a26270ec9ec6a01346651d88fa87b4b323e13049fb6f07\n    url: https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang-tools-extra-9.0.1.src.tar.xz\nbuild:\n  number: 1\n  string: cling_v0.9_hb8fb608_1\n  track_features: null\nrequirements:\n  host:\n    - clang 9.0.1 cling_v0.9_h250126e_1\n    - clang-9 9.0.1 cling_v0.9_h26c6c2b_1\n  run:\n    - clang 9.0.1 cling_v0.9_h250126e_1\n    - clang-9 9.0.1 cling_v0.9_h26c6c2b_1\ntest:\n  commands:\n    - clang++ --version\n    - clang++ -v -c mytest.cxx\n  files:\n    - mytest.cxx\n  requires:\n    - gxx_linux-aarch64 9.*\nabout:\n  home: http://llvm.org/\n  license: NCSA\n  license_file: LICENSE.TXT\n  summary: Development headers and libraries for Clang\nextra:\n  copy_test_source_files: true\n  final: true\n  recipe-maintainers:\n    - SylvainCorlay\n    - chrisburr\n    - inducer\n    - isuruf\n    - jakirkham\n    - timsnyder\n",
 "rendered_recipe": {
  "about": {
   "home": "http://llvm.org/",
   "license": "NCSA",
   "license_file": "LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": 1,
   "string": "cling_v0.9_hb8fb608_1",
   "track_features": null
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "chrisburr",
    "inducer",
    "isuruf",
    "jakirkham",
    "timsnyder"
   ]
  },
  "package": {
   "name": "clangxx",
   "version": "9.0.1"
  },
  "requirements": {
   "host": [
    "clang 9.0.1 cling_v0.9_h250126e_1",
    "clang-9 9.0.1 cling_v0.9_h26c6c2b_1"
   ],
   "run": [
    "clang 9.0.1 cling_v0.9_h250126e_1",
    "clang-9 9.0.1 cling_v0.9_h26c6c2b_1"
   ]
  },
  "source": [
   {
    "folder": ".",
    "patches": [
     "patches/0001-Find-conda-gcc-installation.patch",
     "patches/0001-Set-VERSION-in-osx-as-well.patch",
     "patches/0002-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-clang-Fix-normalizeProgramName-s-handling-of-dots-ou.patch",
     "patches/amd-roc-2.7.0.diff",
     "patches/apple-silicon.diff",
     "patches/cling/0001-Temporary-parsers-should-not-manipulate-global-parse.patch",
     "patches/cling/0002-Only-reset-extra-parsers-if-not-temporary.patch",
     "patches/cling/0003-Let-autoload-act-on-fwd-declares.patch",
     "patches/cling/0004-Do-not-complain-about-invalid-sources-for-PCH-files.patch",
     "patches/cling/0005-Extend-SubstTemplateTypeParmType-to-support-non-cano.patch",
     "patches/cling/0006-Remove-macro-and-print-macro.patch",
     "patches/cling/0007-From-Vassil-add-debug-printout-of-ModuleBuilder-data.patch",
     "patches/cling/0008-Cleanup-cached-constant-.str-from-codegen.patch",
     "patches/cling/0009-Implement-FileManager-uncaching.patch",
     "patches/cling/0010-Adapt-the-user-of-invalidateCache-to-its-new-signatu.patch",
     "patches/cling/0011-Mark-the-file-entry-invalid-until-reread.-Invalidate.patch",
     "patches/cling/0012-In-cases-of-nested-parsing-at-execution-time-sometim.patch",
     "patches/cling/0013-Implement-soft-reset-of-the-diagnostics-engine.patch",
     "patches/cling/0014-Access-sema-internals-and-revert-the-list-of-unused-.patch",
     "patches/cling/0015-Propagate-cache-flags-from-LookupFile-to-FileManager.patch",
     "patches/cling/0016-Pass-the-OpenFile-flag-also-to-DirectoryLookup.patch",
     "patches/cling/0017-Merge-Ctors-from-nested-transactions.patch",
     "patches/cling/0018-SrcMan-can-happen-for-Locs-from-the-command-line.patch",
     "patches/cling/0019-Make-sure-the-inode-did-not-get-updated-since-we-rea.patch",
     "patches/cling/0020-More-RAIIs-for-autoloading.patch",
     "patches/cling/0021-Fix-cling-teardown-issues-when-a-pch-is-attached.-Ku.patch",
     "patches/cling/0022-Use-raw-string-literals-to-correctly-stringify-and-i.patch",
     "patches/cling/0023-Accessor-to-is-file-opened-this-is-crucial-info-for-.patch",
     "patches/cling/0024-Buffer-the-pending-instantiations-in-case-or-recursi.patch",
     "patches/cling/0025-Also-store-Parser-paren-numbers-likely-fixes-ROOT-69.patch",
     "patches/cling/0026-Allow-switching-of-CodeGen-llvm-Module.patch",
     "patches/cling/0027-Avoid-dupe-llvm.ident-operands.patch",
     "patches/cling/0028-Hand-over-deferred-objects-to-the-new-CGModule-fixes.patch",
     "patches/cling/0029-CGModule-can-have-pending-WeakRefReferences-carry-ov.patch",
     "patches/cling/0030-Survive-pragma-once-from-virtual-file.patch",
     "patches/cling/0031-Provide-possibly-updated-CodegenOpts-to-StartModule.patch",
     "patches/cling/0032-Clear-pending-decls-from-Builder-in-case-of-errors-R.patch",
     "patches/cling/0033-Add-ASTConsumer-HandleInvalidTagDeclDefinition.patch",
     "patches/cling/0034-Fix-ROOT-7775-by-making-all-static-init-function-nam.patch",
     "patches/cling/0035-Inject-DeclUnloader-as-a-friend.patch",
     "patches/cling/0036-Do-not-load-the-source-file-just-to-get-an-irrelevan.patch",
     "patches/cling/0037-Construct-DestroyTemplateIdAnnotationsRAIIObj-given-.patch",
     "patches/cling/0038-Keep-track-of-emitted-deferred-decls-in-case-cling-n.patch",
     "patches/cling/0039-Forget-Decls-by-removing-them-from-the-DeferredDecls.patch",
     "patches/cling/0040-Find-an-easier-way-of-accessing-CodeGenModule-intern.patch",
     "patches/cling/0041-Keep-the-collection-of-EmittedDeferredDecls-for-subs.patch",
     "patches/cling/0042-Track-previously-deferred-emitted-symbol-put-back-as.patch",
     "patches/cling/0043-CLING-Move-cling-DeclUnloader-and-ParserStateRAII-in.patch",
     "patches/cling/0044-Fix-assertion-when-removing-decls-coming-from-a-pch-.patch",
     "patches/cling/0045-Do-not-collect-DeleteExprs-over-incremental-end-of-T.patch",
     "patches/cling/0046-In-the-RAII-ctor-set-private-Parser-fields-to-defaul.patch",
     "patches/cling/0047-Do-not-remove-DeferredDecls-when-they-become-Emitted.patch",
     "patches/cling/0048-Keep-track-of-immediately-emitted-deferred-decls.-Di.patch",
     "patches/cling/0049-Only-keep-track-of-weak-symbols.-Move-to-addDeferred.patch",
     "patches/cling/0050-Make-sure-no-EmittedDeferredDecls-are-left.patch",
     "patches/cling/0051-Keep-DeferredDecl-entry-when-forgetting-symbols-from.patch",
     "patches/cling/0052-Move-addEmittedDeferredDecl-into-separate-function-a.patch",
     "patches/cling/0053-Pass-mangled-name-to-CodeGenerator-forgetDecl.-From-.patch",
     "patches/cling/0054-Clear-also-EmittedDeferredDecls.patch",
     "patches/cling/0055-Also-remember-ODROnce-vars-fixes-cling-test-Prompt-S.patch",
     "patches/cling/0056-Keep-into-account-if-files-were-virtual.patch",
     "patches/cling/0057-cxxmodules-Don-t-complain-when-modulemap-for-implici.patch",
     "patches/cling/0058-Enable-ROOT-s-builtin_llvm-Off.patch",
     "patches/cling/0059-Reimplement-the-replaceStmts-logic.patch",
     "patches/cling/0060-Preserve-AnonStructIds-of-mangling-ctx.patch",
     "patches/cling/0061-Allow-interfaces-to-operate-on-in-memory-buffers-wit.patch",
     "patches/cross-compile.diff"
    ],
    "sha256": "5778512b2e065c204010f88777d44b95250671103e434f9dc7363ab2e3804253",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang-9.0.1.src.tar.xz"
   },
   {
    "folder": "tools/extra",
    "sha256": "b26fd72a78bd7db998a26270ec9ec6a01346651d88fa87b4b323e13049fb6f07",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang-tools-extra-9.0.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "clang++ --version",
    "clang++ -v -c mytest.cxx"
   ],
   "files": [
    "mytest.cxx"
   ],
   "requires": [
    "gxx_linux-aarch64 9.*"
   ]
  }
 },
 "version": "9.0.1"
}