{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
  "dev_url": "https://github.com/MITHaystack/digital_rf",
  "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://github.com/MITHaystack/digital_rf",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "brotlipy 0.7.0 py36h68aa20f_1001",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2021.5.30 h5b45459_0",
   "certifi 2021.5.30 py36ha15d459_0",
   "cffi 1.14.6 py36he58ceb7_0",
   "chardet 4.0.0 py36ha15d459_1",
   "click 8.0.1 py36ha15d459_0",
   "clyent 1.2.2 py_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "conda 4.10.3 py36ha15d459_0",
   "conda-build 3.21.4 py36ha15d459_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.10.1 py36h6e52ffc_0",
   "conda-package-handling 1.7.3 py36hb5e345e_0",
   "console_shortcut 0.1.1 4",
   "cryptography 3.4.7 py36hd0de82c_0",
   "decorator 5.0.9 pyhd8ed1ab_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "glob2 0.7 py_0",
   "idna 2.10 pyhd3eb1b0_0",
   "importlib-metadata 4.6.4 py36ha15d459_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "jupyter_core 4.7.1 py36ha15d459_0",
   "libarchive 3.5.1 hb45042f_2",
   "libiconv 1.16 he774522_0",
   "liblief 0.11.5 h0e60522_0",
   "libxml2 2.9.12 hf5bbc77_0",
   "lz4-c 1.9.3 h8ffe710_1",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 2.0.1 py36h68aa20f_0",
   "menuinst 1.4.17 py36ha15d459_1",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "openssl 1.1.1k h8ffe710_0",
   "pip 21.2.4 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "powershell_shortcut 0.0.1 3",
   "psutil 5.8.0 py36h68aa20f_1",
   "py-lief 0.11.5 py36he2d232f_0",
   "pycosat 0.6.3 py36h68aa20f_1006",
   "pycparser 2.20 py_2",
   "pyopenssl 20.0.1 pyhd3eb1b0_1",
   "pyrsistent 0.17.3 py36h68aa20f_2",
   "pysocks 1.7.1 py36ha15d459_3",
   "python 3.6.13 h39d44d4_0_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-libarchive-c 3.1 py36ha15d459_0",
   "python_abi 3.6 2_cp36m",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pywin32 301 py36h68aa20f_0",
   "pyyaml 5.4.1 py36h68aa20f_0",
   "requests 2.25.1 pyhd3eb1b0_0",
   "ripgrep 13.0.0 h7f3b576_0",
   "ruamel_yaml 0.15.80 py36h68aa20f_1004",
   "setuptools 49.6.0 py36ha15d459_3",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyhd3eb1b0_0",
   "soupsieve 2.0.1 py_1",
   "sqlite 3.36.0 h2bbff1b_0",
   "tqdm 4.62.0 pyhd3eb1b0_1",
   "traitlets 4.3.3 py36h9f0ad1d_1",
   "typing_extensions 3.10.0.0 pyha770c72_0",
   "tzdata 2021a h5d7bf9c_0",
   "urllib3 1.26.6 pyhd3eb1b0_1",
   "vc 14.2 h21ff451_1",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.27.29016 h5e58377_2",
   "wheel 0.37.0 pyhd3eb1b0_0",
   "wincertstore 0.2 py36ha15d459_1006",
   "win_inet_pton 1.1.0 py36ha15d459_2",
   "xz 5.2.5 h62dcd97_1",
   "yaml 0.2.5 he774522_0",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h62dcd97_1010",
   "zstd 1.5.0 h6255e5f_0"
  ],
  "summary": "Work with data in the Digital RF and Digital Metadata formats.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "gnuradio_core": "3.8.3",
  "hdf5": "1.10.6",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.18",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "python",
    "numpy"
   ]
  ]
 },
 "files": [
  "Lib/site-packages/digital_rf-2.6.7-py3.8.egg-info/PKG-INFO",
  "Lib/site-packages/digital_rf/__init__.py",
  "Lib/site-packages/digital_rf/_py_rf_write_hdf5.cp38-win_amd64.pyd",
  "Lib/site-packages/digital_rf/_version.py",
  "Lib/site-packages/digital_rf/digital_metadata.py",
  "Lib/site-packages/digital_rf/digital_rf_deprecated_hdf5.py",
  "Lib/site-packages/digital_rf/digital_rf_hdf5.py",
  "Lib/site-packages/digital_rf/drf_command.py",
  "Lib/site-packages/digital_rf/list_drf.py",
  "Lib/site-packages/digital_rf/mirror.py",
  "Lib/site-packages/digital_rf/ringbuffer.py",
  "Lib/site-packages/digital_rf/util.py",
  "Lib/site-packages/digital_rf/watchdog_drf.py",
  "Lib/site-packages/gr_digital_rf/__init__.py",
  "Lib/site-packages/gr_digital_rf/digital_rf_sink.py",
  "Lib/site-packages/gr_digital_rf/digital_rf_source.py",
  "Lib/site-packages/gr_digital_rf/raster.py",
  "Lib/site-packages/gr_digital_rf/vector.py",
  "Library/include/digital_rf/digital_rf.h",
  "Library/include/digital_rf/digital_rf_version.h",
  "Library/lib/cmake/libdigital_rf/libdigital_rfConfig.cmake",
  "Library/lib/cmake/libdigital_rf/libdigital_rfConfigVersion.cmake",
  "Library/lib/cmake/libdigital_rf/libdigital_rfTargets-debug.cmake",
  "Library/lib/cmake/libdigital_rf/libdigital_rfTargets.cmake",
  "Library/lib/digital_rf.lib",
  "Library/lib/pkgconfig/digital_rf.pc",
  "Library/share/doc/digital_rf_project/DigitalRF2.0.pdf",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf.tree.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_select.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_select.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.xml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.block.yml",
  "Library/share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.xml",
  "Scripts/digital_metadata_archive.py",
  "Scripts/digital_rf_archive.py",
  "Scripts/digital_rf_upconvert.py",
  "Scripts/digital_rf_update_properties.py",
  "Scripts/drf-script.py",
  "Scripts/drf.exe",
  "Scripts/drf_cross_sti.py",
  "Scripts/drf_plot.py",
  "Scripts/drf_sound.py",
  "Scripts/drf_sti.py",
  "Scripts/thor.py",
  "Scripts/thorosmo.py",
  "Scripts/thorpluto.py",
  "Scripts/uhdtodrf.py",
  "Scripts/verify_digital_rf_upconvert.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38hc3376bf_0",
  "build_number": 0,
  "depends": [
   "h5py",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "numpy >=1.18.5,<2.0a0",
   "packaging",
   "python >=3.8,<3.9.0a0",
   "python-dateutil",
   "python_abi 3.8.* *_cp38",
   "pytz",
   "six",
   "vc >=14.1,<15.0a0",
   "vs2015_runtime >=14.16.27012",
   "watchdog"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "digital_rf",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1628998263325,
  "version": "2.6.7"
 },
 "metadata_version": 1,
 "name": "digital_rf",
 "raw_recipe": "{% set version = \"2.6.7\" %}\n\npackage:\n  name: digital_rf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MITHaystack/digital_rf/releases/download/{{ version }}/digital_rf-{{ version }}.tar.gz\n  sha256: 3dfe5c02463da57a2cfe33f0d836daec260d460d64a0a0de7fb461f71bf1b033\n\nbuild:\n  number: 0\n  # there are dependency conflicts for Python 2 on Windows\n  skip: true  # [win and py2k]\n  run_exports:\n    - {{ pin_subpackage('digital_rf') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake >=3.15\n    - make  # [not win]\n    # cross-compilation dependencies\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n\n  host:\n    - hdf5\n    - mako\n    - numpy\n    - pkgconfig\n    - python\n    - setuptools\n\n  run:\n    - h5py\n    - hdf5\n    - {{ pin_compatible('numpy') }}\n    - packaging\n    - python\n    - python-dateutil\n    - pytz\n    - six\n    - watchdog\n\ntest:\n  requires:\n    - gnuradio-core\n    - pytest >=3.6\n  imports:\n    - digital_rf\n    - digital_rf.digital_rf_hdf5\n    - gr_digital_rf\n  source_files:\n    - python/tests/*.py\n    - python/examples/*.py\n  commands:\n    - pytest\n    - python python/examples/example_write_digital_metadata.py\n    - python python/examples/example_read_digital_metadata.py\n\nabout:\n  home: https://github.com/MITHaystack/digital_rf\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Work with data in the Digital RF and Digital Metadata formats.\n  description: |\n    The Digital RF project encompasses a standardized HDF5 format for reading\n    and writing of radio frequency data and the software for doing so. The\n    format is designed to be self-documenting for data archive and to allow\n    rapid random access for data processing. For details on the format, refer\n    to the documentation.\n\n    This suite of software includes libraries for reading and writing data in\n    the Digital RF HDF5 format in C (``libdigital_rf``), Python\n    (``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\n    MATLAB. It also contains the `thor` UHD radio recorder script, Python\n    tools for managing and processing Digital RF data, example scripts that\n    demonstrate basic usage, and example applications that encompass a\n    complete data recording and processing chain for various use cases.\n\n  doc_url: https://github.com/MITHaystack/digital_rf/tree/master/docs\n  dev_url: https://github.com/MITHaystack/digital_rf\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
   "dev_url": "https://github.com/MITHaystack/digital_rf",
   "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
   "home": "https://github.com/MITHaystack/digital_rf",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Work with data in the Digital RF and Digital Metadata formats."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "digital_rf >=2.6.7,<3.0a0"
   ],
   "string": "py38hc3376bf_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "digital_rf",
   "version": "2.6.7"
  },
  "requirements": {
   "build": [
    "cmake 3.21.1 h39d44d4_0",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vs2015_runtime 14.29.30037 h902a5da_5",
    "vs2017_win-64 19.16.27038 h2e3bad8_2",
    "vswhere 2.8.4 h57928b3_0"
   ],
   "host": [
    "ca-certificates 2021.5.30 h5b45459_0",
    "certifi 2021.5.30 py38haa244fe_0",
    "gettext 0.19.8.1 h1a89ca6_1005",
    "hdf5 1.10.6 nompi_h5268f04_1114",
    "intel-openmp 2021.3.0 h57928b3_3372",
    "krb5 1.19.2 hbae68bd_0",
    "libblas 3.9.0 11_win64_mkl",
    "libcblas 3.9.0 11_win64_mkl",
    "libcurl 7.78.0 h789b8ee_0",
    "libffi 3.3 h0e60522_2",
    "libglib 2.68.3 h1e62bf3_0",
    "libiconv 1.16 he774522_0",
    "liblapack 3.9.0 11_win64_mkl",
    "libssh2 1.9.0 h680486a_6",
    "mako 1.1.4 pyh44b312d_0",
    "markupsafe 2.0.1 py38h294d835_0",
    "mkl 2021.3.0 hb70f87d_564",
    "numpy 1.18.5 py38h72c728b_0",
    "openssl 1.1.1k h8ffe710_0",
    "pcre 8.45 h0e60522_0",
    "pkg-config 0.29.2 h2bf4dc2_1008",
    "pkgconfig 1.5.5 py38haa244fe_0",
    "python 3.8.10 h7840368_1_cpython",
    "python_abi 3.8 2_cp38",
    "setuptools 49.6.0 py38haa244fe_3",
    "sqlite 3.36.0 h8ffe710_0",
    "tbb 2021.3.0 h2d74725_0",
    "tk 8.6.10 h8ffe710_1",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vc 14.2 hb210afc_5",
    "vs2015_runtime 14.29.30037 h902a5da_5",
    "wincertstore 0.2 py38haa244fe_1006",
    "zlib 1.2.11 h62dcd97_1010"
   ],
   "run": [
    "h5py",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "numpy >=1.18.5,<2.0a0",
    "packaging",
    "python >=3.8,<3.9.0a0",
    "python-dateutil",
    "python_abi 3.8.* *_cp38",
    "pytz",
    "six",
    "vc >=14.1,<15.0a0",
    "vs2015_runtime >=14.16.27012",
    "watchdog"
   ]
  },
  "source": {
   "sha256": "3dfe5c02463da57a2cfe33f0d836daec260d460d64a0a0de7fb461f71bf1b033",
   "url": "https://github.com/MITHaystack/digital_rf/releases/download/2.6.7/digital_rf-2.6.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "python python/examples/example_write_digital_metadata.py",
    "python python/examples/example_read_digital_metadata.py"
   ],
   "imports": [
    "digital_rf",
    "digital_rf.digital_rf_hdf5",
    "gr_digital_rf"
   ],
   "requires": [
    "gnuradio-core",
    "pytest >=3.6"
   ],
   "source_files": [
    "python/examples/*.py",
    "python/tests/*.py"
   ]
  }
 },
 "version": "2.6.7"
}