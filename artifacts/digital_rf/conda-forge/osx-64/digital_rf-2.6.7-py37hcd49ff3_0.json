{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
  "dev_url": "https://github.com/MITHaystack/digital_rf",
  "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://github.com/MITHaystack/digital_rf",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "python 3.9.6 hd187cdc_1_cpython",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.10.1 py39hb0a6171_0",
   "curl 7.78.0 hb861fe1_0",
   "pyyaml 5.4.1 py39hcbf5805_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "git 2.32.0 pl5321h9a53687_0",
   "soupsieve 2.0.1 py_1",
   "requests 2.26.0 pyhd8ed1ab_0",
   "jupyter_core 4.7.1 py39h6e9494a_0",
   "libcxx 12.0.1 habf9029_0",
   "liblief 0.11.5 he49afe7_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libcurl 7.78.0 hf45b732_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "libedit 3.1.20191231 h0678c8f_2",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "cryptography 3.4.7 py39ha2c9959_0",
   "importlib-metadata 4.6.4 py39h6e9494a_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1004",
   "pip 21.2.4 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h89e85a6_1006",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "brotlipy 0.7.0 py39h89e85a6_1001",
   "click 8.0.1 py39h6e9494a_0",
   "perl 5.32.1 0_h0d85af4_perl5",
   "tzdata 2021a he74cb21_1",
   "tk 8.6.10 h0419947_1",
   "xz 5.2.5 haf1e3a3_1",
   "sqlite 3.36.0 h23a322b_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "ripgrep 13.0.0 h244e342_0",
   "psutil 5.8.0 py39h89e85a6_1",
   "zlib 1.2.11 h7795811_1010",
   "libffi 3.3 h046ec9c_2",
   "markupsafe 2.0.1 py39h89e85a6_0",
   "gettext 0.19.8.1 h7937167_1005",
   "py-lief 0.11.5 py39h9fcab8e_0",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39h6e9494a_1",
   "conda-package-handling 1.7.3 py39h89e85a6_0",
   "python-libarchive-c 3.1 py39h6e9494a_0",
   "conda-build 3.21.4 py39h6e9494a_0",
   "krb5 1.19.2 hcfbf3a7_0",
   "pysocks 1.7.1 py39h6e9494a_3",
   "conda 4.10.3 py39h6e9494a_0",
   "openssl 1.1.1k h0d85af4_0",
   "zstd 1.5.0 h582d3a0_0",
   "c-ares 1.17.2 h0d85af4_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "libxml2 2.9.12 h93ec3fd_0",
   "setuptools 49.6.0 py39h6e9494a_3",
   "certifi 2021.5.30 py39h6e9494a_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "bzip2 1.0.8 h0d85af4_4",
   "tqdm 4.62.0 pyhd8ed1ab_0",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libnghttp2 1.43.0 h07e645a_0",
   "clyent 1.2.2 py_1",
   "libarchive 3.5.1 h2b60450_2",
   "pcre2 10.37 ha16e1b2_0",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "ca-certificates 2021.5.30 h033912b_0",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "idna 3.1 pyhd3deb0d_0",
   "libssh2 1.9.0 h52ee1ee_6",
   "cffi 1.14.6 py39hb71fe58_0",
   "pyrsistent 0.17.3 py39h89e85a6_2",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 haf1e3a3_1000",
   "expat 2.4.1 he49afe7_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "icu 68.1 h74dc148_0"
  ],
  "summary": "Work with data in the Digital RF and Digital Metadata formats.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "gnuradio_core": "3.8.3",
  "hdf5": "1.10.6",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.18",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64",
  "zip_keys": [
   [
    "python",
    "numpy"
   ]
  ]
 },
 "files": [
  "bin/digital_metadata_archive.py",
  "bin/digital_rf_archive.py",
  "bin/digital_rf_upconvert.py",
  "bin/digital_rf_update_properties.py",
  "bin/drf",
  "bin/drf_cross_sti.py",
  "bin/drf_plot.py",
  "bin/drf_sound.py",
  "bin/drf_sti.py",
  "bin/thor.py",
  "bin/thorosmo.py",
  "bin/thorpluto.py",
  "bin/uhdtodrf.py",
  "bin/verify_digital_rf_upconvert.py",
  "include/digital_rf/digital_rf.h",
  "include/digital_rf/digital_rf_version.h",
  "lib/cmake/libdigital_rf/libdigital_rfConfig.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfConfigVersion.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfTargets-release.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfTargets.cmake",
  "lib/libdigital_rf.2.6.0.dylib",
  "lib/libdigital_rf.2.dylib",
  "lib/libdigital_rf.dylib",
  "lib/pkgconfig/digital_rf.pc",
  "lib/python3.7/site-packages/digital_rf-2.6.7-py3.7.egg-info/PKG-INFO",
  "lib/python3.7/site-packages/digital_rf/__init__.py",
  "lib/python3.7/site-packages/digital_rf/_py_rf_write_hdf5.cpython-37m-darwin.so",
  "lib/python3.7/site-packages/digital_rf/_version.py",
  "lib/python3.7/site-packages/digital_rf/digital_metadata.py",
  "lib/python3.7/site-packages/digital_rf/digital_rf_deprecated_hdf5.py",
  "lib/python3.7/site-packages/digital_rf/digital_rf_hdf5.py",
  "lib/python3.7/site-packages/digital_rf/drf_command.py",
  "lib/python3.7/site-packages/digital_rf/list_drf.py",
  "lib/python3.7/site-packages/digital_rf/mirror.py",
  "lib/python3.7/site-packages/digital_rf/ringbuffer.py",
  "lib/python3.7/site-packages/digital_rf/util.py",
  "lib/python3.7/site-packages/digital_rf/watchdog_drf.py",
  "lib/python3.7/site-packages/gr_digital_rf/__init__.py",
  "lib/python3.7/site-packages/gr_digital_rf/digital_rf_sink.py",
  "lib/python3.7/site-packages/gr_digital_rf/digital_rf_source.py",
  "lib/python3.7/site-packages/gr_digital_rf/raster.py",
  "lib/python3.7/site-packages/gr_digital_rf/vector.py",
  "share/doc/digital_rf_project/DigitalRF2.0.pdf",
  "share/gnuradio/grc/blocks/gr_digital_rf.tree.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_select.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_select.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.xml"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37hcd49ff3_0",
  "build_number": 0,
  "depends": [
   "h5py",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "numpy >=1.18.5,<2.0a0",
   "packaging",
   "python >=3.7,<3.8.0a0",
   "python-dateutil",
   "python_abi 3.7.* *_cp37m",
   "pytz",
   "six",
   "watchdog"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "digital_rf",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1628997792874,
  "version": "2.6.7"
 },
 "metadata_version": 1,
 "name": "digital_rf",
 "raw_recipe": "{% set version = \"2.6.7\" %}\n\npackage:\n  name: digital_rf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MITHaystack/digital_rf/releases/download/{{ version }}/digital_rf-{{ version }}.tar.gz\n  sha256: 3dfe5c02463da57a2cfe33f0d836daec260d460d64a0a0de7fb461f71bf1b033\n\nbuild:\n  number: 0\n  # there are dependency conflicts for Python 2 on Windows\n  skip: true  # [win and py2k]\n  run_exports:\n    - {{ pin_subpackage('digital_rf') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake >=3.15\n    - make  # [not win]\n    # cross-compilation dependencies\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n\n  host:\n    - hdf5\n    - mako\n    - numpy\n    - pkgconfig\n    - python\n    - setuptools\n\n  run:\n    - h5py\n    - hdf5\n    - {{ pin_compatible('numpy') }}\n    - packaging\n    - python\n    - python-dateutil\n    - pytz\n    - six\n    - watchdog\n\ntest:\n  requires:\n    - gnuradio-core\n    - pytest >=3.6\n  imports:\n    - digital_rf\n    - digital_rf.digital_rf_hdf5\n    - gr_digital_rf\n  source_files:\n    - python/tests/*.py\n    - python/examples/*.py\n  commands:\n    - pytest\n    - python python/examples/example_write_digital_metadata.py\n    - python python/examples/example_read_digital_metadata.py\n\nabout:\n  home: https://github.com/MITHaystack/digital_rf\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Work with data in the Digital RF and Digital Metadata formats.\n  description: |\n    The Digital RF project encompasses a standardized HDF5 format for reading\n    and writing of radio frequency data and the software for doing so. The\n    format is designed to be self-documenting for data archive and to allow\n    rapid random access for data processing. For details on the format, refer\n    to the documentation.\n\n    This suite of software includes libraries for reading and writing data in\n    the Digital RF HDF5 format in C (``libdigital_rf``), Python\n    (``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\n    MATLAB. It also contains the `thor` UHD radio recorder script, Python\n    tools for managing and processing Digital RF data, example scripts that\n    demonstrate basic usage, and example applications that encompass a\n    complete data recording and processing chain for various use cases.\n\n  doc_url: https://github.com/MITHaystack/digital_rf/tree/master/docs\n  dev_url: https://github.com/MITHaystack/digital_rf\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
   "dev_url": "https://github.com/MITHaystack/digital_rf",
   "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
   "home": "https://github.com/MITHaystack/digital_rf",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Work with data in the Digital RF and Digital Metadata formats."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "digital_rf >=2.6.7,<3.0a0"
   ],
   "string": "py37hcd49ff3_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "digital_rf",
   "version": "2.6.7"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.17.2 h0d85af4_0",
    "ca-certificates 2021.5.30 h033912b_0",
    "cctools_osx-64 949.0.1 h6407bdd_22",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hb91bd55_3",
    "clangxx 11.1.0 default_he082bbe_1",
    "cmake 3.21.1 hdbd2f3e_0",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "expat 2.4.1 he49afe7_0",
    "krb5 1.19.2 hcfbf3a7_0",
    "ld64_osx-64 530 he8994da_21",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcurl 7.78.0 hf45b732_0",
    "libcxx 12.0.1 habf9029_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.1 hd011deb_2",
    "libnghttp2 1.43.0 h07e645a_0",
    "libssh2 1.9.0 h52ee1ee_6",
    "libuv 1.42.0 h0d85af4_0",
    "llvm-tools 11.1.0 hd011deb_2",
    "lz4-c 1.9.3 he49afe7_1",
    "make 4.3 h22f3db7_1",
    "ncurses 6.2 h2e338ed_4",
    "openssl 1.1.1k h0d85af4_0",
    "rhash 1.4.1 h35c211d_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.10 h0419947_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010",
    "zstd 1.5.0 h582d3a0_0"
   ],
   "host": [
    "c-ares 1.17.2 h0d85af4_0",
    "ca-certificates 2021.5.30 h033912b_0",
    "certifi 2021.5.30 py37hf985489_0",
    "hdf5 1.10.6 nompi_hc5d9132_1114",
    "krb5 1.19.2 hcfbf3a7_0",
    "libblas 3.9.0 11_osx64_openblas",
    "libcblas 3.9.0 11_osx64_openblas",
    "libcurl 7.78.0 hf45b732_0",
    "libcxx 12.0.1 habf9029_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.3 h046ec9c_2",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "libiconv 1.16 haf1e3a3_0",
    "liblapack 3.9.0 11_osx64_openblas",
    "libnghttp2 1.43.0 h07e645a_0",
    "libopenblas 0.3.17 openmp_h3351f45_1",
    "libssh2 1.9.0 h52ee1ee_6",
    "llvm-openmp 12.0.1 hda6cdc1_1",
    "mako 1.1.4 pyh44b312d_0",
    "markupsafe 2.0.1 py37h271585c_0",
    "ncurses 6.2 h2e338ed_4",
    "numpy 1.18.5 py37h7687784_0",
    "openssl 1.1.1k h0d85af4_0",
    "pkg-config 0.29.2 h31203cd_1008",
    "pkgconfig 1.5.5 py37hf985489_0",
    "python 3.7.10 h7728216_100_cpython",
    "python_abi 3.7 2_cp37m",
    "readline 8.1 h05e3726_0",
    "setuptools 49.6.0 py37hf985489_3",
    "sqlite 3.36.0 h23a322b_0",
    "tk 8.6.10 h0419947_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010"
   ],
   "run": [
    "h5py",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "numpy >=1.18.5,<2.0a0",
    "packaging",
    "python >=3.7,<3.8.0a0",
    "python-dateutil",
    "python_abi 3.7.* *_cp37m",
    "pytz",
    "six",
    "watchdog"
   ]
  },
  "source": {
   "sha256": "3dfe5c02463da57a2cfe33f0d836daec260d460d64a0a0de7fb461f71bf1b033",
   "url": "https://github.com/MITHaystack/digital_rf/releases/download/2.6.7/digital_rf-2.6.7.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "python python/examples/example_write_digital_metadata.py",
    "python python/examples/example_read_digital_metadata.py"
   ],
   "imports": [
    "digital_rf",
    "digital_rf.digital_rf_hdf5",
    "gr_digital_rf"
   ],
   "requires": [
    "gnuradio-core",
    "pytest >=3.6"
   ],
   "source_files": [
    "python/examples/*.py",
    "python/tests/*.py"
   ]
  }
 },
 "version": "2.6.7"
}