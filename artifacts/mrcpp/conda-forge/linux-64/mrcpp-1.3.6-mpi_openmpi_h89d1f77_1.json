{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.5",
  "conda_private": false,
  "conda_version": "4.9.0",
  "dev_url": "https://github.com/MRChemSoft/mrcpp",
  "doc_source_url": "https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst",
  "doc_url": "https://mrcpp.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "robertodr",
    "bjorgve",
    "stigrj"
   ]
  },
  "home": "https://github.com/MRChemSoft/mrcpp",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "license_file": "LICENSE",
  "license_url": "https://opensource.org/licenses/LGPL-3.0",
  "root_pkgs": [
   "conda 4.9.0 py38h924ce5b_1",
   "conda-build 3.20.5 py38h924ce5b_0",
   "patch 2.7.6 h516909a_1001",
   "python_abi 3.8 1_cp38",
   "zstd 1.4.5 h6597ccf_2",
   "gettext 0.19.8.1 hf34092f_1004",
   "psutil 5.7.3 py38h8df0ef7_0",
   "lzo 2.10 h516909a_1000",
   "ld_impl_linux-64 2.35 h769bd43_9",
   "openssl 1.1.1h h516909a_0",
   "jsonschema 3.2.0 py_2",
   "libev 4.33 h516909a_1",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "setuptools 49.6.0 py38h924ce5b_2",
   "glob2 0.7 py_0",
   "ipython_genutils 0.2.0 py_1",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "liblief 0.10.1 he1b5a44_2",
   "tqdm 4.51.0 pyh9f0ad1d_0",
   "pycosat 0.6.3 py38h8df0ef7_1005",
   "pip 20.2.4 py_0",
   "libcurl 7.71.1 hcdd3856_8",
   "libiconv 1.16 h516909a_0",
   "libxml2 2.9.10 h68273f3_2",
   "ripgrep 12.1.1 h516909a_1",
   "six 1.15.0 pyh9f0ad1d_0",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "tini 0.18.0 h14c3975_1001",
   "c-ares 1.16.1 h516909a_3",
   "importlib-metadata 2.0.0 py_1",
   "git 2.29.2 pl5262h78be0e9_0",
   "curl 7.71.1 he644dc0_8",
   "_libgcc_mutex 0.1 conda_forge",
   "pysocks 1.7.1 py38h924ce5b_2",
   "libssh2 1.9.0 hab1572f_5",
   "libgcc-ng 9.3.0 h5dbcf3e_17",
   "libgomp 9.3.0 h5dbcf3e_17",
   "bzip2 1.0.8 h516909a_3",
   "conda-package-handling 1.7.2 py38h8df0ef7_0",
   "yaml 0.2.5 h516909a_0",
   "python 3.8.6 h852b56e_0_cpython",
   "tk 8.6.10 hed695b0_1",
   "libstdcxx-ng 9.3.0 h2ae2ef3_17",
   "py-lief 0.10.1 py38h348cfbe_2",
   "xz 5.2.5 h516909a_1",
   "cryptography 3.2.1 py38h7699a38_0",
   "icu 67.1 he1b5a44_0",
   "expat 2.2.9 he1b5a44_2",
   "zlib 1.2.11 h516909a_1010",
   "pyrsistent 0.17.3 py38h1e0a361_1",
   "brotlipy 0.7.0 py38h8df0ef7_1001",
   "sqlite 3.33.0 h4cf870e_1",
   "pyyaml 5.3.1 py38h8df0ef7_1",
   "chardet 3.0.4 py38h924ce5b_1008",
   "traitlets 5.0.5 py_0",
   "cffi 1.14.3 py38h1bdcb99_1",
   "libffi 3.2.1 he1b5a44_1007",
   "libarchive 3.4.3 hf837322_0",
   "anaconda-client 1.7.2 py_0",
   "markupsafe 1.1.1 py38h8df0ef7_2",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "python-dateutil 2.8.1 py_0",
   "pyopenssl 19.1.0 py_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "krb5 1.17.1 hfafb76e_3",
   "lz4-c 1.9.2 he1b5a44_3",
   "pycparser 2.20 pyh9f0ad1d_2",
   "jupyter_core 4.6.3 py38h32f6830_2",
   "patchelf 0.11 he1b5a44_0",
   "readline 8.0 he28a2e2_2",
   "libnghttp2 1.41.0 h8cfc5f6_2",
   "pcre 8.44 he1b5a44_0",
   "soupsieve 2.0.1 py_1",
   "ncurses 6.2 h58526e2_3",
   "su-exec 0.2 h516909a_1002",
   "ruamel_yaml 0.15.80 py38h8df0ef7_1003",
   "pytz 2020.4 pyhd8ed1ab_0",
   "idna 2.10 pyh9f0ad1d_0",
   "nbformat 5.0.8 py_0",
   "python-libarchive-c 2.9 py38h924ce5b_2",
   "zipp 3.4.0 py_0",
   "ca-certificates 2020.6.20 hecda079_0",
   "urllib3 1.25.11 py_0",
   "_openmp_mutex 4.5 1_gnu",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "certifi 2020.6.20 py38h924ce5b_2",
   "clyent 1.2.2 py_1",
   "requests 2.24.0 pyh9f0ad1d_0",
   "perl 5.26.2 h36c2ea0_1008",
   "importlib_metadata 2.0.0 1",
   "oniguruma 6.9.3 h516909a_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "shyaml 0.6.1 py_0",
   "jq 1.6 h14c3975_1000",
   "conda-forge-ci-setup 3.5.0 py38h904d315_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "MultiResolution Computational Program Package",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "mpi": "openmpi",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "mpich": "x.x",
   "openmpi": "x.x",
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/mrcpp-tests",
  "include/MRCPP/Gaussians",
  "include/MRCPP/MWFunctions",
  "include/MRCPP/MWOperators",
  "include/MRCPP/Parallel",
  "include/MRCPP/Plotter",
  "include/MRCPP/Printer",
  "include/MRCPP/Timer",
  "include/MRCPP/config.h",
  "include/MRCPP/constants.h",
  "include/MRCPP/core/CrossCorrelation.h",
  "include/MRCPP/core/CrossCorrelationCache.h",
  "include/MRCPP/core/FilterCache.h",
  "include/MRCPP/core/GaussQuadrature.h",
  "include/MRCPP/core/InterpolatingBasis.h",
  "include/MRCPP/core/LegendreBasis.h",
  "include/MRCPP/core/MWFilter.h",
  "include/MRCPP/core/ObjectCache.h",
  "include/MRCPP/core/QuadratureCache.h",
  "include/MRCPP/core/ScalingBasis.h",
  "include/MRCPP/core/ScalingCache.h",
  "include/MRCPP/functions/AnalyticFunction.h",
  "include/MRCPP/functions/BoysFunction.h",
  "include/MRCPP/functions/GaussExp.h",
  "include/MRCPP/functions/GaussFunc.h",
  "include/MRCPP/functions/GaussPoly.h",
  "include/MRCPP/functions/Gaussian.h",
  "include/MRCPP/functions/LegendrePoly.h",
  "include/MRCPP/functions/Polynomial.h",
  "include/MRCPP/functions/RepresentableFunction.h",
  "include/MRCPP/functions/function_utils.h",
  "include/MRCPP/macros.h",
  "include/MRCPP/mrcpp_declarations.h",
  "include/MRCPP/operators/ABGVOperator.h",
  "include/MRCPP/operators/BSOperator.h",
  "include/MRCPP/operators/ConvolutionOperator.h",
  "include/MRCPP/operators/DerivativeConvolution.h",
  "include/MRCPP/operators/DerivativeKernel.h",
  "include/MRCPP/operators/DerivativeOperator.h",
  "include/MRCPP/operators/GreensKernel.h",
  "include/MRCPP/operators/HelmholtzKernel.h",
  "include/MRCPP/operators/HelmholtzOperator.h",
  "include/MRCPP/operators/IdentityConvolution.h",
  "include/MRCPP/operators/IdentityKernel.h",
  "include/MRCPP/operators/MWOperator.h",
  "include/MRCPP/operators/OperatorState.h",
  "include/MRCPP/operators/OperatorStatistics.h",
  "include/MRCPP/operators/PHOperator.h",
  "include/MRCPP/operators/PoissonKernel.h",
  "include/MRCPP/operators/PoissonOperator.h",
  "include/MRCPP/treebuilders/ABGVCalculator.h",
  "include/MRCPP/treebuilders/AdditionCalculator.h",
  "include/MRCPP/treebuilders/AnalyticAdaptor.h",
  "include/MRCPP/treebuilders/BSCalculator.h",
  "include/MRCPP/treebuilders/BandWidthAdaptor.h",
  "include/MRCPP/treebuilders/ConvolutionCalculator.h",
  "include/MRCPP/treebuilders/CopyAdaptor.h",
  "include/MRCPP/treebuilders/CrossCorrelationCalculator.h",
  "include/MRCPP/treebuilders/DefaultCalculator.h",
  "include/MRCPP/treebuilders/DerivativeCalculator.h",
  "include/MRCPP/treebuilders/MapCalculator.h",
  "include/MRCPP/treebuilders/MultiplicationCalculator.h",
  "include/MRCPP/treebuilders/OperatorAdaptor.h",
  "include/MRCPP/treebuilders/PHCalculator.h",
  "include/MRCPP/treebuilders/PowerCalculator.h",
  "include/MRCPP/treebuilders/ProjectionCalculator.h",
  "include/MRCPP/treebuilders/SplitAdaptor.h",
  "include/MRCPP/treebuilders/SquareCalculator.h",
  "include/MRCPP/treebuilders/TreeAdaptor.h",
  "include/MRCPP/treebuilders/TreeBuilder.h",
  "include/MRCPP/treebuilders/TreeCalculator.h",
  "include/MRCPP/treebuilders/WaveletAdaptor.h",
  "include/MRCPP/treebuilders/add.h",
  "include/MRCPP/treebuilders/apply.h",
  "include/MRCPP/treebuilders/grid.h",
  "include/MRCPP/treebuilders/map.h",
  "include/MRCPP/treebuilders/multiply.h",
  "include/MRCPP/treebuilders/project.h",
  "include/MRCPP/trees/BandWidth.h",
  "include/MRCPP/trees/BoundingBox.h",
  "include/MRCPP/trees/FunctionNode.h",
  "include/MRCPP/trees/FunctionTree.h",
  "include/MRCPP/trees/FunctionTreeVector.h",
  "include/MRCPP/trees/GenNode.h",
  "include/MRCPP/trees/HilbertIterator.h",
  "include/MRCPP/trees/HilbertPath.h",
  "include/MRCPP/trees/LebesgueIterator.h",
  "include/MRCPP/trees/MWNode.h",
  "include/MRCPP/trees/MWTree.h",
  "include/MRCPP/trees/MultiResolutionAnalysis.h",
  "include/MRCPP/trees/NodeBox.h",
  "include/MRCPP/trees/NodeIndex.h",
  "include/MRCPP/trees/OperatorNode.h",
  "include/MRCPP/trees/OperatorTree.h",
  "include/MRCPP/trees/ProjectedNode.h",
  "include/MRCPP/trees/SerialFunctionTree.h",
  "include/MRCPP/trees/SerialOperatorTree.h",
  "include/MRCPP/trees/SerialTree.h",
  "include/MRCPP/trees/TreeIterator.h",
  "include/MRCPP/utils/Plotter.h",
  "include/MRCPP/utils/Printer.h",
  "include/MRCPP/utils/Timer.h",
  "include/MRCPP/utils/details.h",
  "include/MRCPP/utils/math_utils.h",
  "include/MRCPP/utils/mpi_utils.h",
  "include/MRCPP/utils/omp_utils.h",
  "include/MRCPP/utils/periodic_utils.h",
  "include/MRCPP/version.h",
  "lib/libmrcpp.so",
  "lib/libmrcpp.so.1",
  "share/MRCPP/mwfilters/I_G0_1",
  "share/MRCPP/mwfilters/I_G0_10",
  "share/MRCPP/mwfilters/I_G0_11",
  "share/MRCPP/mwfilters/I_G0_12",
  "share/MRCPP/mwfilters/I_G0_13",
  "share/MRCPP/mwfilters/I_G0_14",
  "share/MRCPP/mwfilters/I_G0_15",
  "share/MRCPP/mwfilters/I_G0_16",
  "share/MRCPP/mwfilters/I_G0_17",
  "share/MRCPP/mwfilters/I_G0_18",
  "share/MRCPP/mwfilters/I_G0_19",
  "share/MRCPP/mwfilters/I_G0_2",
  "share/MRCPP/mwfilters/I_G0_20",
  "share/MRCPP/mwfilters/I_G0_21",
  "share/MRCPP/mwfilters/I_G0_22",
  "share/MRCPP/mwfilters/I_G0_23",
  "share/MRCPP/mwfilters/I_G0_24",
  "share/MRCPP/mwfilters/I_G0_25",
  "share/MRCPP/mwfilters/I_G0_26",
  "share/MRCPP/mwfilters/I_G0_27",
  "share/MRCPP/mwfilters/I_G0_28",
  "share/MRCPP/mwfilters/I_G0_29",
  "share/MRCPP/mwfilters/I_G0_3",
  "share/MRCPP/mwfilters/I_G0_30",
  "share/MRCPP/mwfilters/I_G0_31",
  "share/MRCPP/mwfilters/I_G0_32",
  "share/MRCPP/mwfilters/I_G0_33",
  "share/MRCPP/mwfilters/I_G0_34",
  "share/MRCPP/mwfilters/I_G0_35",
  "share/MRCPP/mwfilters/I_G0_36",
  "share/MRCPP/mwfilters/I_G0_37",
  "share/MRCPP/mwfilters/I_G0_38",
  "share/MRCPP/mwfilters/I_G0_39",
  "share/MRCPP/mwfilters/I_G0_4",
  "share/MRCPP/mwfilters/I_G0_40",
  "share/MRCPP/mwfilters/I_G0_41",
  "share/MRCPP/mwfilters/I_G0_5",
  "share/MRCPP/mwfilters/I_G0_6",
  "share/MRCPP/mwfilters/I_G0_7",
  "share/MRCPP/mwfilters/I_G0_8",
  "share/MRCPP/mwfilters/I_G0_9",
  "share/MRCPP/mwfilters/I_H0_1",
  "share/MRCPP/mwfilters/I_H0_10",
  "share/MRCPP/mwfilters/I_H0_11",
  "share/MRCPP/mwfilters/I_H0_12",
  "share/MRCPP/mwfilters/I_H0_13",
  "share/MRCPP/mwfilters/I_H0_14",
  "share/MRCPP/mwfilters/I_H0_15",
  "share/MRCPP/mwfilters/I_H0_16",
  "share/MRCPP/mwfilters/I_H0_17",
  "share/MRCPP/mwfilters/I_H0_18",
  "share/MRCPP/mwfilters/I_H0_19",
  "share/MRCPP/mwfilters/I_H0_2",
  "share/MRCPP/mwfilters/I_H0_20",
  "share/MRCPP/mwfilters/I_H0_21",
  "share/MRCPP/mwfilters/I_H0_22",
  "share/MRCPP/mwfilters/I_H0_23",
  "share/MRCPP/mwfilters/I_H0_24",
  "share/MRCPP/mwfilters/I_H0_25",
  "share/MRCPP/mwfilters/I_H0_26",
  "share/MRCPP/mwfilters/I_H0_27",
  "share/MRCPP/mwfilters/I_H0_28",
  "share/MRCPP/mwfilters/I_H0_29",
  "share/MRCPP/mwfilters/I_H0_3",
  "share/MRCPP/mwfilters/I_H0_30",
  "share/MRCPP/mwfilters/I_H0_31",
  "share/MRCPP/mwfilters/I_H0_32",
  "share/MRCPP/mwfilters/I_H0_33",
  "share/MRCPP/mwfilters/I_H0_34",
  "share/MRCPP/mwfilters/I_H0_35",
  "share/MRCPP/mwfilters/I_H0_36",
  "share/MRCPP/mwfilters/I_H0_37",
  "share/MRCPP/mwfilters/I_H0_38",
  "share/MRCPP/mwfilters/I_H0_39",
  "share/MRCPP/mwfilters/I_H0_4",
  "share/MRCPP/mwfilters/I_H0_40",
  "share/MRCPP/mwfilters/I_H0_41",
  "share/MRCPP/mwfilters/I_H0_5",
  "share/MRCPP/mwfilters/I_H0_6",
  "share/MRCPP/mwfilters/I_H0_7",
  "share/MRCPP/mwfilters/I_H0_8",
  "share/MRCPP/mwfilters/I_H0_9",
  "share/MRCPP/mwfilters/I_c_left_1",
  "share/MRCPP/mwfilters/I_c_left_10",
  "share/MRCPP/mwfilters/I_c_left_11",
  "share/MRCPP/mwfilters/I_c_left_12",
  "share/MRCPP/mwfilters/I_c_left_13",
  "share/MRCPP/mwfilters/I_c_left_14",
  "share/MRCPP/mwfilters/I_c_left_15",
  "share/MRCPP/mwfilters/I_c_left_16",
  "share/MRCPP/mwfilters/I_c_left_17",
  "share/MRCPP/mwfilters/I_c_left_18",
  "share/MRCPP/mwfilters/I_c_left_19",
  "share/MRCPP/mwfilters/I_c_left_2",
  "share/MRCPP/mwfilters/I_c_left_20",
  "share/MRCPP/mwfilters/I_c_left_21",
  "share/MRCPP/mwfilters/I_c_left_22",
  "share/MRCPP/mwfilters/I_c_left_23",
  "share/MRCPP/mwfilters/I_c_left_24",
  "share/MRCPP/mwfilters/I_c_left_25",
  "share/MRCPP/mwfilters/I_c_left_26",
  "share/MRCPP/mwfilters/I_c_left_27",
  "share/MRCPP/mwfilters/I_c_left_28",
  "share/MRCPP/mwfilters/I_c_left_29",
  "share/MRCPP/mwfilters/I_c_left_3",
  "share/MRCPP/mwfilters/I_c_left_30",
  "share/MRCPP/mwfilters/I_c_left_31",
  "share/MRCPP/mwfilters/I_c_left_32",
  "share/MRCPP/mwfilters/I_c_left_33",
  "share/MRCPP/mwfilters/I_c_left_34",
  "share/MRCPP/mwfilters/I_c_left_35",
  "share/MRCPP/mwfilters/I_c_left_36",
  "share/MRCPP/mwfilters/I_c_left_37",
  "share/MRCPP/mwfilters/I_c_left_38",
  "share/MRCPP/mwfilters/I_c_left_39",
  "share/MRCPP/mwfilters/I_c_left_4",
  "share/MRCPP/mwfilters/I_c_left_40",
  "share/MRCPP/mwfilters/I_c_left_41",
  "share/MRCPP/mwfilters/I_c_left_5",
  "share/MRCPP/mwfilters/I_c_left_6",
  "share/MRCPP/mwfilters/I_c_left_7",
  "share/MRCPP/mwfilters/I_c_left_8",
  "share/MRCPP/mwfilters/I_c_left_9",
  "share/MRCPP/mwfilters/I_c_right_1",
  "share/MRCPP/mwfilters/I_c_right_10",
  "share/MRCPP/mwfilters/I_c_right_11",
  "share/MRCPP/mwfilters/I_c_right_12",
  "share/MRCPP/mwfilters/I_c_right_13",
  "share/MRCPP/mwfilters/I_c_right_14",
  "share/MRCPP/mwfilters/I_c_right_15",
  "share/MRCPP/mwfilters/I_c_right_16",
  "share/MRCPP/mwfilters/I_c_right_17",
  "share/MRCPP/mwfilters/I_c_right_18",
  "share/MRCPP/mwfilters/I_c_right_19",
  "share/MRCPP/mwfilters/I_c_right_2",
  "share/MRCPP/mwfilters/I_c_right_20",
  "share/MRCPP/mwfilters/I_c_right_21",
  "share/MRCPP/mwfilters/I_c_right_22",
  "share/MRCPP/mwfilters/I_c_right_23",
  "share/MRCPP/mwfilters/I_c_right_24",
  "share/MRCPP/mwfilters/I_c_right_25",
  "share/MRCPP/mwfilters/I_c_right_26",
  "share/MRCPP/mwfilters/I_c_right_27",
  "share/MRCPP/mwfilters/I_c_right_28",
  "share/MRCPP/mwfilters/I_c_right_29",
  "share/MRCPP/mwfilters/I_c_right_3",
  "share/MRCPP/mwfilters/I_c_right_30",
  "share/MRCPP/mwfilters/I_c_right_31",
  "share/MRCPP/mwfilters/I_c_right_32",
  "share/MRCPP/mwfilters/I_c_right_33",
  "share/MRCPP/mwfilters/I_c_right_34",
  "share/MRCPP/mwfilters/I_c_right_35",
  "share/MRCPP/mwfilters/I_c_right_36",
  "share/MRCPP/mwfilters/I_c_right_37",
  "share/MRCPP/mwfilters/I_c_right_38",
  "share/MRCPP/mwfilters/I_c_right_39",
  "share/MRCPP/mwfilters/I_c_right_4",
  "share/MRCPP/mwfilters/I_c_right_40",
  "share/MRCPP/mwfilters/I_c_right_41",
  "share/MRCPP/mwfilters/I_c_right_5",
  "share/MRCPP/mwfilters/I_c_right_6",
  "share/MRCPP/mwfilters/I_c_right_7",
  "share/MRCPP/mwfilters/I_c_right_8",
  "share/MRCPP/mwfilters/I_c_right_9",
  "share/MRCPP/mwfilters/L_G0_1",
  "share/MRCPP/mwfilters/L_G0_10",
  "share/MRCPP/mwfilters/L_G0_11",
  "share/MRCPP/mwfilters/L_G0_12",
  "share/MRCPP/mwfilters/L_G0_13",
  "share/MRCPP/mwfilters/L_G0_14",
  "share/MRCPP/mwfilters/L_G0_15",
  "share/MRCPP/mwfilters/L_G0_16",
  "share/MRCPP/mwfilters/L_G0_17",
  "share/MRCPP/mwfilters/L_G0_18",
  "share/MRCPP/mwfilters/L_G0_19",
  "share/MRCPP/mwfilters/L_G0_2",
  "share/MRCPP/mwfilters/L_G0_20",
  "share/MRCPP/mwfilters/L_G0_21",
  "share/MRCPP/mwfilters/L_G0_22",
  "share/MRCPP/mwfilters/L_G0_23",
  "share/MRCPP/mwfilters/L_G0_24",
  "share/MRCPP/mwfilters/L_G0_25",
  "share/MRCPP/mwfilters/L_G0_26",
  "share/MRCPP/mwfilters/L_G0_27",
  "share/MRCPP/mwfilters/L_G0_28",
  "share/MRCPP/mwfilters/L_G0_29",
  "share/MRCPP/mwfilters/L_G0_3",
  "share/MRCPP/mwfilters/L_G0_30",
  "share/MRCPP/mwfilters/L_G0_31",
  "share/MRCPP/mwfilters/L_G0_32",
  "share/MRCPP/mwfilters/L_G0_33",
  "share/MRCPP/mwfilters/L_G0_34",
  "share/MRCPP/mwfilters/L_G0_35",
  "share/MRCPP/mwfilters/L_G0_36",
  "share/MRCPP/mwfilters/L_G0_37",
  "share/MRCPP/mwfilters/L_G0_38",
  "share/MRCPP/mwfilters/L_G0_39",
  "share/MRCPP/mwfilters/L_G0_4",
  "share/MRCPP/mwfilters/L_G0_40",
  "share/MRCPP/mwfilters/L_G0_41",
  "share/MRCPP/mwfilters/L_G0_5",
  "share/MRCPP/mwfilters/L_G0_6",
  "share/MRCPP/mwfilters/L_G0_7",
  "share/MRCPP/mwfilters/L_G0_8",
  "share/MRCPP/mwfilters/L_G0_9",
  "share/MRCPP/mwfilters/L_H0_1",
  "share/MRCPP/mwfilters/L_H0_10",
  "share/MRCPP/mwfilters/L_H0_11",
  "share/MRCPP/mwfilters/L_H0_12",
  "share/MRCPP/mwfilters/L_H0_13",
  "share/MRCPP/mwfilters/L_H0_14",
  "share/MRCPP/mwfilters/L_H0_15",
  "share/MRCPP/mwfilters/L_H0_16",
  "share/MRCPP/mwfilters/L_H0_17",
  "share/MRCPP/mwfilters/L_H0_18",
  "share/MRCPP/mwfilters/L_H0_19",
  "share/MRCPP/mwfilters/L_H0_2",
  "share/MRCPP/mwfilters/L_H0_20",
  "share/MRCPP/mwfilters/L_H0_21",
  "share/MRCPP/mwfilters/L_H0_22",
  "share/MRCPP/mwfilters/L_H0_23",
  "share/MRCPP/mwfilters/L_H0_24",
  "share/MRCPP/mwfilters/L_H0_25",
  "share/MRCPP/mwfilters/L_H0_26",
  "share/MRCPP/mwfilters/L_H0_27",
  "share/MRCPP/mwfilters/L_H0_28",
  "share/MRCPP/mwfilters/L_H0_29",
  "share/MRCPP/mwfilters/L_H0_3",
  "share/MRCPP/mwfilters/L_H0_30",
  "share/MRCPP/mwfilters/L_H0_31",
  "share/MRCPP/mwfilters/L_H0_32",
  "share/MRCPP/mwfilters/L_H0_33",
  "share/MRCPP/mwfilters/L_H0_34",
  "share/MRCPP/mwfilters/L_H0_35",
  "share/MRCPP/mwfilters/L_H0_36",
  "share/MRCPP/mwfilters/L_H0_37",
  "share/MRCPP/mwfilters/L_H0_38",
  "share/MRCPP/mwfilters/L_H0_39",
  "share/MRCPP/mwfilters/L_H0_4",
  "share/MRCPP/mwfilters/L_H0_40",
  "share/MRCPP/mwfilters/L_H0_41",
  "share/MRCPP/mwfilters/L_H0_5",
  "share/MRCPP/mwfilters/L_H0_6",
  "share/MRCPP/mwfilters/L_H0_7",
  "share/MRCPP/mwfilters/L_H0_8",
  "share/MRCPP/mwfilters/L_H0_9",
  "share/MRCPP/mwfilters/L_c_left_1",
  "share/MRCPP/mwfilters/L_c_left_10",
  "share/MRCPP/mwfilters/L_c_left_11",
  "share/MRCPP/mwfilters/L_c_left_12",
  "share/MRCPP/mwfilters/L_c_left_13",
  "share/MRCPP/mwfilters/L_c_left_14",
  "share/MRCPP/mwfilters/L_c_left_15",
  "share/MRCPP/mwfilters/L_c_left_16",
  "share/MRCPP/mwfilters/L_c_left_17",
  "share/MRCPP/mwfilters/L_c_left_18",
  "share/MRCPP/mwfilters/L_c_left_19",
  "share/MRCPP/mwfilters/L_c_left_2",
  "share/MRCPP/mwfilters/L_c_left_20",
  "share/MRCPP/mwfilters/L_c_left_21",
  "share/MRCPP/mwfilters/L_c_left_22",
  "share/MRCPP/mwfilters/L_c_left_23",
  "share/MRCPP/mwfilters/L_c_left_24",
  "share/MRCPP/mwfilters/L_c_left_25",
  "share/MRCPP/mwfilters/L_c_left_26",
  "share/MRCPP/mwfilters/L_c_left_27",
  "share/MRCPP/mwfilters/L_c_left_28",
  "share/MRCPP/mwfilters/L_c_left_29",
  "share/MRCPP/mwfilters/L_c_left_3",
  "share/MRCPP/mwfilters/L_c_left_30",
  "share/MRCPP/mwfilters/L_c_left_31",
  "share/MRCPP/mwfilters/L_c_left_32",
  "share/MRCPP/mwfilters/L_c_left_33",
  "share/MRCPP/mwfilters/L_c_left_34",
  "share/MRCPP/mwfilters/L_c_left_35",
  "share/MRCPP/mwfilters/L_c_left_36",
  "share/MRCPP/mwfilters/L_c_left_37",
  "share/MRCPP/mwfilters/L_c_left_38",
  "share/MRCPP/mwfilters/L_c_left_39",
  "share/MRCPP/mwfilters/L_c_left_4",
  "share/MRCPP/mwfilters/L_c_left_40",
  "share/MRCPP/mwfilters/L_c_left_41",
  "share/MRCPP/mwfilters/L_c_left_5",
  "share/MRCPP/mwfilters/L_c_left_6",
  "share/MRCPP/mwfilters/L_c_left_7",
  "share/MRCPP/mwfilters/L_c_left_8",
  "share/MRCPP/mwfilters/L_c_left_9",
  "share/MRCPP/mwfilters/L_c_right_1",
  "share/MRCPP/mwfilters/L_c_right_10",
  "share/MRCPP/mwfilters/L_c_right_11",
  "share/MRCPP/mwfilters/L_c_right_12",
  "share/MRCPP/mwfilters/L_c_right_13",
  "share/MRCPP/mwfilters/L_c_right_14",
  "share/MRCPP/mwfilters/L_c_right_15",
  "share/MRCPP/mwfilters/L_c_right_16",
  "share/MRCPP/mwfilters/L_c_right_17",
  "share/MRCPP/mwfilters/L_c_right_18",
  "share/MRCPP/mwfilters/L_c_right_19",
  "share/MRCPP/mwfilters/L_c_right_2",
  "share/MRCPP/mwfilters/L_c_right_20",
  "share/MRCPP/mwfilters/L_c_right_21",
  "share/MRCPP/mwfilters/L_c_right_22",
  "share/MRCPP/mwfilters/L_c_right_23",
  "share/MRCPP/mwfilters/L_c_right_24",
  "share/MRCPP/mwfilters/L_c_right_25",
  "share/MRCPP/mwfilters/L_c_right_26",
  "share/MRCPP/mwfilters/L_c_right_27",
  "share/MRCPP/mwfilters/L_c_right_28",
  "share/MRCPP/mwfilters/L_c_right_29",
  "share/MRCPP/mwfilters/L_c_right_3",
  "share/MRCPP/mwfilters/L_c_right_30",
  "share/MRCPP/mwfilters/L_c_right_31",
  "share/MRCPP/mwfilters/L_c_right_32",
  "share/MRCPP/mwfilters/L_c_right_33",
  "share/MRCPP/mwfilters/L_c_right_34",
  "share/MRCPP/mwfilters/L_c_right_35",
  "share/MRCPP/mwfilters/L_c_right_36",
  "share/MRCPP/mwfilters/L_c_right_37",
  "share/MRCPP/mwfilters/L_c_right_38",
  "share/MRCPP/mwfilters/L_c_right_39",
  "share/MRCPP/mwfilters/L_c_right_4",
  "share/MRCPP/mwfilters/L_c_right_40",
  "share/MRCPP/mwfilters/L_c_right_41",
  "share/MRCPP/mwfilters/L_c_right_5",
  "share/MRCPP/mwfilters/L_c_right_6",
  "share/MRCPP/mwfilters/L_c_right_7",
  "share/MRCPP/mwfilters/L_c_right_8",
  "share/MRCPP/mwfilters/L_c_right_9",
  "share/MRCPP/mwfilters/README",
  "share/cmake/MRCPP/MRCPPConfig.cmake",
  "share/cmake/MRCPP/MRCPPConfigVersion.cmake",
  "share/cmake/MRCPP/MRCPPTargets-release.cmake",
  "share/cmake/MRCPP/MRCPPTargets.cmake"
 ],
 "index": {
  "arch": "x86_64",
  "build": "mpi_openmpi_h89d1f77_1",
  "build_number": 1,
  "depends": [
   "_openmp_mutex >=4.5",
   "eigen",
   "libgcc-ng >=7.5.0",
   "libstdcxx-ng >=7.5.0",
   "openmpi >=4.0,<4.1.0a0"
  ],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "name": "mrcpp",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1605089161813,
  "version": "1.3.6"
 },
 "metadata_version": 1,
 "name": "mrcpp",
 "raw_recipe": "{% set name = \"mrcpp\" %}\n{% set version = \"1.3.6\" %}\n{% set sha256 = \"2502e71f086a8bb5ea635d0c6b86e7ff60220a45583e96a08b3cfe7c9db4cecf\" %}\n{% set build = 1 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize shared-memory variant via build number\n{% set build = build + 100 %}\n{% endif %}\n# NOTE This means that the OpenMP build will be highest priority\n\n{% if mpi != \"nompi\" %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n# add build string so packages can depend on\n# mpi or nompi variants dependencies:\n# `mrcpp * mpi_mpich_*` for mpich\n# `mrcpp * mpi_*` for any mpi\n# `mrcpp * nompi_*` for no mpi\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MRChemSoft/mrcpp/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  binary_relocation: true\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n  run_exports:\n    - {{ pin_subpackage('mrcpp', max_pin='x.x') }}\n    - {{ name }} * {{ mpi_prefix }}_*\n\nrequirements:\n  build:\n    - cmake >=3.11\n    - {{ compiler('cxx') }}\n    - ninja\n  host:\n    - {{ pin_compatible('eigen', max_pin='x.x') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - {{ mpi }}    # [mpi != 'nompi']\n  run:\n    - eigen\n\ntest:\n  commands:\n    # Verify library\n    - test -f $PREFIX/lib/libmrcpp$SHLIB_EXT                              # [not win]\n    - test -L $PREFIX/lib/libmrcpp$SHLIB_EXT                              # [not win]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libmrcpp$SHLIB_EXT                               # [linux]\n    - otool -L $PREFIX/lib/libmrcpp$SHLIB_EXT                             # [osx]\n    - conda inspect linkages --show-files --groupby=dependency $PKG_NAME  # [not win]\n    - conda inspect objects -p $PREFIX $PKG_NAME                          # [osx]\n\noutputs:\n  - name: mrcpp\n    files:\n      - bin/mrcpp-tests        # [not win]\n      - include/MRCPP          # [not win]\n      - lib/libmrcpp*          # [not win]\n      - share/cmake/MRCPP      # [not win]\n      - share/MRCPP/mwfilters  # [not win]\n\nabout:\n  home: https://github.com/MRChemSoft/mrcpp\n  dev_url: https://github.com/MRChemSoft/mrcpp\n  doc_url: https://mrcpp.readthedocs.io/en/latest/\n  doc_source_url: https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst\n  license: LGPL-3.0-or-later\n  license_url: https://opensource.org/licenses/LGPL-3.0\n  license_file: LICENSE\n  license_family: LGPL\n  summary: MultiResolution Computational Program Package\n\nextra:\n  recipe-maintainers:\n    - robertodr\n    - bjorgve\n    - stigrj\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://github.com/MRChemSoft/mrcpp",
   "doc_source_url": "https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst",
   "doc_url": "https://mrcpp.readthedocs.io/en/latest/",
   "home": "https://github.com/MRChemSoft/mrcpp",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "license_url": "https://opensource.org/licenses/LGPL-3.0",
   "summary": "MultiResolution Computational Program Package"
  },
  "build": {
   "binary_relocation": true,
   "number": "1",
   "run_exports": [
    "mrcpp * mpi_openmpi_*",
    "mrcpp >=1.3.6,<1.4.0a0"
   ],
   "string": "mpi_openmpi_h89d1f77_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bjorgve",
    "robertodr",
    "stigrj"
   ]
  },
  "package": {
   "name": "mrcpp",
   "version": "1.3.6"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35 h18a2f87_9",
    "binutils_linux-64 2.35 hc3fd857_29",
    "bzip2 1.0.8 h516909a_3",
    "c-ares 1.16.1 h516909a_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "cmake 3.18.4 h1f3970d_0",
    "expat 2.2.9 he1b5a44_2",
    "gcc_impl_linux-64 7.5.0 hd9e1a51_17",
    "gcc_linux-64 7.5.0 he2a3fca_29",
    "gxx_impl_linux-64 7.5.0 h7ea4de1_17",
    "gxx_linux-64 7.5.0 h547f3ba_29",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "krb5 1.17.1 hfafb76e_3",
    "ld_impl_linux-64 2.35 h769bd43_9",
    "libcurl 7.71.1 hcdd3856_8",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 7.5.0 h42c25f5_17",
    "libgcc-ng 9.3.0 h5dbcf3e_17",
    "libgomp 9.3.0 h5dbcf3e_17",
    "libnghttp2 1.41.0 h8cfc5f6_2",
    "libssh2 1.9.0 hab1572f_5",
    "libstdcxx-devel_linux-64 7.5.0 h4084dd6_17",
    "libstdcxx-ng 9.3.0 h2ae2ef3_17",
    "libuv 1.40.0 hd18ef5c_0",
    "ncurses 6.2 h58526e2_3",
    "ninja 1.10.1 hfc4b9b4_2",
    "openssl 1.1.1h h516909a_0",
    "rhash 1.3.6 h516909a_1001",
    "sysroot_linux-64 2.12 h77966d4_13",
    "tk 8.6.10 hed695b0_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "eigen 3.3.8 hc9558a2_0",
    "libgcc-ng 9.3.0 h5dbcf3e_17",
    "libgfortran-ng 9.3.0 he4bcb1c_17",
    "libgfortran5 9.3.0 he4bcb1c_17",
    "libgomp 9.3.0 h5dbcf3e_17",
    "libstdcxx-ng 9.3.0 h2ae2ef3_17",
    "mpi 1.0 openmpi",
    "openmpi 4.0.5 h2c4babf_3",
    "zlib 1.2.11 h516909a_1010"
   ],
   "run": [
    "_openmp_mutex >=4.5",
    "eigen",
    "libgcc-ng >=7.5.0",
    "libstdcxx-ng >=7.5.0",
    "openmpi >=4.0,<4.1.0a0"
   ]
  },
  "source": {
   "sha256": "2502e71f086a8bb5ea635d0c6b86e7ff60220a45583e96a08b3cfe7c9db4cecf",
   "url": "https://github.com/MRChemSoft/mrcpp/archive/v1.3.6.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmrcpp$SHLIB_EXT",
    "test -L $PREFIX/lib/libmrcpp$SHLIB_EXT",
    "ldd -v $PREFIX/lib/libmrcpp$SHLIB_EXT",
    "conda inspect linkages --show-files --groupby=dependency $PKG_NAME"
   ]
  }
 },
 "version": "1.3.6"
}