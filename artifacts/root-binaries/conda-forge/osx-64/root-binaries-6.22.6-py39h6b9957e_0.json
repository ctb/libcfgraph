{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.5",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available. In most cases users should use the `root` package directly, since it adds both of these, along with compilers, Jupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
  "dev_url": "https://github.com/root-project/root/",
  "doc_url": "https://root.cern/documentation",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "parent_recipe": {
    "name": "root",
    "path": "/Users/runner/work/1/s/recipe",
    "version": "6.22.6"
   },
   "recipe-maintainers": [
    "chrisburr",
    "henryiii",
    "eguiraud",
    "egpbos"
   ]
  },
  "home": "https://root.cern/",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.1-only",
  "license_family": "LGPL",
  "license_file": "root-source/LICENSE",
  "root_pkgs": [
   "certifi 2020.12.5 py38h50d1736_0",
   "ruamel_yaml 0.15.80 py38h94c058a_1003",
   "ca-certificates 2020.12.5 h033912b_0",
   "urllib3 1.25.11 py_0",
   "conda-env 2.6.0 1",
   "markupsafe 1.1.1 py38h94c058a_2",
   "requests 2.25.0 pyhd3deb0d_0",
   "tk 8.6.10 hb0a8c7a_1",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38heedec30_2",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "nbformat 5.0.8 py_0",
   "anaconda-client 1.7.2 py_0",
   "libcurl 7.71.1 h9bf37e3_8",
   "jsonschema 3.2.0 py_2",
   "cffi 1.14.4 py38h979bc6b_1",
   "cryptography 3.2.1 py38h5c1d3f9_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "soupsieve 2.0.1 py_1",
   "libxml2 2.9.10 h2c6e4a5_2",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "shyaml 0.6.1 py_0",
   "perl 5.32.0 hbcb3906_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "openssl 1.1.1h haf1e3a3_0",
   "c-ares 1.17.1 hc929b4f_0",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "expat 2.2.9 hb1e8313_2",
   "lz4-c 1.9.2 hb1e8313_3",
   "tqdm 4.54.1 pyhd8ed1ab_0",
   "importlib_metadata 3.1.1 hd8ed1ab_0",
   "xz 5.2.5 haf1e3a3_1",
   "libffi 3.3 h74dc148_1",
   "python 3.8.6 h3b7b5d6_1_cpython",
   "libcxx 11.0.0 h4c3b8ed_1",
   "liblief 0.10.1 hb1e8313_2",
   "brotlipy 0.7.0 py38h94c058a_1001",
   "git 2.29.2 pl5320h422953c_1",
   "zlib 1.2.11 h7795811_1010",
   "pcre 8.44 hb1e8313_0",
   "curl 7.71.1 hcb81553_8",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-build 3.20.5 py38h5347e94_0",
   "zstd 1.4.5 h289c70a_2",
   "wheel 0.36.1 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.5.3 py38he866dac_0",
   "gettext 0.19.8.1 h7937167_1005",
   "attrs 20.3.0 pyhd3deb0d_0",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "readline 8.0 h0678c8f_2",
   "icu 67.1 hb1e8313_0",
   "ripgrep 12.1.1 haf1e3a3_1",
   "libarchive 3.5.0 hcf98e8c_0",
   "conda 4.9.2 py38h50d1736_0",
   "pycosat 0.6.3 py38h94c058a_1005",
   "pyopenssl 20.0.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "oniguruma 6.9.3 hc929b4f_0",
   "pytz 2020.4 pyhd8ed1ab_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "bzip2 1.0.8 hc929b4f_4",
   "clyent 1.2.2 py_1",
   "sqlite 3.34.0 h17101e1_0",
   "pip 20.3.1 pyhd8ed1ab_0",
   "conda-package-handling 1.7.2 py38h94c058a_0",
   "pysocks 1.7.1 py38h5347e94_2",
   "zipp 3.4.0 py_0",
   "chardet 3.0.4 py38h5347e94_1008",
   "psutil 5.7.3 py38h94c058a_0",
   "pyrsistent 0.17.3 py38h7e3306e_1",
   "pyyaml 5.3.1 py38h94c058a_1",
   "python-libarchive-c 2.9 py38h5347e94_2",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "krb5 1.17.2 h60d9502_0",
   "lzo 2.10 haf1e3a3_1000",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "importlib-metadata 3.1.1 pyhd8ed1ab_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "jupyter_core 4.7.0 py38h50d1736_0",
   "setuptools 49.6.0 py38h5347e94_2"
  ],
  "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.13",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "cfitsio": "3.470",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "11",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys"
  ],
  "fftw": "3",
  "fortran_compiler": "gfortran",
  "freetype": "2",
  "gdk_pixbuf": "2",
  "giflib": "5.2",
  "glew": "2.1",
  "graphviz": "2.40",
  "gsl": "2.6",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "krb5": "1.17.1",
  "libblas": "3.8 *netlib",
  "libcblas": "3.8 *netlib",
  "libpng": "1.6",
  "librsvg": "2",
  "libtiff": "4.1.0",
  "libxml2": "2.9",
  "lua": "5",
  "lz4_c": "1.9.2",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.19",
  "openssl": "1.1.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "fftw": {
    "max_pin": "x"
   },
   "freetype": {
    "max_pin": "x"
   },
   "glew": {
    "max_pin": "x.x"
   },
   "graphviz": {
    "max_pin": "x"
   },
   "krb5": {
    "max_pin": "x.x"
   },
   "libpng": {
    "max_pin": "x.x"
   },
   "librsvg": {
    "max_pin": "x"
   },
   "libtiff": {
    "max_pin": "x"
   },
   "libxml2": {
    "max_pin": "x.x"
   },
   "lz4-c": {
    "max_pin": "x.x.x"
   },
   "openssl": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "sqlite": {
    "max_pin": "x"
   },
   "xz": {
    "max_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "r_base": "3.5",
  "sqlite": "3",
  "target_platform": "osx-64",
  "xrootd": "5",
  "xz": "5.2",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ],
   [
    "python",
    "numpy"
   ]
  ],
  "zlib": "1.2",
  "zstd": "1.4"
 },
 "files": [
  "bin/genreflex",
  "bin/hadd",
  "bin/hist2workspace",
  "bin/memprobe",
  "bin/prepareHistFactory",
  "bin/proofserv",
  "bin/proofserv.exe",
  "bin/rmkdepend",
  "bin/root",
  "bin/root-config",
  "bin/root.exe",
  "bin/rootbrowse",
  "bin/rootcint",
  "bin/rootcling",
  "bin/rootcp",
  "bin/rootdrawtree",
  "bin/rooteventselector",
  "bin/rootls",
  "bin/rootmkdir",
  "bin/rootmv",
  "bin/rootn.exe",
  "bin/rootnb.exe",
  "bin/rootprint",
  "bin/rootrm",
  "bin/roots",
  "bin/roots.exe",
  "bin/rootslimtree",
  "bin/setxrd.csh",
  "bin/setxrd.sh",
  "bin/thisroot.csh",
  "bin/thisroot.fish",
  "bin/thisroot.sh",
  "bin/xpdtest",
  "bin/xproofd"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py39h6b9957e_0",
  "build_number": 0,
  "constrains": [
   "__osx >=10.13"
  ],
  "depends": [
   "afterimage >=1.21,<1.22.0a0",
   "cffi",
   "cfitsio >=3.470,<3.471.0a0",
   "davix >=0.7.6,<0.8.0a0",
   "fftw >=3.3.8,<4.0a0",
   "freetype >=2.10.4,<3.0a0",
   "ftgl >=2.4.0,<2.4.1.0a0",
   "gdk-pixbuf >=2.42.0,<3.0a0",
   "giflib >=5.2.1,<5.3.0a0",
   "gl2ps >=1.4.2,<1.4.3.0a0",
   "glew >=2.1.0,<2.2.0a0",
   "gsl >=2.6,<2.7.0a0",
   "libblas >=3.8.0,<4.0a0",
   "libcblas >=3.8.0,<4.0a0",
   "libcxx >=11.0.0",
   "libpng >=1.6.37,<1.7.0a0",
   "librsvg >=2.50.2,<3.0a0",
   "libtiff >=4.1.0,<5.0a0",
   "libxml2 >=2.9.10,<2.10.0a0",
   "lz4-c >=1.9.2,<1.9.3.0a0",
   "numpy >=1.19.4,<2.0a0",
   "openssl >=1.1.1h,<1.1.2a",
   "pcre >=8.44,<9.0a0",
   "pythia8 >=8.244,<8.300.0a0",
   "python >=3.9,<3.10.0a0",
   "python_abi 3.9.* *_cp39",
   "root_base 6.22.6 py39h5d751ef_0",
   "sqlite >=3.34.0,<4.0a0",
   "tbb >=2019.9",
   "vdt >=0.4.3,<0.4.4.0a0",
   "xrootd >=5.0.3,<6.0a0",
   "xxhash >=0.8.0,<0.8.1.0a0",
   "xz >=5.2.5,<5.3.0a0",
   "zlib >=1.2.11,<1.3.0a0",
   "zstd >=1.4.5,<1.5.0a0"
  ],
  "license": "LGPL-2.1-only",
  "license_family": "LGPL",
  "name": "root-binaries",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1607280972963,
  "version": "6.22.6"
 },
 "metadata_version": 1,
 "name": "root-binaries",
 "raw_recipe": "# This file created by conda-build 3.20.5\n# ------------------------------------------------\n\npackage:\n    name: root-binaries\n    version: 6.22.6\nsource:\n    folder: root-source\n    patches:\n        - patches/6503.diff\n        - patches/root-x.xx.xx-copy-abspath-headers.patch\n        - patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch\n        - patches/root-x.xx.xx_cling-runtime-sysroot.patch\n    sha256: 81fe6403a3cf51bb1c411f240d9c233473a833e5738b3abf68ed55d0d27ce1cd\n    url: https://github.com/root-project/root/archive/v6-22-06.tar.gz\nbuild:\n    number: 0\n    script:\n        - set -euxo pipefail\n        - mkdir -p ${PREFIX}/bin\n        - ls ${PREFIX}/bin/\n        - cp -rp ${SRC_DIR}/root-binaries/* ${PREFIX}/bin/\n        - ls ${PREFIX}/bin/\n    string: py39h6b9957e_0\nrequirements:\n    build:\n        - bzip2 1.0.8 hc929b4f_4\n        - c-ares 1.17.1 hc929b4f_0\n        - ca-certificates 2020.12.5 h033912b_0\n        - cctools_osx-64 949.0.1 h2f0f38f_18\n        - clang 11.0.0 h694c41f_2\n        - clang-11 11.0.0 default_h9e6edd0_2\n        - clang_osx-64 11.0.0 hb91bd55_8\n        - clangxx 11.0.0 default_h9e6edd0_2\n        - clangxx_osx-64 11.0.0 h7e1b574_8\n        - cmake 3.19.1 h800fed6_0\n        - compiler-rt 11.0.0 h01488ec_2\n        - compiler-rt_osx-64 11.0.0 hd3c4e95_2\n        - curl 7.71.1 hcb81553_8\n        - expat 2.2.9 hb1e8313_2\n        - gettext 0.19.8.1 h7937167_1005\n        - git 2.29.2 pl5320h422953c_1\n        - krb5 1.17.2 h60d9502_0\n        - ld64_osx-64 530 hea264c1_18\n        - ldid 2.1.2 h7660a38_2\n        - libclang-cpp11 11.0.0 default_h9e6edd0_2\n        - libcurl 7.71.1 h9bf37e3_8\n        - libcxx 11.0.0 h4c3b8ed_1\n        - libedit 3.1.20191231 h0678c8f_2\n        - libev 4.33 haf1e3a3_1\n        - libffi 3.3 h74dc148_1\n        - libiconv 1.16 haf1e3a3_0\n        - libllvm11 11.0.0 hf85e3d2_0\n        - libnghttp2 1.41.0 h7580e61_2\n        - libssh2 1.9.0 h8a08a2b_5\n        - libuv 1.40.0 h22f3db7_0\n        - llvm-tools 11.0.0 hf85e3d2_0\n        - make 4.3 h22f3db7_1\n        - ncurses 6.2 h2e338ed_4\n        - openssl 1.1.1h haf1e3a3_0\n        - pcre 8.44 hb1e8313_0\n        - perl 5.32.0 hbcb3906_0\n        - pkg-config 0.29.2 h31203cd_1008\n        - rhash 1.3.6 haf1e3a3_1001\n        - sed 4.7 h3efe00b_1000\n        - tapi 1100.0.11 h9ce4665_0\n        - tk 8.6.10 hb0a8c7a_1\n        - xz 5.2.5 haf1e3a3_1\n        - zlib 1.2.11 h7795811_1010\n    host:\n        - afterimage 1.21 hf755657_1003\n        - bzip2 1.0.8 hc929b4f_4\n        - c-ares 1.17.1 hc929b4f_0\n        - ca-certificates 2020.12.5 h033912b_0\n        - cairo 1.16.0 he8db5a5_1006\n        - cfitsio 3.470 h01dc385_7\n        - davix 0.7.6 h61356a0_0\n        - fftw 3.3.8 nompi_h5db8ec8_1114\n        - fontconfig 2.13.1 h186bf41_1002\n        - freetype 2.10.4 h3f75d11_0\n        - fribidi 1.0.10 hbcb3906_0\n        - ftgl 2.4.0 h508da5b_0\n        - gdk-pixbuf 2.42.0 h277081d_1\n        - gettext 0.19.8.1 h7937167_1005\n        - giflib 5.2.1 hbcb3906_2\n        - gl2ps 1.4.2 h4cff582_0\n        - glew 2.1.0 h046ec9c_2\n        - glib 2.66.3 h519c658_1\n        - graphite2 1.3.13 h2e338ed_1001\n        - graphviz 2.40.1 h69955ae_1\n        - gsl 2.6 hdac7af7_0\n        - harfbuzz 2.7.2 h73e2de6_1\n        - icu 67.1 hb1e8313_0\n        - jpeg 9d hbcb3906_0\n        - krb5 1.17.2 h60d9502_0\n        - libblas 3.8.0 11_h508aa58_netlib\n        - libcblas 3.8.0 11_h508aa58_netlib\n        - libcurl 7.71.1 h9bf37e3_8\n        - libcxx 11.0.0 h4c3b8ed_1\n        - libedit 3.1.20191231 h0678c8f_2\n        - libev 4.33 haf1e3a3_1\n        - libffi 3.3 h74dc148_1\n        - libgfortran 5.0.0 h7cc5361_13\n        - libgfortran5 9.3.0 h7cc5361_13\n        - libglib 2.66.3 h60154bc_1\n        - libiconv 1.16 haf1e3a3_0\n        - liblapack 3.8.0 11_h508aa58_netlib\n        - libnghttp2 1.41.0 h7580e61_2\n        - libpng 1.6.37 h7cec526_2\n        - librsvg 2.50.2 h4d7162d_1\n        - libssh2 1.9.0 h8a08a2b_5\n        - libtiff 4.1.0 hca7d577_6\n        - libwebp-base 1.1.0 hbcb3906_3\n        - libxml2 2.9.10 h2c6e4a5_2\n        - llvm-openmp 11.0.0 h73239a0_1\n        - lz4-c 1.9.2 hb1e8313_3\n        - ncurses 6.2 h2e338ed_4\n        - numpy 1.19.4 py39hd3e5478_1\n        - openssl 1.1.1h haf1e3a3_0\n        - pango 1.42.4 ha86e081_5\n        - pcre 8.44 hb1e8313_0\n        - pixman 0.40.0 hbcb3906_0\n        - pythia8 8.244 py39h81cd7d3_2\n        - python 3.9.0 h4f09611_5_cpython\n        - python_abi 3.9 1_cp39\n        - readline 8.0 h0678c8f_2\n        - root_base 6.22.6 py39h5d751ef_0\n        - sqlite 3.34.0 h17101e1_0\n        - tbb 2019.9 ha1b3eb9_1\n        - tbb-devel 2019.9 ha1b3eb9_1\n        - tk 8.6.10 hb0a8c7a_1\n        - tzdata 2020d h516909a_0\n        - vdt 0.4.3 h046ec9c_0\n        - xrootd 5.0.3 py39h4ee03a1_0\n        - xxhash 0.8.0 h35c211d_1\n        - xz 5.2.5 haf1e3a3_1\n        - zlib 1.2.11 h7795811_1010\n        - zstd 1.4.5 h289c70a_2\n    run:\n        - afterimage >=1.21,<1.22.0a0\n        - cffi\n        - cfitsio >=3.470,<3.471.0a0\n        - davix >=0.7.6,<0.8.0a0\n        - fftw >=3.3.8,<4.0a0\n        - freetype >=2.10.4,<3.0a0\n        - ftgl >=2.4.0,<2.4.1.0a0\n        - gdk-pixbuf >=2.42.0,<3.0a0\n        - giflib >=5.2.1,<5.3.0a0\n        - gl2ps >=1.4.2,<1.4.3.0a0\n        - glew >=2.1.0,<2.2.0a0\n        - gsl >=2.6,<2.7.0a0\n        - libblas >=3.8.0,<4.0a0\n        - libcblas >=3.8.0,<4.0a0\n        - libcxx >=11.0.0\n        - libpng >=1.6.37,<1.7.0a0\n        - librsvg >=2.50.2,<3.0a0\n        - libtiff >=4.1.0,<5.0a0\n        - libxml2 >=2.9.10,<2.10.0a0\n        - lz4-c >=1.9.2,<1.9.3.0a0\n        - numpy >=1.19.4,<2.0a0\n        - openssl >=1.1.1h,<1.1.2a\n        - pcre >=8.44,<9.0a0\n        - pythia8 >=8.244,<8.300.0a0\n        - python >=3.9,<3.10.0a0\n        - python_abi 3.9.* *_cp39\n        - root_base 6.22.6 py39h5d751ef_0\n        - sqlite >=3.34.0,<4.0a0\n        - tbb >=2019.9\n        - vdt >=0.4.3,<0.4.4.0a0\n        - xrootd >=5.0.3,<6.0a0\n        - xxhash >=0.8.0,<0.8.1.0a0\n        - xz >=5.2.5,<5.3.0a0\n        - zlib >=1.2.11,<1.3.0a0\n        - zstd >=1.4.5,<1.5.0a0\n    run_constrained:\n        - __osx >=10.13\ntest:\n    commands:\n        - root -l -b -q -x\n        - root -l -b -q -x test.cpp\n        - root -b -l -q -x -e '2+3; 0'\n        - root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'\n        - echo ${CONDA_BUILD_SYSROOT}\n        - thisroot.sh\n        - thisroot.csh\n        - thisroot.fish\n        - root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas();\n            if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to\n            be working\"); }'\n        - root -b -l -q -x \"${ROOTSYS}/tutorials/eve/geom_lhcb.C\" || true\n        - root -b -l -q -x \"${ROOTSYS}/tutorials/tree/run_h1analysis.C\"\n        - python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree',\n            'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root');\n            print(rdf.Cache('H1_PX').AsNumpy())\"\n        - python test_pyroot.py\n    files:\n        - test.cpp\n        - test_pyroot.py\n    requires:\n        - root-dependencies 6.22.6 *_0\nabout:\n    description: 'Almost everything in ROOT should be supported in this Conda package;\n        ROOT was built with lots of options turned\n\n        on. Here are a few things to try:\n\n\n        * `root`: you can start up a session and see the splash screen; Control-D\n        to exit.\n\n        * `python` followed by `import ROOT` will load PyROOT.\n\n        * `root --notebook` will start a notebook server with a ROOT kernel choice.\n\n        * `rootbrowse` will open a TBrowser session so you can look through files.\n\n        * `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run\n        a DataFrame example with an animated plot.\n\n        * `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"`\n        will print the tutorial dir.\n\n        * `root -b -l -q -e ''std::cout << (float) TPython::Eval(\"1+1\") << endl;''`\n        will run Python from C++ ROOT.\n\n\n        See the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more\n        information about using this Conda package.\n\n\n        The ROOT package will prepare the required compilers. Everything in Conda\n        is symlinked into\n\n        `$CONDA_PREFIX` if you build things by hand; tools like CMake should find\n        it automatically. The `thisroot.*`\n\n        scripts should not be used and are not provided. Graphics, `rootbrowse`, etc.\n        all should work. OpenGL is enabled.\n\n\n        There is also a `root_base` package, with minimal dependecies, that libraries\n        should depend on this to avoid\n\n        having a runtime dependency on the `compilers` package. `root-dependencies`\n        and `root-binaries` are also available. In most cases users should use the\n        `root` package directly, since it adds both of these, along with compilers,\n        Jupyter, and a few other things to facilitate using ROOT or PyROOT.\n\n\n        ROOT was built with and will report `-std=c++17` from `root-config`.\n\n        '\n    dev_url: https://github.com/root-project/root/\n    doc_url: https://root.cern/documentation\n    home: https://root.cern/\n    license: LGPL-2.1-only\n    license_family: LGPL\n    license_file: root-source/LICENSE\n    summary: 'ROOT is a modular scientific software toolkit. It provides all the functionalities\n        needed to deal with big data\n\n        processing, statistical analysis, visualisation and storage. It is mainly\n        written in C++ but integrated with other\n\n        languages such as Python and R.\n\n        '\nextra:\n    copy_test_source_files: true\n    final: true\n    recipe-maintainers:\n        - chrisburr\n        - egpbos\n        - eguiraud\n        - henryiii\n",
 "rendered_recipe": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available. In most cases users should use the `root` package directly, since it adds both of these, along with compilers, Jupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_family": "LGPL",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "number": 0,
   "script": [
    "set -euxo pipefail",
    "mkdir -p ${PREFIX}/bin",
    "ls ${PREFIX}/bin/",
    "cp -rp ${SRC_DIR}/root-binaries/* ${PREFIX}/bin/",
    "ls ${PREFIX}/bin/"
   ],
   "string": "py39h6b9957e_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "chrisburr",
    "egpbos",
    "eguiraud",
    "henryiii"
   ]
  },
  "package": {
   "name": "root-binaries",
   "version": "6.22.6"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 hc929b4f_4",
    "c-ares 1.17.1 hc929b4f_0",
    "ca-certificates 2020.12.5 h033912b_0",
    "cctools_osx-64 949.0.1 h2f0f38f_18",
    "clang 11.0.0 h694c41f_2",
    "clang-11 11.0.0 default_h9e6edd0_2",
    "clang_osx-64 11.0.0 hb91bd55_8",
    "clangxx 11.0.0 default_h9e6edd0_2",
    "clangxx_osx-64 11.0.0 h7e1b574_8",
    "cmake 3.19.1 h800fed6_0",
    "compiler-rt 11.0.0 h01488ec_2",
    "compiler-rt_osx-64 11.0.0 hd3c4e95_2",
    "curl 7.71.1 hcb81553_8",
    "expat 2.2.9 hb1e8313_2",
    "gettext 0.19.8.1 h7937167_1005",
    "git 2.29.2 pl5320h422953c_1",
    "krb5 1.17.2 h60d9502_0",
    "ld64_osx-64 530 hea264c1_18",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp11 11.0.0 default_h9e6edd0_2",
    "libcurl 7.71.1 h9bf37e3_8",
    "libcxx 11.0.0 h4c3b8ed_1",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.3 h74dc148_1",
    "libiconv 1.16 haf1e3a3_0",
    "libllvm11 11.0.0 hf85e3d2_0",
    "libnghttp2 1.41.0 h7580e61_2",
    "libssh2 1.9.0 h8a08a2b_5",
    "libuv 1.40.0 h22f3db7_0",
    "llvm-tools 11.0.0 hf85e3d2_0",
    "make 4.3 h22f3db7_1",
    "ncurses 6.2 h2e338ed_4",
    "openssl 1.1.1h haf1e3a3_0",
    "pcre 8.44 hb1e8313_0",
    "perl 5.32.0 hbcb3906_0",
    "pkg-config 0.29.2 h31203cd_1008",
    "rhash 1.3.6 haf1e3a3_1001",
    "sed 4.7 h3efe00b_1000",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.10 hb0a8c7a_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010"
   ],
   "host": [
    "afterimage 1.21 hf755657_1003",
    "bzip2 1.0.8 hc929b4f_4",
    "c-ares 1.17.1 hc929b4f_0",
    "ca-certificates 2020.12.5 h033912b_0",
    "cairo 1.16.0 he8db5a5_1006",
    "cfitsio 3.470 h01dc385_7",
    "davix 0.7.6 h61356a0_0",
    "fftw 3.3.8 nompi_h5db8ec8_1114",
    "fontconfig 2.13.1 h186bf41_1002",
    "freetype 2.10.4 h3f75d11_0",
    "fribidi 1.0.10 hbcb3906_0",
    "ftgl 2.4.0 h508da5b_0",
    "gdk-pixbuf 2.42.0 h277081d_1",
    "gettext 0.19.8.1 h7937167_1005",
    "giflib 5.2.1 hbcb3906_2",
    "gl2ps 1.4.2 h4cff582_0",
    "glew 2.1.0 h046ec9c_2",
    "glib 2.66.3 h519c658_1",
    "graphite2 1.3.13 h2e338ed_1001",
    "graphviz 2.40.1 h69955ae_1",
    "gsl 2.6 hdac7af7_0",
    "harfbuzz 2.7.2 h73e2de6_1",
    "icu 67.1 hb1e8313_0",
    "jpeg 9d hbcb3906_0",
    "krb5 1.17.2 h60d9502_0",
    "libblas 3.8.0 11_h508aa58_netlib",
    "libcblas 3.8.0 11_h508aa58_netlib",
    "libcurl 7.71.1 h9bf37e3_8",
    "libcxx 11.0.0 h4c3b8ed_1",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.3 h74dc148_1",
    "libgfortran 5.0.0 h7cc5361_13",
    "libgfortran5 9.3.0 h7cc5361_13",
    "libglib 2.66.3 h60154bc_1",
    "libiconv 1.16 haf1e3a3_0",
    "liblapack 3.8.0 11_h508aa58_netlib",
    "libnghttp2 1.41.0 h7580e61_2",
    "libpng 1.6.37 h7cec526_2",
    "librsvg 2.50.2 h4d7162d_1",
    "libssh2 1.9.0 h8a08a2b_5",
    "libtiff 4.1.0 hca7d577_6",
    "libwebp-base 1.1.0 hbcb3906_3",
    "libxml2 2.9.10 h2c6e4a5_2",
    "llvm-openmp 11.0.0 h73239a0_1",
    "lz4-c 1.9.2 hb1e8313_3",
    "ncurses 6.2 h2e338ed_4",
    "numpy 1.19.4 py39hd3e5478_1",
    "openssl 1.1.1h haf1e3a3_0",
    "pango 1.42.4 ha86e081_5",
    "pcre 8.44 hb1e8313_0",
    "pixman 0.40.0 hbcb3906_0",
    "pythia8 8.244 py39h81cd7d3_2",
    "python 3.9.0 h4f09611_5_cpython",
    "python_abi 3.9 1_cp39",
    "readline 8.0 h0678c8f_2",
    "root_base 6.22.6 py39h5d751ef_0",
    "sqlite 3.34.0 h17101e1_0",
    "tbb 2019.9 ha1b3eb9_1",
    "tbb-devel 2019.9 ha1b3eb9_1",
    "tk 8.6.10 hb0a8c7a_1",
    "tzdata 2020d h516909a_0",
    "vdt 0.4.3 h046ec9c_0",
    "xrootd 5.0.3 py39h4ee03a1_0",
    "xxhash 0.8.0 h35c211d_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010",
    "zstd 1.4.5 h289c70a_2"
   ],
   "run": [
    "afterimage >=1.21,<1.22.0a0",
    "cffi",
    "cfitsio >=3.470,<3.471.0a0",
    "davix >=0.7.6,<0.8.0a0",
    "fftw >=3.3.8,<4.0a0",
    "freetype >=2.10.4,<3.0a0",
    "ftgl >=2.4.0,<2.4.1.0a0",
    "gdk-pixbuf >=2.42.0,<3.0a0",
    "giflib >=5.2.1,<5.3.0a0",
    "gl2ps >=1.4.2,<1.4.3.0a0",
    "glew >=2.1.0,<2.2.0a0",
    "gsl >=2.6,<2.7.0a0",
    "libblas >=3.8.0,<4.0a0",
    "libcblas >=3.8.0,<4.0a0",
    "libcxx >=11.0.0",
    "libpng >=1.6.37,<1.7.0a0",
    "librsvg >=2.50.2,<3.0a0",
    "libtiff >=4.1.0,<5.0a0",
    "libxml2 >=2.9.10,<2.10.0a0",
    "lz4-c >=1.9.2,<1.9.3.0a0",
    "numpy >=1.19.4,<2.0a0",
    "openssl >=1.1.1h,<1.1.2a",
    "pcre >=8.44,<9.0a0",
    "pythia8 >=8.244,<8.300.0a0",
    "python >=3.9,<3.10.0a0",
    "python_abi 3.9.* *_cp39",
    "root_base 6.22.6 py39h5d751ef_0",
    "sqlite >=3.34.0,<4.0a0",
    "tbb >=2019.9",
    "vdt >=0.4.3,<0.4.4.0a0",
    "xrootd >=5.0.3,<6.0a0",
    "xxhash >=0.8.0,<0.8.1.0a0",
    "xz >=5.2.5,<5.3.0a0",
    "zlib >=1.2.11,<1.3.0a0",
    "zstd >=1.4.5,<1.5.0a0"
   ],
   "run_constrained": [
    "__osx >=10.13"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/6503.diff",
    "patches/root-x.xx.xx-copy-abspath-headers.patch",
    "patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch",
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch"
   ],
   "sha256": "81fe6403a3cf51bb1c411f240d9c233473a833e5738b3abf68ed55d0d27ce1cd",
   "url": "https://github.com/root-project/root/archive/v6-22-06.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "echo ${CONDA_BUILD_SYSROOT}",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${ROOTSYS}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${ROOTSYS}/tutorials/tree/run_h1analysis.C\"",
    "python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "python test_pyroot.py"
   ],
   "files": [
    "test.cpp",
    "test_pyroot.py"
   ],
   "requires": [
    "root-dependencies 6.22.6 *_0"
   ]
  }
 },
 "version": "6.22.6"
}