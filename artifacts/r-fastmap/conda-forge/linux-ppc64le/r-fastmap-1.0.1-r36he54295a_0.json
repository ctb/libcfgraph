{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "home": "https://r-lib.github.io/fastmap/, https://github.com/r-lib/fastmap",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": [
   "/home/conda/feedstock_root/build_artifacts/r-fastmap_1587129067919/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/lib/R/share/licenses/MIT",
   "LICENSE"
  ],
  "root_pkgs": [
   "openssl 1.1.1f h6eb9509_0",
   "lz4-c 1.9.2 hb209c28_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "conda 4.8.3 py37hc8dfbb8_1",
   "krb5 1.17.1 h41979e3_0",
   "conda-package-handling 1.6.0 py37h2bd1440_2",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "patch 2.7.6 h14c3975_1001",
   "_openmp_mutex 4.5 0_gnu",
   "git 2.26.1 pl526h6bae81b_0",
   "curl 7.69.1 h977548d_0",
   "decorator 4.4.2 py_0",
   "perl 5.26.2 h6eb9509_1006",
   "zstd 1.4.4 h1dc757f_3",
   "importlib_metadata 1.6.0 0",
   "su-exec 0.2 h14c3975_1001",
   "gettext 0.19.8.1 h94c31b8_1002",
   "nbformat 5.0.4 py_0",
   "tk 8.6.10 h151fe60_0",
   "python_abi 3.7 1_cp37m",
   "ca-certificates 2020.4.5.1 hecc5488_0",
   "readline 8.0 hf8c457e_0",
   "python 3.7.6 haf90cd5_5_cpython",
   "_libgcc_mutex 0.1 conda_forge",
   "ipython_genutils 0.2.0 py_1",
   "ripgrep 12.0.1 h6eb9509_1",
   "soupsieve 1.9.4 py37hc8dfbb8_1",
   "libcurl 7.69.1 h76d47d4_0",
   "tini 0.18.0 h14c3975_1001",
   "libffi 3.2.1 hb209c28_1007",
   "libiconv 1.15 h6eb9509_1006",
   "python-libarchive-c 2.9 py37_0",
   "pyopenssl 19.1.0 py_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "idna 2.9 py_1",
   "libssh2 1.8.2 h47f401e_2",
   "libgomp 8.2.0 hdd5993f_5",
   "tqdm 4.45.0 pyh9f0ad1d_0",
   "sqlite 3.30.1 hd61ad8c_0",
   "six 1.14.0 py_1",
   "psutil 5.7.0 py37h2bd1440_1",
   "py-lief 0.9.0 py37hb209c28_1",
   "cryptography 2.8 py37hbd29ff1_2",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "pyrsistent 0.16.0 py37h2bd1440_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "libstdcxx-ng 8.2.0 h822a55f_5",
   "urllib3 1.25.8 py37hc8dfbb8_1",
   "glob2 0.7 py_0",
   "requests 2.23.0 pyh8c360ce_2",
   "zipp 3.1.0 py_0",
   "bzip2 1.0.8 h6eb9509_2",
   "pip 20.0.2 py_2",
   "libgcc-ng 8.2.0 hdd5993f_5",
   "wheel 0.34.2 py_1",
   "libxml2 2.9.10 hc938f6a_0",
   "ncurses 6.1 hf484d3e_1002",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "setuptools 46.1.3 py37hc8dfbb8_0",
   "clyent 1.2.2 py_1",
   "expat 2.2.9 hb209c28_2",
   "cffi 1.14.0 py37hc54e17a_0",
   "ruamel_yaml 0.15.80 py37h2bd1440_1001",
   "icu 64.2 hb209c28_1",
   "zlib 1.2.11 h6eb9509_1006",
   "attrs 19.3.0 py_0",
   "ld_impl_linux-ppc64le 2.34 h0f24833_0",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "importlib-metadata 1.6.0 py37hc8dfbb8_0",
   "python-dateutil 2.8.1 py_0",
   "liblief 0.9.0 h1d591a0_1",
   "xz 5.2.5 h6eb9509_0",
   "filelock 3.0.10 py_0",
   "pycparser 2.20 py_0",
   "yaml 0.2.3 h6eb9509_0",
   "libarchive 3.3.3 he6ac854_1008",
   "pyyaml 5.3.1 py37h2bd1440_0",
   "pkginfo 1.5.0.1 py_0",
   "markupsafe 1.1.1 py37h2bd1440_1",
   "pcre 8.44 hb209c28_0",
   "patchelf 0.10 hb209c28_0",
   "pytz 2019.3 py_0",
   "certifi 2020.4.5.1 py37hc8dfbb8_0",
   "lzo 2.10 h14c3975_1000",
   "beautifulsoup4 4.9.0 py37hc8dfbb8_0",
   "anaconda-client 1.7.2 py_0",
   "pycosat 0.6.3 py37h2bd1440_1004",
   "conda-build 3.19.2 py37hc8dfbb8_0",
   "conda-forge-ci-setup 2.8.3 py37hc8dfbb8_0",
   "click 7.1.1 pyh8c360ce_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Fast implementation of a key-value store. Environments are commonly used as key-value stores, but every time a new key is used, it is added to R's global symbol table, causing a small amount of memory leakage. This can be problematic in cases where many different keys are used. Fastmap avoids this memory leak issue by implementing the map using data structures in C++.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "8",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "8",
  "docker_image": "condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.6",
  "target_platform": "linux-ppc64le"
 },
 "files": [
  "lib/R/library/fastmap/DESCRIPTION",
  "lib/R/library/fastmap/INDEX",
  "lib/R/library/fastmap/LICENSE",
  "lib/R/library/fastmap/Meta/Rd.rds",
  "lib/R/library/fastmap/Meta/features.rds",
  "lib/R/library/fastmap/Meta/hsearch.rds",
  "lib/R/library/fastmap/Meta/links.rds",
  "lib/R/library/fastmap/Meta/nsInfo.rds",
  "lib/R/library/fastmap/Meta/package.rds",
  "lib/R/library/fastmap/NAMESPACE",
  "lib/R/library/fastmap/NEWS.md",
  "lib/R/library/fastmap/R/fastmap",
  "lib/R/library/fastmap/R/fastmap.rdb",
  "lib/R/library/fastmap/R/fastmap.rdx",
  "lib/R/library/fastmap/help/AnIndex",
  "lib/R/library/fastmap/help/aliases.rds",
  "lib/R/library/fastmap/help/fastmap.rdb",
  "lib/R/library/fastmap/help/fastmap.rdx",
  "lib/R/library/fastmap/help/paths.rds",
  "lib/R/library/fastmap/html/00Index.html",
  "lib/R/library/fastmap/html/R.css",
  "lib/R/library/fastmap/libs/fastmap.so"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "r36he54295a_0",
  "build_number": 0,
  "depends": [
   "libgcc-ng >=8.2.0",
   "libstdcxx-ng >=8.2.0",
   "r-base >=3.6,<3.7.0a0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "r-fastmap",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1587129289424,
  "version": "1.0.1"
 },
 "metadata_version": 1,
 "name": "r-fastmap",
 "raw_recipe": "{% set version = '1.0.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-fastmap\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/fastmap_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/fastmap/fastmap_{{ version }}.tar.gz\n  sha256: 4778b05dfebd356f8df980dfeff3b973a72bca14898f870e5c40c1d84db9faec\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{posix}}filesystem        # [win]\n    - {{posix}}make\n    - {{posix}}sed               # [win]\n    - {{posix}}coreutils         # [win]\n    - {{posix}}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{native}}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('fastmap')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('fastmap')\\\"\"  # [win]\n\nabout:\n  home: https://r-lib.github.io/fastmap/, https://github.com/r-lib/fastmap\n  license: MIT\n  summary: Fast implementation of a key-value store. Environments are commonly used as key-value\n    stores, but every time a new key is used, it is added to R's global symbol table,\n    causing a small amount of memory leakage. This can be problematic in cases where\n    many different keys are used. Fastmap avoids this memory leak issue by implementing\n    the map using data structures in C++.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: fastmap\n# Title: Fast Implementation of a Key-Value Store\n# Version: 1.0.1\n# Authors@R: c( person(\"Winston\", \"Chang\", email = \"winston@rstudio.com\", role = c(\"aut\", \"cre\")), person(given = \"RStudio\", role = c(\"cph\", \"fnd\")), person(given = \"Tessil\", role = \"cph\", comment = \"hopscotch_map library\") )\n# Description: Fast implementation of a key-value store. Environments are commonly used as key-value stores, but every time a new key is used, it is added to R's global symbol table, causing a small amount of memory leakage. This can be problematic in cases where many different keys are used. Fastmap avoids this memory leak issue by implementing the map using data structures in C++.\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 6.1.1\n# Suggests: testthat (>= 2.1.1)\n# URL: https://r-lib.github.io/fastmap/, https://github.com/r-lib/fastmap\n# BugReports: https://github.com/r-lib/fastmap/issues\n# NeedsCompilation: yes\n# Packaged: 2019-10-07 23:14:48 UTC; winston\n# Author: Winston Chang [aut, cre], RStudio [cph, fnd], Tessil [cph] (hopscotch_map library)\n# Maintainer: Winston Chang <winston@rstudio.com>\n# Repository: CRAN\n# Date/Publication: 2019-10-08 05:20:02 UTC\n",
 "rendered_recipe": {
  "about": {
   "home": "https://r-lib.github.io/fastmap/, https://github.com/r-lib/fastmap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/home/conda/feedstock_root/build_artifacts/r-fastmap_1587129067919/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Fast implementation of a key-value store. Environments are commonly used as key-value stores, but every time a new key is used, it is added to R's global symbol table, causing a small amount of memory leakage. This can be problematic in cases where many different keys are used. Fastmap avoids this memory leak issue by implementing the map using data structures in C++."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r36he54295a_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-fastmap",
   "version": "1.0.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "binutils_impl_linux-ppc64le 2.34 h0f24833_0",
    "binutils_linux-ppc64le 2.34 heaf459e_18",
    "gcc_impl_linux-ppc64le 8.2.0 h8635c71_5",
    "gcc_linux-ppc64le 8.2.0 h9f3bcec_18",
    "gxx_impl_linux-ppc64le 8.2.0 h822a55f_5",
    "gxx_linux-ppc64le 8.2.0 h9f3bcec_18",
    "ld_impl_linux-ppc64le 2.34 h0f24833_0",
    "libgcc-ng 8.2.0 hdd5993f_5",
    "libgomp 8.2.0 hdd5993f_5",
    "libstdcxx-ng 8.2.0 h822a55f_5",
    "make 4.3 h6eb9509_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_llvm",
    "_r-mutex 1.0.1 anacondar_1",
    "binutils_impl_linux-ppc64le 2.34 h0f24833_0",
    "binutils_linux-ppc64le 2.34 heaf459e_18",
    "bwidget 1.9.14 0",
    "bzip2 1.0.8 h6eb9509_2",
    "ca-certificates 2020.4.5.1 hecc5488_0",
    "cairo 1.16.0 hd0b5358_1003",
    "curl 7.68.0 h60234ee_0",
    "fontconfig 2.13.1 h3f60eee_1001",
    "freetype 2.10.1 h33812df_0",
    "fribidi 1.0.9 h6eb9509_0",
    "gcc_impl_linux-ppc64le 8.2.0 h8635c71_5",
    "gcc_linux-ppc64le 8.2.0 h9f3bcec_18",
    "gettext 0.19.8.1 h94c31b8_1002",
    "gfortran_impl_linux-ppc64le 8.2.0 h822a55f_5",
    "gfortran_linux-ppc64le 8.2.0 h9f3bcec_18",
    "glib 2.64.2 h1be4321_0",
    "graphite2 1.3.13 hb209c28_1001",
    "gsl 2.6 haee0cb1_0",
    "gxx_impl_linux-ppc64le 8.2.0 h822a55f_5",
    "gxx_linux-ppc64le 8.2.0 h9f3bcec_18",
    "harfbuzz 2.4.0 hc683052_3",
    "icu 64.2 hb209c28_1",
    "jpeg 9c h14c3975_1001",
    "krb5 1.16.4 h41979e3_0",
    "ld_impl_linux-ppc64le 2.34 h0f24833_0",
    "libblas 3.8.0 16_openblas",
    "libcblas 3.8.0 16_openblas",
    "libcurl 7.68.0 h8f7db48_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libffi 3.2.1 hb209c28_1007",
    "libgcc-ng 8.2.0 hdd5993f_5",
    "libgfortran-ng 8.2.0 h822a55f_5",
    "libgomp 8.2.0 hdd5993f_5",
    "libiconv 1.15 h6eb9509_1006",
    "liblapack 3.8.0 16_openblas",
    "libopenblas 0.3.9 ha38281c_0",
    "libpng 1.6.37 h151fe60_1",
    "libssh2 1.8.2 h47f401e_2",
    "libstdcxx-ng 8.2.0 h822a55f_5",
    "libtiff 4.1.0 hee46ee4_6",
    "libuuid 2.32.1 h14c3975_1000",
    "libwebp-base 1.1.0 h6eb9509_3",
    "libxcb 1.13 h14c3975_1002",
    "libxml2 2.9.10 hc938f6a_0",
    "llvm-openmp 10.0.0 h1bb5118_0",
    "lz4-c 1.9.2 hb209c28_0",
    "make 4.3 h6eb9509_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1f h6eb9509_0",
    "pango 1.42.4 h8a55e4e_4",
    "pcre 8.44 hb209c28_0",
    "pixman 0.38.0 h6eb9509_1003",
    "pthread-stubs 0.4 h14c3975_1001",
    "python 3.8.2 h54393fb_6_cpython",
    "r-base 3.6.3 h7ccd8aa_1",
    "readline 8.0 hf8c457e_0",
    "sed 4.7 h1bed415_1000",
    "sqlite 3.30.1 hd61ad8c_0",
    "tk 8.6.10 h151fe60_0",
    "tktable 2.10 h6eb9509_3",
    "xorg-kbproto 1.0.7 h14c3975_1002",
    "xorg-libice 1.0.10 h6eb9509_0",
    "xorg-libsm 1.2.3 h83de47b_1000",
    "xorg-libx11 1.6.9 h6eb9509_0",
    "xorg-libxau 1.0.9 h14c3975_0",
    "xorg-libxdmcp 1.1.3 h6eb9509_0",
    "xorg-libxext 1.3.4 h6eb9509_0",
    "xorg-libxrender 0.9.10 h6eb9509_1002",
    "xorg-renderproto 0.11.1 h14c3975_1002",
    "xorg-xextproto 7.3.0 h14c3975_1002",
    "xorg-xproto 7.0.31 h14c3975_1007",
    "xz 5.2.5 h6eb9509_0",
    "zlib 1.2.11 h6eb9509_1006",
    "zstd 1.4.4 h1dc757f_3"
   ],
   "run": [
    "libgcc-ng >=8.2.0",
    "libstdcxx-ng >=8.2.0",
    "r-base >=3.6,<3.7.0a0"
   ]
  },
  "source": {
   "sha256": "4778b05dfebd356f8df980dfeff3b973a72bca14898f870e5c40c1d84db9faec",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/fastmap/fastmap_1.0.1.tar.gz",
    "https://cran.r-project.org/src/contrib/fastmap_1.0.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('fastmap')\""
   ]
  }
 },
 "version": "1.0.1"
}