{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
  "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "xylar",
    "jhkennedy"
   ]
  },
  "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "tini 0.18.0 h14c3975_1001",
   "libssh2 1.10.0 ha56f1ee_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "cffi 1.14.6 py38h3931269_1",
   "xz 5.2.5 h516909a_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_8",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "yaml 0.2.5 h516909a_0",
   "sqlite 3.36.0 h9cd32fc_1",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "ipython_genutils 0.2.0 py_1",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "expat 2.4.1 h9c3ff4c_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "idna 3.1 pyhd3deb0d_0",
   "requests 2.26.0 pyhd8ed1ab_0",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "jupyter_core 4.8.1 py38h578d9bd_0",
   "git 2.33.0 pl5321hc30692c_0",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "traitlets 5.1.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h516909a_1010",
   "ripgrep 13.0.0 habb4d0f_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "libarchive 3.5.2 hccf745f_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "pcre2 10.37 h032f7d1_0",
   "perl 5.32.1 0_h7f98852_perl5",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "lzo 2.10 h516909a_1000",
   "libnghttp2 1.43.0 h812cca2_0",
   "krb5 1.19.2 hcc1bbae_0",
   "icu 68.1 h58526e2_0",
   "tk 8.6.11 h27826a3_1",
   "libgcc-ng 11.2.0 h1d223b6_8",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "libiconv 1.16 h516909a_0",
   "ncurses 6.2 h58526e2_4",
   "bzip2 1.0.8 h7f98852_4",
   "python 3.8.12 hb7a2778_0_cpython",
   "clyent 1.2.2 py_1",
   "six 1.16.0 pyh6c4a22f_0",
   "libcurl 7.79.0 h2574ce0_0",
   "importlib-metadata 4.8.1 py38h578d9bd_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "curl 7.79.0 hea6ffbf_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "libxml2 2.9.12 h72842e0_0",
   "gettext 0.19.8.1 h73d1719_1006",
   "libedit 3.1.20191231 he28a2e2_2",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "setuptools 58.0.4 py38h578d9bd_0",
   "glob2 0.7 py_0",
   "patchelf 0.13 h58526e2_0",
   "libstdcxx-ng 11.2.0 he4da1e4_8",
   "py-lief 0.11.5 py38h709712a_0",
   "soupsieve 2.0.1 py_1",
   "_libgcc_mutex 0.1 conda_forge",
   "libffi 3.4.2 h9c3ff4c_1",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "pyyaml 5.4.1 py38h497a2fe_1",
   "zstd 1.5.0 ha95c52a_0",
   "python_abi 3.8 2_cp38",
   "ca-certificates 2021.5.30 ha878542_0",
   "chardet 4.0.0 py38h578d9bd_1",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "libev 4.33 h516909a_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "patch 2.7.6 h7f98852_1002",
   "su-exec 0.2 h516909a_1002",
   "certifi 2021.5.30 py38h578d9bd_0",
   "openssl 1.1.1l h7f98852_0",
   "pip 21.2.4 pyhd8ed1ab_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "tqdm 4.62.2 pyhd8ed1ab_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "pysocks 1.7.1 py38h578d9bd_3",
   "c-ares 1.17.2 h7f98852_0",
   "conda 4.10.3 py38h578d9bd_2",
   "oniguruma 6.9.7.1 h7f98852_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-ci-setup 3.11.1 py38h904d315_0"
  ],
  "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "hdf5": "1.10.6",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "libnetcdf": "4.8.1",
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/MpasCellCuller.x",
  "bin/MpasMaskCreator.x",
  "bin/MpasMeshConverter.x",
  "bin/add_critical_land_blockages_to_mask.py",
  "bin/add_land_locked_cells_to_mask.py",
  "bin/compute_lon_lat_region_masks",
  "bin/compute_mpas_flood_fill_mask",
  "bin/compute_mpas_region_masks",
  "bin/compute_mpas_transect_masks",
  "bin/compute_projection_region_masks",
  "bin/create_SCRIP_file_from_MPAS_mesh.py",
  "bin/create_landice_grid_from_generic_MPAS_grid.py",
  "bin/define_cullMask.py",
  "bin/inject_bathymetry",
  "bin/inject_preserve_floodplain",
  "bin/interpolate_to_mpasli_grid.py",
  "bin/jigsaw_to_netcdf",
  "bin/mark_domain_boundaries_dirichlet.py",
  "bin/mark_horns_for_culling.py",
  "bin/merge_grids",
  "bin/moc_southern_boundary_extractor.py",
  "bin/mpas_to_triangle",
  "bin/ocean_add_depth",
  "bin/ocean_add_zmid",
  "bin/ocean_write_time_varying_zmid",
  "bin/paraview_vtk_field_extractor.py",
  "bin/planar_hex",
  "bin/scrip_from_mpas",
  "bin/set_lat_lon_fields_in_planar_grid.py",
  "bin/split_grids",
  "bin/translate_planar_grid",
  "bin/triangle_to_netcdf",
  "bin/widen_transect_edge_masks.py",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/INSTALLER",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/METADATA",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/RECORD",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/REQUESTED",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/WHEEL",
  "lib/python3.7/site-packages/mpas_tools-0.11.0.dist-info/direct_url.json",
  "lib/python3.7/site-packages/mpas_tools/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/__main__.py",
  "lib/python3.7/site-packages/mpas_tools/cime/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/cime/constants.py",
  "lib/python3.7/site-packages/mpas_tools/conversion.py",
  "lib/python3.7/site-packages/mpas_tools/io.py",
  "lib/python3.7/site-packages/mpas_tools/logging.py",
  "lib/python3.7/site-packages/mpas_tools/merge_grids.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/conversion.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/build_mesh.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/jigsaw_driver.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/jigsaw_to_netcdf.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/mesh_definition_tools.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/mpas_to_triangle.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/open_msh.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/signed_distance.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/triangle_to_netcdf.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/util.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/interpolation.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/mask.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/build_mesh.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/coastal_tools.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/coastline_alteration.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/depth.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_bathymetry.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_meshDensity.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_preserve_floodplain.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/moc.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/transects.py",
  "lib/python3.7/site-packages/mpas_tools/parallel.py",
  "lib/python3.7/site-packages/mpas_tools/planar_hex.py",
  "lib/python3.7/site-packages/mpas_tools/scrip/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/scrip/from_mpas.py",
  "lib/python3.7/site-packages/mpas_tools/split_grids.py",
  "lib/python3.7/site-packages/mpas_tools/tests/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_cime_constants.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_conversion.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_depth.py",
  "lib/python3.7/site-packages/mpas_tools/transects.py",
  "lib/python3.7/site-packages/mpas_tools/translate.py",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/3Wbgy5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/3wave-yellow-grey-blue.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/4wave-grey-red-green-mgreen.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/5wave-yellow-brown-blue.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-3.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-6.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-orange-div.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-2.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-4.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-6.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-green-blue-gray.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/purple-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/purple-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-3.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-4.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/yellow-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/yellow-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/viz/colormaps.py",
  "lib/python3.7/site-packages/mpas_tools/viz/mesh_to_triangles.py",
  "lib/python3.7/site-packages/mpas_tools/viz/paraview_extractor.py",
  "lib/python3.7/site-packages/mpas_tools/viz/transects.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h90ea7e9_0",
  "build_number": 0,
  "depends": [
   "cartopy",
   "dask",
   "geometric_features >=0.1.12",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "inpoly",
   "jigsaw >=0.9.12",
   "jigsawpy >=0.2.1",
   "libgcc-ng >=9.4.0",
   "libnetcdf >=4.8.1,<4.8.2.0a0",
   "libstdcxx-ng >=9.4.0",
   "matplotlib-base",
   "netcdf4",
   "numpy",
   "progressbar2",
   "pyamg",
   "pyevtk",
   "pyproj",
   "python >=3.7,<3.8.0a0",
   "python-igraph",
   "python_abi 3.7.* *_cp37m",
   "scikit-image",
   "scipy",
   "shapely",
   "xarray"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "mpas_tools",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1632796843771,
  "version": "0.11.0"
 },
 "metadata_version": 1,
 "name": "mpas_tools",
 "raw_recipe": "{% set name = \"mpas_tools\" %}\n{% set version = \"0.11.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MPAS-Dev/MPAS-Tools/archive/{{ version }}.tar.gz\n  sha256: 3e415aa9288a70a91b876ca2dc2cba7a59b3606049657362991259a4919706a9\n\nbuild:\n  number: 0\n  skip: true  # [win or py<37]\n  entry_points:\n    - planar_hex = mpas_tools.planar_hex:main\n    - translate_planar_grid = mpas_tools.translate:main\n    - merge_grids = mpas_tools.merge_grids:main\n    - split_grids = mpas_tools.split_grids:main\n    - inject_bathymetry = mpas_tools.ocean.inject_bathymetry:main\n    - inject_preserve_floodplain = mpas_tools.ocean.inject_preserve_floodplain:main\n    - mpas_to_triangle = mpas_tools.mesh.creation.mpas_to_triangle:main\n    - triangle_to_netcdf = mpas_tools.mesh.creation.triangle_to_netcdf:main\n    - jigsaw_to_netcdf = mpas_tools.mesh.creation.jigsaw_to_netcdf:main\n    - scrip_from_mpas = mpas_tools.scrip.from_mpas:main\n    - ocean_add_depth = mpas_tools.ocean.depth:main_add_depth\n    - ocean_add_zmid = mpas_tools.ocean.depth:main_add_zmid\n    - ocean_write_time_varying_zmid = mpas_tools.ocean.depth:main_write_time_varying_zmid\n    - compute_mpas_region_masks = mpas_tools.mesh.mask:entry_point_compute_mpas_region_masks\n    - compute_mpas_transect_masks = mpas_tools.mesh.mask:entry_point_compute_mpas_transect_masks\n    - compute_mpas_flood_fill_mask = mpas_tools.mesh.mask:entry_point_compute_mpas_flood_fill_mask\n    - compute_lon_lat_region_masks = mpas_tools.mesh.mask:entry_point_compute_lon_lat_region_masks\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - hdf5\n    - hdf5 * nompi_*\n    - libnetcdf\n    - libnetcdf * nompi_*\n    - setuptools\n    - pip\n    - netcdf4\n    - openmp  # [osx]\n  run:\n    - python\n    - cartopy\n    - dask\n    - geometric_features >=0.1.12\n    - hdf5\n    - inpoly\n    - jigsaw >=0.9.12\n    - jigsawpy >=0.2.1\n    - libnetcdf\n    - matplotlib-base\n    - netcdf4\n    - numpy\n    - progressbar2\n    - pyamg\n    - pyevtk\n    - pyproj\n    - python-igraph\n    - scikit-image\n    - scipy\n    - shapely\n    - xarray\n\ntest:\n  requires:\n    - pytest\n    - requests\n    - pip\n  source_files:\n    - mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc\n    - mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - conda_package/mpas_tools/tests/*\n  imports:\n    - mpas_tools\n    - mpas_tools.mesh.conversion\n    - mpas_tools.mesh.creation\n    - mpas_tools.viz\n    - mpas_tools.conversion\n  commands:\n    - pip check\n    - planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c\n    - planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'\n    - MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc\n    - MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'\n    - MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc\n    - python -m pytest conda_package/mpas_tools/tests\n    - mark_horns_for_culling.py --help\n    - set_lat_lon_fields_in_planar_grid.py --help\n    - create_SCRIP_file_from_MPAS_mesh.py --help\n    - create_landice_grid_from_generic_MPAS_grid.py --help\n    - define_cullMask.py --help\n    - interpolate_to_mpasli_grid.py --help\n    - mark_domain_boundaries_dirichlet.py --help\n    - add_land_locked_cells_to_mask.py --help\n    - moc_southern_boundary_extractor.py --help\n    - ocean_add_depth --help\n    - ocean_add_zmid --help\n    - ocean_write_time_varying_zmid --help\n    - widen_transect_edge_masks.py --help\n    - add_critical_land_blockages_to_mask.py --help\n    - paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test\n    - split_grids --help\n    - merge_grids --help\n    - inject_bathymetry mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc\n    - inject_preserve_floodplain --help\n    - mpas_to_triangle --help\n    - triangle_to_netcdf --help\n    - jigsaw_to_netcdf --help\n    - scrip_from_mpas --help\n    - compute_mpas_region_masks --help\n    - compute_mpas_transect_masks --help\n    - compute_mpas_flood_fill_mask --help\n    - compute_lon_lat_region_masks --help\n\nabout:\n  home: https://github.com/MPAS-Dev/MPAS-Tools/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Mesh tools for Model for Prediction Across Scales (MPAS)\n  description: |\n    A set of tools for creating and manipulating meshes for the climate\n    components based on the Model for Prediction Across Scales (MPAS) framework\n  doc_url: https://github.com/MPAS-Dev/MPAS-Tools/README.md\n  dev_url: https://github.com/MPAS-Dev/MPAS-Tools/\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - jhkennedy\n",
 "rendered_recipe": {
  "about": {
   "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
   "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
   "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)"
  },
  "build": {
   "entry_points": [
    "compute_lon_lat_region_masks = mpas_tools.mesh.mask:entry_point_compute_lon_lat_region_masks",
    "compute_mpas_flood_fill_mask = mpas_tools.mesh.mask:entry_point_compute_mpas_flood_fill_mask",
    "compute_mpas_region_masks = mpas_tools.mesh.mask:entry_point_compute_mpas_region_masks",
    "compute_mpas_transect_masks = mpas_tools.mesh.mask:entry_point_compute_mpas_transect_masks",
    "inject_bathymetry = mpas_tools.ocean.inject_bathymetry:main",
    "inject_preserve_floodplain = mpas_tools.ocean.inject_preserve_floodplain:main",
    "jigsaw_to_netcdf = mpas_tools.mesh.creation.jigsaw_to_netcdf:main",
    "merge_grids = mpas_tools.merge_grids:main",
    "mpas_to_triangle = mpas_tools.mesh.creation.mpas_to_triangle:main",
    "ocean_add_depth = mpas_tools.ocean.depth:main_add_depth",
    "ocean_add_zmid = mpas_tools.ocean.depth:main_add_zmid",
    "ocean_write_time_varying_zmid = mpas_tools.ocean.depth:main_write_time_varying_zmid",
    "planar_hex = mpas_tools.planar_hex:main",
    "scrip_from_mpas = mpas_tools.scrip.from_mpas:main",
    "split_grids = mpas_tools.split_grids:main",
    "translate_planar_grid = mpas_tools.translate:main",
    "triangle_to_netcdf = mpas_tools.mesh.creation.triangle_to_netcdf:main"
   ],
   "number": "0",
   "string": "py37h90ea7e9_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jhkennedy",
    "xylar"
   ]
  },
  "package": {
   "name": "mpas_tools",
   "version": "0.11.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_1",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.17.2 h7f98852_0",
    "ca-certificates 2021.5.30 ha878542_0",
    "cmake 3.21.3 h8897547_0",
    "expat 2.4.1 h9c3ff4c_0",
    "gcc_impl_linux-64 9.4.0 h03d3576_8",
    "gcc_linux-64 9.4.0 h391b98a_1",
    "gxx_impl_linux-64 9.4.0 h03d3576_8",
    "gxx_linux-64 9.4.0 h0316aca_1",
    "kernel-headers_linux-64 2.6.32 he073ed8_14",
    "krb5 1.19.2 h48eae69_1",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libcurl 7.79.1 h494985f_1",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 9.4.0 hd854feb_8",
    "libgcc-ng 11.2.0 h1d223b6_8",
    "libgomp 11.2.0 h1d223b6_8",
    "libnghttp2 1.43.0 ha19adfc_1",
    "libsanitizer 9.4.0 h79bfe98_8",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 9.4.0 hd854feb_8",
    "libstdcxx-ng 11.2.0 he4da1e4_8",
    "libuv 1.42.0 h7f98852_0",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.2 h58526e2_4",
    "openssl 3.0.0 h7f98852_0",
    "rhash 1.4.1 h7f98852_0",
    "sysroot_linux-64 2.12 he073ed8_14",
    "tk 8.6.11 h27826a3_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010",
    "zstd 1.5.0 ha95c52a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.17.2 h7f98852_0",
    "ca-certificates 2021.5.30 ha878542_0",
    "cftime 1.5.1 py37hb1e94ed_0",
    "curl 7.79.1 h2574ce0_1",
    "hdf4 4.2.15 h10796ff_3",
    "hdf5 1.10.6 nompi_h6a2412b_1114",
    "jpeg 9d h36c2ea0_0",
    "krb5 1.19.2 hcc1bbae_1",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libblas 3.9.0 11_linux64_openblas",
    "libcblas 3.9.0 11_linux64_openblas",
    "libcurl 7.79.1 h2574ce0_1",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libffi 3.4.2 h9c3ff4c_4",
    "libgcc-ng 11.2.0 h1d223b6_8",
    "libgfortran-ng 11.2.0 h69a702a_8",
    "libgfortran5 11.2.0 h5c6108e_8",
    "libgomp 11.2.0 h1d223b6_8",
    "liblapack 3.9.0 11_linux64_openblas",
    "libnetcdf 4.8.1 nompi_hcd642e3_100",
    "libnghttp2 1.43.0 h812cca2_1",
    "libopenblas 0.3.17 pthreads_h8fe5266_1",
    "libssh2 1.10.0 ha56f1ee_2",
    "libstdcxx-ng 11.2.0 he4da1e4_8",
    "libzip 1.8.0 h4de3113_1",
    "ncurses 6.2 h58526e2_4",
    "netcdf4 1.5.7 nompi_py37h078fd70_101",
    "numpy 1.21.2 py37h31617e3_0",
    "openssl 1.1.1l h7f98852_0",
    "pip 21.2.4 pyhd8ed1ab_0",
    "python 3.7.10 hb7a2778_101_cpython",
    "python_abi 3.7 2_cp37m",
    "readline 8.1 h46c0cb4_0",
    "setuptools 58.0.4 py37h89c1867_2",
    "sqlite 3.36.0 h9cd32fc_2",
    "tk 8.6.11 h27826a3_1",
    "wheel 0.37.0 pyhd8ed1ab_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "run": [
    "cartopy",
    "dask",
    "geometric_features >=0.1.12",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "inpoly",
    "jigsaw >=0.9.12",
    "jigsawpy >=0.2.1",
    "libgcc-ng >=9.4.0",
    "libnetcdf >=4.8.1,<4.8.2.0a0",
    "libstdcxx-ng >=9.4.0",
    "matplotlib-base",
    "netcdf4",
    "numpy",
    "progressbar2",
    "pyamg",
    "pyevtk",
    "pyproj",
    "python >=3.7,<3.8.0a0",
    "python-igraph",
    "python_abi 3.7.* *_cp37m",
    "scikit-image",
    "scipy",
    "shapely",
    "xarray"
   ]
  },
  "source": {
   "sha256": "3e415aa9288a70a91b876ca2dc2cba7a59b3606049657362991259a4919706a9",
   "url": "https://github.com/MPAS-Dev/MPAS-Tools/archive/0.11.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c",
    "planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'",
    "MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc",
    "MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'",
    "MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc",
    "python -m pytest conda_package/mpas_tools/tests",
    "mark_horns_for_culling.py --help",
    "set_lat_lon_fields_in_planar_grid.py --help",
    "create_SCRIP_file_from_MPAS_mesh.py --help",
    "create_landice_grid_from_generic_MPAS_grid.py --help",
    "define_cullMask.py --help",
    "interpolate_to_mpasli_grid.py --help",
    "mark_domain_boundaries_dirichlet.py --help",
    "add_land_locked_cells_to_mask.py --help",
    "moc_southern_boundary_extractor.py --help",
    "ocean_add_depth --help",
    "ocean_add_zmid --help",
    "ocean_write_time_varying_zmid --help",
    "widen_transect_edge_masks.py --help",
    "add_critical_land_blockages_to_mask.py --help",
    "paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test",
    "split_grids --help",
    "merge_grids --help",
    "inject_bathymetry mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc",
    "inject_preserve_floodplain --help",
    "mpas_to_triangle --help",
    "triangle_to_netcdf --help",
    "jigsaw_to_netcdf --help",
    "scrip_from_mpas --help",
    "compute_mpas_region_masks --help",
    "compute_mpas_transect_masks --help",
    "compute_mpas_flood_fill_mask --help",
    "compute_lon_lat_region_masks --help"
   ],
   "imports": [
    "mpas_tools",
    "mpas_tools.conversion",
    "mpas_tools.mesh.conversion",
    "mpas_tools.mesh.creation",
    "mpas_tools.viz"
   ],
   "requires": [
    "pip",
    "pytest",
    "requests"
   ],
   "source_files": [
    "conda_package/mpas_tools/tests/*",
    "mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc"
   ]
  }
 },
 "version": "0.11.0"
}