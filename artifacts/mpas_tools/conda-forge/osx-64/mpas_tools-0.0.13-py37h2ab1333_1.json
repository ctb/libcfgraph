{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.5",
  "conda_private": false,
  "conda_version": "4.9.0",
  "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
  "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "xylar",
    "jhkennedy"
   ]
  },
  "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "certifi 2020.6.20 py38h5347e94_2",
   "conda 4.9.0 py38h5347e94_1",
   "ruamel_yaml 0.15.80 py38h94c058a_1003",
   "urllib3 1.25.11 py_0",
   "conda-env 2.6.0 1",
   "markupsafe 1.1.1 py38h94c058a_2",
   "requests 2.24.0 pyh9f0ad1d_0",
   "pip 20.2.4 py_0",
   "perl 5.26.2 hbcb3906_1008",
   "tk 8.6.10 hb0a8c7a_1",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38heedec30_2",
   "jq 1.6 h1de35cc_1000",
   "nbformat 5.0.8 py_0",
   "anaconda-client 1.7.2 py_0",
   "libcurl 7.71.1 h9bf37e3_8",
   "jsonschema 3.2.0 py_2",
   "sqlite 3.33.0 h960bd1c_1",
   "libffi 3.2.1 hb1e8313_1007",
   "pycparser 2.20 pyh9f0ad1d_2",
   "soupsieve 2.0.1 py_1",
   "libxml2 2.9.10 h2c6e4a5_2",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "ncurses 6.2 hb1e8313_2",
   "shyaml 0.6.1 py_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "openssl 1.1.1h haf1e3a3_0",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "expat 2.2.9 hb1e8313_2",
   "lz4-c 1.9.2 hb1e8313_3",
   "xz 5.2.5 haf1e3a3_1",
   "tqdm 4.51.0 pyh9f0ad1d_0",
   "liblief 0.10.1 hb1e8313_2",
   "brotlipy 0.7.0 py38h94c058a_1001",
   "conda-forge-ci-setup 3.4.1 py38h509f808_1",
   "zlib 1.2.11 h7795811_1010",
   "pcre 8.44 hb1e8313_0",
   "python 3.8.6 hcfdab8c_0_cpython",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "importlib-metadata 2.0.0 py_1",
   "curl 7.71.1 hcb81553_8",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-build 3.20.5 py38h5347e94_0",
   "zstd 1.4.5 h289c70a_2",
   "pyrsistent 0.17.3 py38h4d0b108_1",
   "cffi 1.14.3 py38h9edaa1b_1",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "readline 8.0 h0678c8f_2",
   "pyopenssl 19.1.0 py_1",
   "icu 67.1 hb1e8313_0",
   "ripgrep 12.1.1 haf1e3a3_1",
   "c-ares 1.16.1 haf1e3a3_3",
   "pycosat 0.6.3 py38h94c058a_1005",
   "yaml 0.2.5 haf1e3a3_0",
   "bzip2 1.0.8 haf1e3a3_3",
   "krb5 1.17.1 h75d18d8_3",
   "cryptography 3.2 py38hf6767f5_0",
   "pytz 2020.4 pyhd8ed1ab_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "gettext 0.19.8.1 haf92f58_1004",
   "libarchive 3.4.3 hf12134e_0",
   "conda-package-handling 1.7.2 py38h94c058a_0",
   "pysocks 1.7.1 py38h5347e94_2",
   "zipp 3.4.0 py_0",
   "chardet 3.0.4 py38h5347e94_1008",
   "psutil 5.7.3 py38h94c058a_0",
   "importlib_metadata 2.0.0 1",
   "pyyaml 5.3.1 py38h94c058a_1",
   "python-libarchive-c 2.9 py38h5347e94_2",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "libcxx 11.0.0 h439d374_0",
   "lzo 2.10 haf1e3a3_1000",
   "jupyter_core 4.6.3 py38h32f6830_2",
   "oniguruma 6.9.3 h01d97ff_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "git 2.29.2 pl5262h422953c_0",
   "setuptools 49.6.0 py38h5347e94_2"
  ],
  "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "10",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "hdf5": "1.10.6",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libnetcdf": "4.7.4",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/MpasCellCuller.x",
  "bin/MpasMaskCreator.x",
  "bin/MpasMeshConverter.x",
  "bin/add_critical_land_blockages_to_mask.py",
  "bin/add_land_locked_cells_to_mask.py",
  "bin/create_SCRIP_file_from_MPAS_mesh.py",
  "bin/create_landice_grid_from_generic_MPAS_grid.py",
  "bin/define_cullMask.py",
  "bin/inject_bathymetry",
  "bin/inject_preserve_floodplain",
  "bin/interpolate_to_mpasli_grid.py",
  "bin/jigsaw_to_netcdf",
  "bin/mark_domain_boundaries_dirichlet.py",
  "bin/mark_horns_for_culling.py",
  "bin/merge_grids",
  "bin/moc_southern_boundary_extractor.py",
  "bin/mpas_to_triangle",
  "bin/paraview_vtk_field_extractor.py",
  "bin/planar_hex",
  "bin/set_lat_lon_fields_in_planar_grid.py",
  "bin/split_grids",
  "bin/translate_planar_grid",
  "bin/triangle_to_netcdf",
  "bin/widen_transect_edge_masks.py",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/INSTALLER",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/METADATA",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/RECORD",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/REQUESTED",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/WHEEL",
  "lib/python3.7/site-packages/mpas_tools-0.0.13.dist-info/direct_url.json",
  "lib/python3.7/site-packages/mpas_tools/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/__main__.py",
  "lib/python3.7/site-packages/mpas_tools/cime/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/cime/constants.py",
  "lib/python3.7/site-packages/mpas_tools/conversion.py",
  "lib/python3.7/site-packages/mpas_tools/io.py",
  "lib/python3.7/site-packages/mpas_tools/merge_grids.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/conversion.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/build_mesh.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/jigsaw_driver.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/jigsaw_to_netcdf.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/mesh_definition_tools.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/mpas_to_triangle.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/open_msh.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/signed_distance.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/triangle_to_netcdf.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/creation/util.py",
  "lib/python3.7/site-packages/mpas_tools/mesh/interpolation.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/build_mesh.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/coastal_tools.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/coastline_alteration.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_bathymetry.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_meshDensity.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/inject_preserve_floodplain.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/moc.py",
  "lib/python3.7/site-packages/mpas_tools/planar_hex.py",
  "lib/python3.7/site-packages/mpas_tools/scrip/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/scrip/from_mpas.py",
  "lib/python3.7/site-packages/mpas_tools/split_grids.py",
  "lib/python3.7/site-packages/mpas_tools/tests/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/tests/define_base_mesh.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_cime_constants.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_conversion.py",
  "lib/python3.7/site-packages/mpas_tools/translate.py",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/3Wbgy5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/3wave-yellow-grey-blue.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/4wave-grey-red-green-mgreen.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/5wave-yellow-brown-blue.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-3.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-6.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/blue-orange-div.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-2.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/brown-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-4.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/green-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-5.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-6.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/orange-green-blue-gray.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/purple-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/purple-8.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-3.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/red-4.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/yellow-1.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/SciVisColorColormaps/yellow-7.xml",
  "lib/python3.7/site-packages/mpas_tools/viz/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/viz/colormaps.py",
  "lib/python3.7/site-packages/mpas_tools/viz/mesh_to_triangles.py",
  "lib/python3.7/site-packages/mpas_tools/viz/paraview_extractor.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h2ab1333_1",
  "build_number": 1,
  "depends": [
   "affine",
   "cartopy",
   "dask",
   "future",
   "geometric_features",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "jigsaw >=0.9.12",
   "jigsawpy >=0.2.1",
   "libcxx >=10.0.1",
   "libnetcdf >=4.7.4,<4.7.5.0a0",
   "netcdf4",
   "numpy",
   "pyamg",
   "pyevtk",
   "pyflann",
   "pyproj",
   "python >=3.7,<3.8.0a0",
   "python_abi 3.7.* *_cp37m",
   "rasterio",
   "scikit-image",
   "scipy",
   "xarray"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "mpas_tools",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1604352895736,
  "version": "0.0.13"
 },
 "metadata_version": 1,
 "name": "mpas_tools",
 "raw_recipe": "{% set name = \"mpas_tools\" %}\n{% set version = \"0.0.13\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MPAS-Dev/MPAS-Tools/archive/{{ version }}.tar.gz\n  sha256: d805aaae67121f4e000d6b0581ad5cbb557a3c9e93e6de89b8675aeda79bd5a3\n\nbuild:\n  number: 1\n  skip: true  # [win]\n  entry_points:\n    - planar_hex = mpas_tools.planar_hex:main\n    - translate_planar_grid = mpas_tools.translate:main\n    - merge_grids = mpas_tools.merge_grids:main\n    - split_grids = mpas_tools.split_grids:main\n    - inject_bathymetry = mpas_tools.ocean.inject_bathymetry:main\n    - inject_preserve_floodplain = mpas_tools.ocean.inject_preserve_floodplain:main\n    - mpas_to_triangle = mpas_tools.mesh.creation.mpas_to_triangle:main\n    - triangle_to_netcdf = mpas_tools.mesh.creation.triangle_to_netcdf:main\n    - jigsaw_to_netcdf = mpas_tools.mesh.creation.jigsaw_to_netcdf:main\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - hdf5\n    - hdf5 * nompi_*\n    - libnetcdf\n    - libnetcdf * nompi_*\n    - setuptools\n    - pip\n    - netcdf4\n    - openmp  # [osx]\n  run:\n    - python\n    - netcdf4\n    - hdf5\n    - libnetcdf\n    - numpy\n    - scipy\n    - xarray\n    - dask\n    - geometric_features\n    - pyevtk\n    - future\n    - jigsaw >=0.9.12\n    - jigsawpy >=0.2.1\n    - pyflann\n    - scikit-image\n    - cartopy\n    - pyamg\n    - rasterio\n    - affine\n    - pyproj\n\ntest:\n  requires:\n    - pytest\n    - requests\n  source_files:\n    - mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc\n    - mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - conda_package/mpas_tools/tests/*\n  imports:\n    - mpas_tools\n    - mpas_tools.mesh.conversion\n    - mpas_tools.mesh.creation\n    - mpas_tools.viz\n    - mpas_tools.conversion\n  commands:\n    - planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c\n    - planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'\n    - MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc\n    - MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'\n    - MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc\n    - python -m pytest conda_package/mpas_tools/tests\n    - mark_horns_for_culling.py --help\n    - set_lat_lon_fields_in_planar_grid.py --help\n    - create_SCRIP_file_from_MPAS_mesh.py --help\n    - create_landice_grid_from_generic_MPAS_grid.py --help\n    - define_cullMask.py --help\n    - interpolate_to_mpasli_grid.py --help\n    - mark_domain_boundaries_dirichlet.py --help\n    - add_land_locked_cells_to_mask.py --help\n    - moc_southern_boundary_extractor.py --help\n    - widen_transect_edge_masks.py --help\n    - add_critical_land_blockages_to_mask.py --help\n    - paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test\n    - split_grids --help\n    - merge_grids --help\n    - inject_bathymetry mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc\n    - inject_preserve_floodplain --help\n    - mpas_to_triangle --help\n    - triangle_to_netcdf --help\n    - jigsaw_to_netcdf --help\n\nabout:\n  home: https://github.com/MPAS-Dev/MPAS-Tools/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Mesh tools for Model for Prediction Across Scales (MPAS)\n  description: |\n    A set of tools for creating and manipulating meshes for the climate\n    components based on the Model for Prediction Across Scales (MPAS) framework\n  doc_url: https://github.com/MPAS-Dev/MPAS-Tools/README.md\n  dev_url: https://github.com/MPAS-Dev/MPAS-Tools/\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - jhkennedy\n",
 "rendered_recipe": {
  "about": {
   "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
   "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
   "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)"
  },
  "build": {
   "entry_points": [
    "inject_bathymetry = mpas_tools.ocean.inject_bathymetry:main",
    "inject_preserve_floodplain = mpas_tools.ocean.inject_preserve_floodplain:main",
    "jigsaw_to_netcdf = mpas_tools.mesh.creation.jigsaw_to_netcdf:main",
    "merge_grids = mpas_tools.merge_grids:main",
    "mpas_to_triangle = mpas_tools.mesh.creation.mpas_to_triangle:main",
    "planar_hex = mpas_tools.planar_hex:main",
    "split_grids = mpas_tools.split_grids:main",
    "translate_planar_grid = mpas_tools.translate:main",
    "triangle_to_netcdf = mpas_tools.mesh.creation.triangle_to_netcdf:main"
   ],
   "number": "1",
   "string": "py37h2ab1333_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jhkennedy",
    "xylar"
   ]
  },
  "package": {
   "name": "mpas_tools",
   "version": "0.0.13"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 haf1e3a3_3",
    "c-ares 1.16.1 haf1e3a3_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "cctools_osx-64 949.0.1 h8e49ea9_16",
    "clang 10.0.1 default_hf57f61e_1",
    "clang_osx-64 10.0.1 h05bbb7f_10",
    "clangxx 10.0.1 default_hf57f61e_1",
    "clangxx_osx-64 10.0.1 h05bbb7f_10",
    "cmake 3.18.4 hfc1b5b8_0",
    "compiler-rt 10.0.1 he6db49b_0",
    "compiler-rt_osx-64 10.0.1 h033240e_0",
    "expat 2.2.9 hb1e8313_2",
    "krb5 1.17.1 h75d18d8_3",
    "ld64_osx-64 530 h3c32e8a_7",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp10 10.0.1 default_hf57f61e_1",
    "libcurl 7.71.1 h9bf37e3_8",
    "libcxx 11.0.0 h439d374_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm10 10.0.1 h009f743_3",
    "libllvm11 11.0.0 hf85e3d2_0",
    "libnghttp2 1.41.0 h7580e61_2",
    "libssh2 1.9.0 h8a08a2b_5",
    "libuv 1.40.0 h22f3db7_0",
    "llvm-tools 10.0.1 h1341992_3",
    "ncurses 6.2 hb1e8313_2",
    "openssl 1.1.1h haf1e3a3_0",
    "rhash 1.3.6 haf1e3a3_1001",
    "tapi 1000.10.8 h879752b_4",
    "tk 8.6.10 hb0a8c7a_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010"
   ],
   "host": [
    "bzip2 1.0.8 haf1e3a3_3",
    "c-ares 1.16.1 haf1e3a3_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py37h2987424_2",
    "cftime 1.2.1 py37h57c32b8_1",
    "curl 7.71.1 hcb81553_8",
    "hdf4 4.2.13 h84186c3_1003",
    "hdf5 1.10.6 nompi_hc457bb4_1110",
    "jpeg 9d hbcb3906_0",
    "krb5 1.17.1 h75d18d8_3",
    "libblas 3.8.0 14_openblas",
    "libcblas 3.8.0 14_openblas",
    "libcurl 7.71.1 h9bf37e3_8",
    "libcxx 11.0.0 h439d374_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.2.1 hb1e8313_1007",
    "libgfortran 4.0.0 h50e675f_13",
    "libgfortran4 7.5.0 h50e675f_13",
    "liblapack 3.8.0 14_openblas",
    "libnetcdf 4.7.4 nompi_h4844aed_106",
    "libnghttp2 1.41.0 h7580e61_2",
    "libopenblas 0.3.7 h3d69b6c_4",
    "libssh2 1.9.0 h8a08a2b_5",
    "llvm-openmp 8.0.1 h770b8ee_0",
    "ncurses 6.2 hb1e8313_2",
    "netcdf4 1.5.4 nompi_py37h08081e3_103",
    "numpy 1.19.2 py37h91c9966_1",
    "openmp 8.0.1 0",
    "openssl 1.1.1h haf1e3a3_0",
    "pip 20.2.4 py_0",
    "python 3.7.8 hc9dea61_1_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 h0678c8f_2",
    "setuptools 49.6.0 py37h2987424_2",
    "sqlite 3.33.0 h960bd1c_1",
    "tk 8.6.10 hb0a8c7a_1",
    "wheel 0.35.1 pyh9f0ad1d_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010"
   ],
   "run": [
    "affine",
    "cartopy",
    "dask",
    "future",
    "geometric_features",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "jigsaw >=0.9.12",
    "jigsawpy >=0.2.1",
    "libcxx >=10.0.1",
    "libnetcdf >=4.7.4,<4.7.5.0a0",
    "netcdf4",
    "numpy",
    "pyamg",
    "pyevtk",
    "pyflann",
    "pyproj",
    "python >=3.7,<3.8.0a0",
    "python_abi 3.7.* *_cp37m",
    "rasterio",
    "scikit-image",
    "scipy",
    "xarray"
   ]
  },
  "source": {
   "sha256": "d805aaae67121f4e000d6b0581ad5cbb557a3c9e93e6de89b8675aeda79bd5a3",
   "url": "https://github.com/MPAS-Dev/MPAS-Tools/archive/0.0.13.tar.gz"
  },
  "test": {
   "commands": [
    "planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c",
    "planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'",
    "MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc",
    "MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'",
    "MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc",
    "python -m pytest conda_package/mpas_tools/tests",
    "mark_horns_for_culling.py --help",
    "set_lat_lon_fields_in_planar_grid.py --help",
    "create_SCRIP_file_from_MPAS_mesh.py --help",
    "create_landice_grid_from_generic_MPAS_grid.py --help",
    "define_cullMask.py --help",
    "interpolate_to_mpasli_grid.py --help",
    "mark_domain_boundaries_dirichlet.py --help",
    "add_land_locked_cells_to_mask.py --help",
    "moc_southern_boundary_extractor.py --help",
    "widen_transect_edge_masks.py --help",
    "add_critical_land_blockages_to_mask.py --help",
    "paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test",
    "split_grids --help",
    "merge_grids --help",
    "inject_bathymetry mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc",
    "inject_preserve_floodplain --help",
    "mpas_to_triangle --help",
    "triangle_to_netcdf --help",
    "jigsaw_to_netcdf --help"
   ],
   "imports": [
    "mpas_tools",
    "mpas_tools.conversion",
    "mpas_tools.mesh.conversion",
    "mpas_tools.mesh.creation",
    "mpas_tools.viz"
   ],
   "requires": [
    "pytest",
    "requests"
   ],
   "source_files": [
    "conda_package/mpas_tools/tests/*",
    "mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc"
   ]
  }
 },
 "version": "0.0.13"
}