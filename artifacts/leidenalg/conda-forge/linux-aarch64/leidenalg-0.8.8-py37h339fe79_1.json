{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.6",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libiconv 1.16 h516909a_0",
   "tzdata 2021e he74cb21_0",
   "git 2.33.1 pl5321hc30692c_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "yaml 0.2.5 h516909a_0",
   "ruamel.yaml 0.17.17 py38h497a2fe_0",
   "libxml2 2.9.12 h885dcf4_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "curl 7.79.1 h2574ce0_1",
   "sqlite 3.36.0 h9cd32fc_2",
   "readline 8.1 h46c0cb4_0",
   "pyyaml 6.0 py38h497a2fe_3",
   "conda-package-handling 1.7.3 py38h497a2fe_1",
   "prompt-toolkit 3.0.22 pyha770c72_0",
   "future 0.18.2 py38h578d9bd_4",
   "xz 5.2.5 h516909a_1",
   "certifi 2021.10.8 py38h578d9bd_1",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "libgcc-ng 11.2.0 h1d223b6_11",
   "rich 10.12.0 py38h578d9bd_0",
   "tini 0.18.0 h14c3975_1001",
   "c-ares 1.18.1 h7f98852_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.2 py38h497a2fe_2",
   "ruamel_yaml 0.15.80 py38h497a2fe_1006",
   "pycparser 2.20 pyh9f0ad1d_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "perl 5.32.1 1_h7f98852_perl5",
   "libssh2 1.10.0 ha56f1ee_2",
   "jsonschema 4.2.1 pyhd8ed1ab_0",
   "icu 69.1 h9c3ff4c_0",
   "pysocks 1.7.1 py38h578d9bd_4",
   "idna 3.1 pyhd3deb0d_0",
   "mamba 0.17.0 py38h2aa5da1_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "jupyter_core 4.9.1 py38h578d9bd_0",
   "expat 2.4.1 h9c3ff4c_0",
   "zstd 1.5.0 ha95c52a_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "libnsl 2.0.0 h7f98852_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "pygments 2.10.0 pyhd8ed1ab_0",
   "chardet 4.0.0 py38h578d9bd_2",
   "_openmp_mutex 4.5 1_gnu",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "krb5 1.19.2 hcc1bbae_3",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "requests 2.26.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "dataclasses 0.8 pyhc8e2a94_3",
   "python 3.8.12 hb7a2778_2_cpython",
   "tk 8.6.11 h27826a3_1",
   "filelock 3.3.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 habb4d0f_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "libarchive 3.5.2 hccf745f_1",
   "python_abi 3.8 2_cp38",
   "soupsieve 2.3 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py38h497a2fe_1",
   "pcre2 10.37 h032f7d1_0",
   "boa 0.7.1 pyha770c72_0",
   "libnghttp2 1.43.0 h812cca2_1",
   "openssl 1.1.1l h7f98852_0",
   "libcurl 7.79.1 h2574ce0_1",
   "psutil 5.8.0 py38h497a2fe_2",
   "pip 21.3.1 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "libffi 3.4.2 h9c3ff4c_4",
   "brotlipy 0.7.0 py38h497a2fe_1003",
   "backports 1.0 py_2",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "cffi 1.15.0 py38h3931269_0",
   "ca-certificates 2021.10.8 ha878542_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "libsolv 0.7.19 h780b84a_5",
   "typing_extensions 3.10.0.2 pyha770c72_0",
   "cryptography 35.0.0 py38h3e25421_2",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "watchgod 0.7 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_11",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "zlib 1.2.11 h36c2ea0_1013",
   "ipython_genutils 0.2.0 py_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "pycosat 0.6.3 py38h497a2fe_1009",
   "patchelf 0.13 h58526e2_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "setuptools 58.5.3 py38h578d9bd_0",
   "jinja2 3.0.2 pyhd8ed1ab_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "ncurses 6.2 h58526e2_4",
   "reproc 14.2.3 h7f98852_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "py-lief 0.11.5 py38h709712a_1",
   "liblief 0.11.5 h9c3ff4c_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "libstdcxx-ng 11.2.0 he4da1e4_11",
   "pyrsistent 0.18.0 py38h497a2fe_0",
   "prompt_toolkit 3.0.22 hd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "lzo 2.10 h516909a_1000",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "six 1.16.0 pyh6c4a22f_0",
   "su-exec 0.2 h516909a_1002",
   "patch 2.7.6 h7f98852_1002",
   "commonmark 0.9.1 py_0",
   "importlib-metadata 4.8.1 py38h578d9bd_1",
   "conda-forge-ci-setup 3.17.1 py38hcd7a344_1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "jq 1.6 h36c2ea0_1000",
   "conda 4.11.0 py38h578d9bd_0",
   "click 8.0.3 py38h578d9bd_1",
   "conda-env 2.6.0 1",
   "conda-build 3.21.6 py38h578d9bd_3"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/python3.7/site-packages/leidenalg-0.8.8-py3.7.egg-info/PKG-INFO",
  "lib/python3.7/site-packages/leidenalg/Optimiser.py",
  "lib/python3.7/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.7/site-packages/leidenalg/__init__.py",
  "lib/python3.7/site-packages/leidenalg/_c_leiden.cpython-37m-aarch64-linux-gnu.so",
  "lib/python3.7/site-packages/leidenalg/functions.py",
  "lib/python3.7/site-packages/leidenalg/version.py"
 ],
 "index": {
  "arch": "aarch64",
  "build": "py37h339fe79_1",
  "build_number": 1,
  "depends": [
   "igraph >=0.9.5,<0.10.0a0",
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0",
   "pip",
   "python >=3.7,<3.8.0a0",
   "python >=3.7,<3.8.0a0 *_cpython",
   "python-igraph",
   "python_abi 3.7.* *_cp37m"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1638475617654,
  "version": "0.8.8"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.8.8\" %}\n{% set sha256 = \"12750f66d1f0c84ed4484fa895a9d5a163e2f4b611edb12ad09cc66120654df3\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [win and vc<14]\n\n  run_exports:\n    - {{ pin_subpackage(\"leidenalg\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - vs2017_{{ target_platform }}  # [win]\n  host:\n    - igraph\n    - python\n    - setuptools\n    - setuptools_scm\n    - pip\n  run:\n    - igraph\n    - python-igraph\n    - python\n    - pip\n\ntest:\n  requires:\n    - ddt\n  source_files:\n    - tests\n  imports:\n    - leidenalg\n  commands:\n    - python -m unittest\n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "1",
   "run_exports": [
    "leidenalg >=0.8.8,<0.9.0a0"
   ],
   "string": "py37h339fe79_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.8.8"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_impl_linux-aarch64 2.36.1 he24a65f_2",
    "binutils_linux-aarch64 2.36 h38357a0_1",
    "ca-certificates 2021.10.8 ha878542_0",
    "cross-python_linux-aarch64 3.7 21_cpython",
    "crossenv 1.0 pyhd8ed1ab_6",
    "gcc_impl_linux-64 9.4.0 h03d3576_11",
    "gcc_impl_linux-aarch64 9.4.0 h215248c_11",
    "gcc_linux-aarch64 9.4.0 hdcba1cf_1",
    "gxx_impl_linux-64 9.4.0 h03d3576_11",
    "gxx_impl_linux-aarch64 9.4.0 h215248c_11",
    "gxx_linux-aarch64 9.4.0 hb5766e2_1",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "ld_impl_linux-aarch64 2.36.1 h4e2ea54_2",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-devel_linux-64 9.4.0 hd854feb_11",
    "libgcc-devel_linux-aarch64 9.4.0 h8d81b81_11",
    "libgcc-ng 11.2.0 h1d223b6_11",
    "libgomp 11.2.0 h1d223b6_11",
    "libiconv 1.16 h516909a_0",
    "libnsl 2.0.0 h7f98852_0",
    "libsanitizer 9.4.0 h79bfe98_11",
    "libstdcxx-devel_linux-64 9.4.0 hd854feb_11",
    "libstdcxx-devel_linux-aarch64 9.4.0 h8d81b81_11",
    "libstdcxx-ng 11.2.0 he4da1e4_11",
    "libzlib 1.2.11 h36c2ea0_1013",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.2 h58526e2_4",
    "openssl 3.0.0 h7f98852_2",
    "popt 1.16 h0b475e3_2002",
    "python 3.7.12 hf930737_100_cpython",
    "readline 8.1 h46c0cb4_0",
    "rsync 3.2.3 ha014df6_3",
    "sed 4.8 he412f7d_0",
    "sqlite 3.37.0 h9cd32fc_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-aarch64 2.17 h43d7e78_13",
    "tk 8.6.11 h27826a3_1",
    "xxhash 0.8.0 h7f98852_3",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013",
    "zstd 1.5.0 ha95c52a_0"
   ],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "arpack 3.7.0 hf862f49_2",
    "ca-certificates 2021.10.8 h4fd8a4c_0",
    "glpk 4.65 h719063d_1004",
    "gmp 6.2.1 h7fd3ca4_0",
    "icu 69.1 h3621d8e_0",
    "igraph 0.9.5 hf1a871e_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libblas 3.9.0 12_linuxaarch64_openblas",
    "libcblas 3.9.0 12_linuxaarch64_openblas",
    "libffi 3.4.2 h3557bc0_5",
    "libgcc-ng 11.2.0 hf1cc4e7_11",
    "libgfortran-ng 11.2.0 he9431aa_11",
    "libgfortran5 11.2.0 h440fb59_11",
    "libgomp 11.2.0 hf1cc4e7_11",
    "libiconv 1.16 h6dd45c4_0",
    "liblapack 3.9.0 12_linuxaarch64_openblas",
    "libnsl 2.0.0 hf897c2e_0",
    "libopenblas 0.3.18 pthreads_h775ce2d_0",
    "libstdcxx-ng 11.2.0 h0d0a5bb_11",
    "libxml2 2.9.12 h1e2ce75_1",
    "libzlib 1.2.11 hb9de7d4_1013",
    "metis 5.1.0 h7fd3ca4_1006",
    "mpfr 4.1.0 h719063d_1",
    "ncurses 6.2 h7fd3ca4_4",
    "openssl 3.0.0 hf897c2e_1",
    "packaging 21.3 pyhd8ed1ab_0",
    "pip 21.3.1 pyhd8ed1ab_0",
    "pyparsing 3.0.6 pyhd8ed1ab_0",
    "python 3.7.12 h47f6e27_100_cpython",
    "python_abi 3.7 2_cp37m",
    "readline 8.1 h1a49cc3_0",
    "setuptools 59.4.0 py37hd9ded2f_0",
    "setuptools-scm 6.3.2 pyhd8ed1ab_0",
    "setuptools_scm 6.3.2 hd8ed1ab_0",
    "sqlite 3.37.0 hc164836_0",
    "suitesparse 5.10.1 h1404dd6_1",
    "tbb 2021.4.0 hd62202e_1",
    "tk 8.6.11 hd8af866_1",
    "tomli 1.2.2 pyhd8ed1ab_0",
    "wheel 0.37.0 pyhd8ed1ab_1",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 hb9de7d4_1013"
   ],
   "run": [
    "igraph >=0.9.5,<0.10.0a0",
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0",
    "pip",
    "python >=3.7,<3.8.0a0",
    "python >=3.7,<3.8.0a0 *_cpython",
    "python-igraph",
    "python_abi 3.7.* *_cp37m"
   ]
  },
  "source": {
   "fn": "leidenalg-0.8.8.tar.gz",
   "sha256": "12750f66d1f0c84ed4484fa895a9d5a163e2f4b611edb12ad09cc66120654df3",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.8.8.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest"
   ],
   "imports": [
    "leidenalg"
   ],
   "requires": [
    "ddt"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "0.8.8"
}