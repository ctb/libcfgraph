{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libssh2 1.10.0 ha5a9321_2",
   "setuptools 58.2.0 py38hf8b3453_0",
   "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
   "git 2.33.0 pl5321h29e2a4d_2",
   "krb5 1.19.2 haf43566_2",
   "zlib 1.2.11 h339bb43_1013",
   "cffi 1.14.6 py38hae6c81b_1",
   "chardet 4.0.0 py38hf8b3453_1",
   "conda-package-handling 1.7.3 py38h98b8a6f_0",
   "boa 0.7.0 pyha770c72_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "c-ares 1.17.2 h4e0d66e_0",
   "libsolv 0.7.19 h690f14c_5",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "patchelf 0.13 hea85c5d_0",
   "libnghttp2 1.43.0 h42039ad_1",
   "filelock 3.3.0 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "gettext 0.19.8.1 h6603d1e_1008",
   "tini 0.18.0 h14c3975_1001",
   "curl 7.79.1 he415e40_1",
   "cryptography 3.4.8 py38h257c4d3_0",
   "pycosat 0.6.3 py38h98b8a6f_1006",
   "py-lief 0.11.5 py38hfdc2fcd_0",
   "pyrsistent 0.17.3 py38h98b8a6f_2",
   "conda-build 3.21.4 py38hf8b3453_0",
   "jsonschema 4.1.0 pyhd8ed1ab_0",
   "libcurl 7.79.1 he415e40_1",
   "reproc-cpp 14.2.3 h3b9df90_0",
   "psutil 5.8.0 py38h98b8a6f_1",
   "jupyter_core 4.8.1 py38hf8b3453_0",
   "clyent 1.2.2 py_1",
   "icu 68.1 hea85c5d_0",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "liblief 0.11.5 h3b9df90_0",
   "reproc 14.2.3 h4e0d66e_0",
   "traitlets 5.1.0 pyhd8ed1ab_0",
   "future 0.18.2 py38hf8b3453_3",
   "backports 1.0 py_2",
   "lz4-c 1.9.3 h3b9df90_1",
   "pygments 2.10.0 pyhd8ed1ab_0",
   "readline 8.1 h5c45dff_0",
   "jinja2 3.0.2 pyhd8ed1ab_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "libiconv 1.16 h6eb9509_0",
   "ripgrep 13.0.0 ha57a3a6_1",
   "xz 5.2.5 h6eb9509_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "rich 10.12.0 py38hf8b3453_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "pycparser 2.20 pyh9f0ad1d_2",
   "commonmark 0.9.1 py_0",
   "requests 2.26.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.20 pyha770c72_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "zstd 1.5.0 h65c4b1a_0",
   "brotlipy 0.7.0 py38h98b8a6f_1001",
   "sqlite 3.36.0 h4e2196e_2",
   "libffi 3.4.2 h3b9df90_4",
   "_openmp_mutex 4.5 1_gnu",
   "_libgcc_mutex 0.1 conda_forge",
   "markupsafe 2.0.1 py38h98b8a6f_0",
   "libedit 3.1.20191231 h41a240f_2",
   "ca-certificates 2021.10.8 h1084571_0",
   "openssl 1.1.1l h4e0d66e_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "libarchive 3.5.2 h3281d6a_1",
   "prompt_toolkit 3.0.20 hd8ed1ab_0",
   "lzo 2.10 h6eb9509_1000",
   "tk 8.6.11 h41c6715_1",
   "su-exec 0.2 h6eb9509_1002",
   "perl 5.32.1 1_h4e0d66e_perl5",
   "libgomp 11.2.0 h7698a5e_11",
   "pysocks 1.7.1 py38hf8b3453_3",
   "pip 21.3 pyhd8ed1ab_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "python_abi 3.8 2_cp38",
   "ncurses 6.2 hea85c5d_4",
   "ruamel_yaml 0.15.80 py38h98b8a6f_1004",
   "pcre2 10.37 h32277c3_0",
   "conda 4.10.3 py38hf8b3453_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "libzlib 1.2.11 h339bb43_1013",
   "ipython_genutils 0.2.0 py_1",
   "patch 2.7.6 h4e0d66e_1002",
   "idna 3.1 pyhd3deb0d_0",
   "importlib-metadata 4.8.1 py38hf8b3453_0",
   "soupsieve 2.0.1 py_1",
   "watchgod 0.7 pyhd8ed1ab_0",
   "certifi 2021.10.8 py38hf8b3453_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "ruamel.yaml 0.17.16 py38h98b8a6f_0",
   "python-libarchive-c 3.1 py38hf8b3453_0",
   "six 1.16.0 pyh6c4a22f_0",
   "typing_extensions 3.10.0.2 pyha770c72_0",
   "yaml 0.2.5 h6eb9509_0",
   "mamba 0.16.0 py38h5a21a44_0",
   "pyyaml 5.4.1 py38h98b8a6f_1",
   "libev 4.33 h6eb9509_1",
   "pytz 2021.3 pyhd8ed1ab_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "libgcc-ng 11.2.0 h7698a5e_11",
   "expat 2.4.1 h3b9df90_0",
   "libxml2 2.9.12 h5b1524f_0",
   "libstdcxx-ng 11.2.0 habdf983_11",
   "ruamel.yaml.clib 0.2.2 py38h98b8a6f_2",
   "python 3.8.12 h57873ef_1_cpython",
   "jq 1.6 h339bb43_1000",
   "conda-forge-ci-setup 3.14.0 py38h6345821_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "click 8.0.3 py38hf8b3453_0",
   "oniguruma 6.9.7.1 h4e0d66e_0"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/python3.8/site-packages/leidenalg-0.8.8-py3.8.egg-info/PKG-INFO",
  "lib/python3.8/site-packages/leidenalg/Optimiser.py",
  "lib/python3.8/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.8/site-packages/leidenalg/__init__.py",
  "lib/python3.8/site-packages/leidenalg/_c_leiden.cpython-38-powerpc64le-linux-gnu.so",
  "lib/python3.8/site-packages/leidenalg/functions.py",
  "lib/python3.8/site-packages/leidenalg/version.py"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "py38ha35a538_0",
  "build_number": 0,
  "depends": [
   "igraph >=0.9.4,<0.10.0a0",
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0",
   "pip",
   "python >=3.8,<3.9.0a0",
   "python-igraph",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1634329762239,
  "version": "0.8.8"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.8.8\" %}\n{% set sha256 = \"12750f66d1f0c84ed4484fa895a9d5a163e2f4b611edb12ad09cc66120654df3\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\n  run_exports:\n    - {{ pin_subpackage(\"leidenalg\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - vs2017_{{ target_platform }}  # [win]\n  host:\n    - igraph\n    - python\n    - setuptools\n    - setuptools_scm\n    - pip\n  run:\n    - igraph\n    - python-igraph\n    - python\n    - pip\n\ntest:\n  requires:\n    - ddt\n  source_files:\n    - tests\n  imports:\n    - leidenalg\n  commands:\n    - python -m unittest\n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "leidenalg >=0.8.8,<0.9.0a0"
   ],
   "string": "py38ha35a538_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.8.8"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.36.1 h5836da8_2",
    "binutils_linux-ppc64le 2.36 he035471_1",
    "gcc_impl_linux-ppc64le 9.4.0 hcbd312b_11",
    "gcc_linux-ppc64le 9.4.0 h2449294_1",
    "gxx_impl_linux-ppc64le 9.4.0 hcbd312b_11",
    "gxx_linux-ppc64le 9.4.0 h64afa7a_1",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_12",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libgcc-devel_linux-ppc64le 9.4.0 he021ec0_11",
    "libgcc-ng 11.2.0 h7698a5e_11",
    "libgomp 11.2.0 h7698a5e_11",
    "libsanitizer 9.4.0 h106b142_11",
    "libstdcxx-devel_linux-ppc64le 9.4.0 he021ec0_11",
    "libstdcxx-ng 11.2.0 habdf983_11",
    "sysroot_linux-ppc64le 2.17 h395ec9b_12"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "arpack 3.7.0 hc5e8adb_2",
    "ca-certificates 2021.10.8 h1084571_0",
    "glpk 4.65 h7bbf4ef_1004",
    "gmp 6.2.1 hea85c5d_0",
    "icu 68.1 hea85c5d_0",
    "igraph 0.9.4 h1d806b1_0",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libblas 3.9.0 12_linuxppc64le_openblas",
    "libcblas 3.9.0 12_linuxppc64le_openblas",
    "libffi 3.4.2 h3b9df90_4",
    "libgcc-ng 11.2.0 h7698a5e_11",
    "libgfortran-ng 11.2.0 hfdc3801_11",
    "libgfortran5 11.2.0 he58fbb4_11",
    "libgomp 11.2.0 h7698a5e_11",
    "libiconv 1.16 h6eb9509_0",
    "liblapack 3.9.0 12_linuxppc64le_openblas",
    "libopenblas 0.3.18 pthreads_h486567c_0",
    "libstdcxx-ng 11.2.0 habdf983_11",
    "libxml2 2.9.12 h5b1524f_0",
    "libzlib 1.2.11 h339bb43_1013",
    "metis 5.1.0 hea85c5d_1006",
    "mpfr 4.1.0 h7bbf4ef_1",
    "ncurses 6.2 hea85c5d_4",
    "openssl 3.0.0 h4e0d66e_1",
    "packaging 21.0 pyhd8ed1ab_0",
    "pip 21.3 pyhd8ed1ab_0",
    "pyparsing 2.4.7 pyh9f0ad1d_0",
    "python 3.8.12 h60499bd_1_cpython",
    "python_abi 3.8 2_cp38",
    "readline 8.1 h5c45dff_0",
    "setuptools 58.2.0 py38hf8b3453_0",
    "setuptools-scm 6.3.2 pyhd8ed1ab_0",
    "setuptools_scm 6.3.2 hd8ed1ab_0",
    "sqlite 3.36.0 h4e2196e_2",
    "suitesparse 5.10.1 ha09e1de_1",
    "tbb 2021.3.0 h2acdbc0_0",
    "tk 8.6.11 h41c6715_1",
    "tomli 1.2.1 pyhd8ed1ab_0",
    "wheel 0.37.0 pyhd8ed1ab_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h339bb43_1013"
   ],
   "run": [
    "igraph >=0.9.4,<0.10.0a0",
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0",
    "pip",
    "python >=3.8,<3.9.0a0",
    "python-igraph",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "fn": "leidenalg-0.8.8.tar.gz",
   "sha256": "12750f66d1f0c84ed4484fa895a9d5a163e2f4b611edb12ad09cc66120654df3",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.8.8.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest"
   ],
   "imports": [
    "leidenalg"
   ],
   "requires": [
    "ddt"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "0.8.8"
}