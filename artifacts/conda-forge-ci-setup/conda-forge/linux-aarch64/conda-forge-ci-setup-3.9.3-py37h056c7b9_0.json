{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.0",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/core"
   ]
  },
  "home": "https://github.com/conda-forge/conda-forge-build-setup-feedstock",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "bzip2 1.0.8 hf897c2e_4",
   "traitlets 5.0.5 py_0",
   "ipython_genutils 0.2.0 py_1",
   "libstdcxx-ng 9.3.0 h7a64470_17",
   "pycosat 0.6.3 py38h9544abe_1006",
   "libiconv 1.16 h6dd45c4_0",
   "libxml2 2.9.10 hd674cf7_3",
   "libarchive 3.5.1 h1023f6c_1",
   "readline 8.1 h1a49cc3_0",
   "python 3.8.8 h3bd6a85_0_cpython",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "tk 8.6.10 ha99a2a3_1",
   "python_abi 3.8 1_cp38",
   "lz4-c 1.9.3 h01db608_0",
   "ruamel_yaml 0.15.80 py38h9544abe_1004",
   "pcre 8.44 he1b5a44_0",
   "patchelf 0.11 h4c5d2ac_0",
   "libgcc-ng 9.3.0 h8ab15db_17",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "psutil 5.8.0 py38h9544abe_1",
   "anaconda-client 1.7.2 py_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "jupyter_core 4.7.1 py38h2063c64_0",
   "urllib3 1.26.4 pyhd8ed1ab_0",
   "zstd 1.4.9 h41fb7a4_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "clyent 1.2.2 py_1",
   "c-ares 1.17.1 hf897c2e_1",
   "attrs 20.3.0 pyhd3deb0d_0",
   "openssl 1.1.1k hf897c2e_0",
   "brotlipy 0.7.0 py38h9544abe_1001",
   "libffi 3.3 h884eca8_2",
   "soupsieve 2.0.1 py_1",
   "git 2.30.2 pl5320h15a82ca_1",
   "cryptography 3.4.7 py38h06f97cd_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "importlib-metadata 3.10.0 py38h2063c64_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "markupsafe 1.1.1 py38h9544abe_3",
   "ripgrep 12.1.1 h516909a_1",
   "setuptools 49.6.0 py38h2063c64_3",
   "libnghttp2 1.43.0 h097699d_0",
   "glob2 0.7 py_0",
   "libev 4.33 h516909a_1",
   "su-exec 0.2 h516909a_1002",
   "yaml 0.2.5 h516909a_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "jinja2 2.11.3 pyh44b312d_0",
   "libgomp 9.3.0 h8ab15db_17",
   "certifi 2020.12.5 py38h2063c64_1",
   "sqlite 3.35.3 h43e6a2a_0",
   "ld_impl_linux-aarch64 2.35.1 h02ad14f_2",
   "tqdm 4.59.0 pyhd8ed1ab_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "expat 2.3.0 h3621d8e_0",
   "libcurl 7.76.0 h362eb50_0",
   "pyyaml 5.4.1 py38h9544abe_0",
   "curl 7.76.0 h7f0bf2a_0",
   "ncurses 6.2 h7fd3ca4_4",
   "chardet 4.0.0 py38h2063c64_1",
   "libssh2 1.9.0 h1ab2c7b_6",
   "pyrsistent 0.17.3 py38h9544abe_2",
   "python-dateutil 2.8.1 py_0",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "liblief 0.10.1 he1b5a44_2",
   "pysocks 1.7.1 py38h2063c64_3",
   "lzo 2.10 h516909a_1000",
   "ca-certificates 2020.12.5 h4fd8a4c_0",
   "pip 21.0.1 pyhd8ed1ab_0",
   "tini 0.18.0 h14c3975_1001",
   "perl 5.32.0 hb9de7d4_0",
   "cffi 1.14.5 py38hba996e7_0",
   "conda-package-handling 1.7.2 py38ha7d8a94_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "conda-build 3.21.4 py38h2063c64_0",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "python-libarchive-c 2.9 py38h2063c64_2",
   "zlib 1.2.11 h516909a_1009",
   "krb5 1.17.2 he08ec14_0",
   "gettext 0.19.8.1 h4454c44_1005",
   "patch 2.7.6 hf897c2e_1002",
   "_openmp_mutex 4.5 1_gnu",
   "icu 68.1 h884eca8_0",
   "py-lief 0.10.1 py38h0d71b83_2",
   "xz 5.2.5 h6dd45c4_1",
   "idna 2.10 pyh9f0ad1d_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "jq 1.6 hb9de7d4_1000",
   "conda-env 2.6.0 1",
   "click 7.1.2 pyh9f0ad1d_0",
   "oniguruma 6.9.3 hb9de7d4_0",
   "conda 4.10.0 py38h2063c64_1",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "A package installed by conda-forge each time a build is run on CI. This package has side-effects to your conda config.",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "drone",
  "c_compiler": "gcc",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler_version": "None",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "ignore_build_only_deps",
   "extend_keys",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64"
 },
 "files": [
  "bin/cross_compile_support.sh",
  "bin/download_osx_sdk.sh",
  "bin/ff_ci_pr_build",
  "bin/make_build_number",
  "bin/mangle_compiler",
  "bin/mangle_homebrew",
  "bin/run_conda_forge_build_setup",
  "bin/setup_conda_rc",
  "bin/upload_or_check_non_existence",
  "bin/upload_package",
  "bin/validate_recipe_outputs",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/INSTALLER",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/METADATA",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/RECORD",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/REQUESTED",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/WHEEL",
  "lib/python3.7/site-packages/conda_forge_ci_setup-3.9.3.dist-info/direct_url.json",
  "lib/python3.7/site-packages/conda_forge_ci_setup/__init__.py",
  "lib/python3.7/site-packages/conda_forge_ci_setup/build_utils.py",
  "lib/python3.7/site-packages/conda_forge_ci_setup/feedstock_outputs.py",
  "lib/python3.7/site-packages/conda_forge_ci_setup/ff_ci_pr_build.py",
  "lib/python3.7/site-packages/conda_forge_ci_setup/mangle_homebrew.py",
  "lib/python3.7/site-packages/conda_forge_ci_setup/upload_or_check_non_existence.py"
 ],
 "index": {
  "arch": "aarch64",
  "build": "py37h056c7b9_0",
  "build_number": 0,
  "depends": [
   "anaconda-client",
   "click",
   "conda >=4.3",
   "conda-build 3.*",
   "conda-env",
   "git",
   "jinja2",
   "jq",
   "pip",
   "python >=3.7,<3.8.0a0",
   "python_abi 3.7.* *_cp37m",
   "pyyaml",
   "requests",
   "ruamel_yaml",
   "shyaml"
  ],
  "license": "BSD-3-Clause",
  "name": "conda-forge-ci-setup",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1618171503543,
  "version": "3.9.3"
 },
 "metadata_version": 1,
 "name": "conda-forge-ci-setup",
 "raw_recipe": "{% set name = \"conda-forge-ci-setup\" %}\n{% set version = \"3.9.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  number: 0\n  script:\n    - cp {{ os.environ[\"FEEDSTOCK_ROOT\"] }}/LICENSE.txt ${RECIPE_DIR}/LICENSE.txt            # [linux]\n    - cp ${RECIPE_DIR}/../LICENSE.txt ${RECIPE_DIR}/LICENSE.txt                              # [osx]\n    - COPY \"%RECIPE_DIR%\\\\..\\\\LICENSE.txt\" \"%RECIPE_DIR%\\\\LICENSE.txt\"                       # [win]\n    - if not exist \"%LIBRARY_BIN%\" mkdir \"%LIBRARY_BIN%\"                                                                 # [win]\n    - mkdir -p \"${PREFIX}/bin\"                                                                                           # [unix]\n    - COPY \"%RECIPE_DIR%\\\\run_conda_forge_build_setup_win.bat\" \"%SCRIPTS%\\\\run_conda_forge_build_setup.bat\"              # [win]\n    - cp \"${RECIPE_DIR}/run_conda_forge_build_setup_osx\" \"${PREFIX}/bin/run_conda_forge_build_setup\"                     # [osx]\n    - cp \"${RECIPE_DIR}/run_conda_forge_build_setup_linux\" \"${PREFIX}/bin/run_conda_forge_build_setup\"                   # [linux]\n    - cp \"${RECIPE_DIR}/download_osx_sdk.sh\" \"${PREFIX}/bin/download_osx_sdk.sh\"                                         # [unix]\n    - cp \"${RECIPE_DIR}/cross_compile_support.sh\" \"${PREFIX}/bin/cross_compile_support.sh\"                               # [unix]\n    - COPY \"%RECIPE_DIR%\\\\install_cuda.bat\" \"%SCRIPTS%\\\\install_cuda.bat\"                                                # [win]\n    - cd \"%RECIPE_DIR%\"   # [win]\n    - cd \"${RECIPE_DIR}\"  # [unix]\n    - \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n    - echo \"${RECIPE_DIR}\"\n  entry_points:\n    - ff_ci_pr_build = conda_forge_ci_setup.ff_ci_pr_build:main\n    - upload_or_check_non_existence = conda_forge_ci_setup.upload_or_check_non_existence:main\n    - setup_conda_rc = conda_forge_ci_setup.build_utils:setup_conda_rc\n    - upload_package = conda_forge_ci_setup.build_utils:upload_package\n    - mangle_compiler = conda_forge_ci_setup.build_utils:mangle_compiler\n    - make_build_number = conda_forge_ci_setup.build_utils:make_build_number\n    - mangle_homebrew = conda_forge_ci_setup.mangle_homebrew:main\n    - validate_recipe_outputs = conda_forge_ci_setup.feedstock_outputs:main\n  skip: True  # [py2k]\n\nrequirements:\n  build:\n    - python                              # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - conda >=4.3\n    - conda-env\n    - click\n    - jinja2\n    - anaconda-client\n    - conda-build 3.*\n    - vs2008_express_vc_python_patch  # [win]\n    - shyaml\n    - jq  # [unix]\n    - requests\n    - ruamel_yaml\n    - pip\n    - pyyaml\n    - m2-git  # [win]\n    - git     # [unix]\n\ntest:\n  # ensure that all variants of cuda_compiler_version are tested\n  requires:                                    # [(linux or win) and cuda_compiler_version not in (undefined, \"None\")]\n    - cudatoolkit {{ cuda_compiler_version }}  # [(linux or win) and cuda_compiler_version not in (undefined, \"None\")]\n  commands:\n    - if not exist \"%PREFIX%\\\\Scripts\\\\run_conda_forge_build_setup.bat\" exit 1    # [win]\n    - test -f \"${PREFIX}/bin/run_conda_forge_build_setup\"                         # [unix]\n    - ff_ci_pr_build --help\n    - upload_or_check_non_existence --help\n    - setup_conda_rc --help\n    - upload_package --help\n    - make_build_number --help\n    - mangle_homebrew --help\n    - validate_recipe_outputs --help\n\n\nabout:\n  home: https://github.com/conda-forge/conda-forge-build-setup-feedstock\n  summary: A package installed by conda-forge each time a build is run on CI. This package has side-effects to your conda config.\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - conda-forge/core\n",
 "rendered_recipe": {
  "about": {
   "home": "https://github.com/conda-forge/conda-forge-build-setup-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "A package installed by conda-forge each time a build is run on CI. This package has side-effects to your conda config."
  },
  "build": {
   "entry_points": [
    "ff_ci_pr_build = conda_forge_ci_setup.ff_ci_pr_build:main",
    "make_build_number = conda_forge_ci_setup.build_utils:make_build_number",
    "mangle_compiler = conda_forge_ci_setup.build_utils:mangle_compiler",
    "mangle_homebrew = conda_forge_ci_setup.mangle_homebrew:main",
    "setup_conda_rc = conda_forge_ci_setup.build_utils:setup_conda_rc",
    "upload_or_check_non_existence = conda_forge_ci_setup.upload_or_check_non_existence:main",
    "upload_package = conda_forge_ci_setup.build_utils:upload_package",
    "validate_recipe_outputs = conda_forge_ci_setup.feedstock_outputs:main"
   ],
   "number": "0",
   "script": [
    "cp /drone/src/LICENSE.txt ${RECIPE_DIR}/LICENSE.txt",
    "mkdir -p \"${PREFIX}/bin\"",
    "cp \"${RECIPE_DIR}/run_conda_forge_build_setup_linux\" \"${PREFIX}/bin/run_conda_forge_build_setup\"",
    "cp \"${RECIPE_DIR}/download_osx_sdk.sh\" \"${PREFIX}/bin/download_osx_sdk.sh\"",
    "cp \"${RECIPE_DIR}/cross_compile_support.sh\" \"${PREFIX}/bin/cross_compile_support.sh\"",
    "cd \"${RECIPE_DIR}\"",
    "/drone/src/build_artifacts/conda-forge-ci-setup_1618171163135/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/bin/python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
    "echo \"${RECIPE_DIR}\""
   ],
   "string": "py37h056c7b9_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/core"
   ]
  },
  "package": {
   "name": "conda-forge-ci-setup",
   "version": "3.9.3"
  },
  "requirements": {
   "build": [],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.12.5 h4fd8a4c_0",
    "certifi 2020.12.5 py37hd9ded2f_1",
    "ld_impl_linux-aarch64 2.35.1 h02ad14f_2",
    "libffi 3.3 h884eca8_2",
    "libgcc-ng 9.3.0 h8ab15db_17",
    "libgomp 9.3.0 h8ab15db_17",
    "libstdcxx-ng 9.3.0 h7a64470_17",
    "ncurses 6.2 h7fd3ca4_4",
    "openssl 1.1.1k hf897c2e_0",
    "pip 21.0.1 pyhd8ed1ab_0",
    "python 3.7.10 h3bd6a85_100_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.1 h1a49cc3_0",
    "setuptools 49.6.0 py37hd9ded2f_3",
    "sqlite 3.35.4 h43e6a2a_0",
    "tk 8.6.10 ha99a2a3_1",
    "wheel 0.36.2 pyhd3deb0d_0",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 h516909a_1009"
   ],
   "run": [
    "anaconda-client",
    "click",
    "conda >=4.3",
    "conda-build 3.*",
    "conda-env",
    "git",
    "jinja2",
    "jq",
    "pip",
    "python >=3.7,<3.8.0a0",
    "python_abi 3.7.* *_cp37m",
    "pyyaml",
    "requests",
    "ruamel_yaml",
    "shyaml"
   ]
  },
  "source": {
   "path": "/drone/src/recipe"
  },
  "test": {
   "commands": [
    "test -f \"${PREFIX}/bin/run_conda_forge_build_setup\"",
    "ff_ci_pr_build --help",
    "upload_or_check_non_existence --help",
    "setup_conda_rc --help",
    "upload_package --help",
    "make_build_number --help",
    "mangle_homebrew --help",
    "validate_recipe_outputs --help"
   ]
  }
 },
 "version": "3.9.3"
}