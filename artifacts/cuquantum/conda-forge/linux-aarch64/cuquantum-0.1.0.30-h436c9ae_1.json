{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.7",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "NVIDIA cuQuantum SDK is a high-performance library for quantum information science and beyond.\nCurrently its primary target is quantum circuit simulations and it contains the major component:\n\n  - cuStateVec: a high-performance library for state vector computations\n  - cuTensorNet: a high-performance library for tensor network computations\n\nLicense Agreements:- The packages are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
  "dev_url": "https://developer.nvidia.com/cuquantum-downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cuquantum/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang"
   ]
  },
  "home": "https://developer.nvidia.com/cuquantum-sdk",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuQuantum-Software-License-Agreement",
  "license_file": "docs/cuQuantum_license.pdf",
  "license_url": "https://docs.nvidia.com/cuda/cuquantum/license.html",
  "root_pkgs": [
   "dataclasses 0.8 pyhc8e2a94_3",
   "expat 2.4.1 h3621d8e_0",
   "ruamel_yaml 0.15.80 py38h9544abe_1006",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "yaml-cpp 0.6.3 h54f1f3f_4",
   "commonmark 0.9.1 py_0",
   "six 1.16.0 pyh6c4a22f_0",
   "filelock 3.4.0 pyhd8ed1ab_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "requests 2.26.0 pyhd8ed1ab_1",
   "libssh2 1.10.0 h1ab2c7b_2",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "c-ares 1.18.1 hf897c2e_0",
   "setuptools 59.6.0 py38h2063c64_0",
   "backports 1.0 py_2",
   "perl 5.32.1 1_hf897c2e_perl5",
   "lzo 2.10 h516909a_1000",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "python_abi 3.8 2_cp38",
   "patchelf 0.14.3 h884eca8_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "libnghttp2 1.43.0 h097699d_1",
   "ca-certificates 2021.10.8 h4fd8a4c_0",
   "python 3.8.12 h9f07fca_2_cpython",
   "pip 21.3.1 pyhd8ed1ab_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "tk 8.6.11 hd8af866_1",
   "jupyter_core 4.9.1 py38he3eb160_1",
   "tini 0.18.0 h14c3975_1001",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "sqlite 3.37.0 hc164836_0",
   "libnsl 2.0.0 hf897c2e_0",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "importlib-metadata 4.9.0 py38h2063c64_0",
   "cffi 1.15.0 py38hc42474b_0",
   "krb5 1.19.2 h4f20351_2",
   "reproc 14.2.3 hf897c2e_0",
   "py-lief 0.11.5 py38h4da49af_1",
   "libstdcxx-ng 11.2.0 h0d0a5bb_11",
   "certifi 2021.10.8 py38h2063c64_1",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.24 pyha770c72_0",
   "libgomp 11.2.0 hf1cc4e7_11",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "bzip2 1.0.8 hf897c2e_4",
   "tzdata 2021e he74cb21_0",
   "libxml2 2.9.12 h1e2ce75_1",
   "ncurses 6.2 h7fd3ca4_4",
   "libarchive 3.5.2 h37be732_1",
   "libzlib 1.2.11 hb9de7d4_1013",
   "pygments 2.10.0 pyhd8ed1ab_0",
   "pycosat 0.6.3 py38h9544abe_1009",
   "clyent 1.2.2 py_1",
   "git 2.34.1 pl5321h063bab8_0",
   "yaml 0.2.5 h516909a_0",
   "cryptography 36.0.1 py38h1376e7f_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "conda-build 3.21.7 py38he3eb160_0",
   "prompt_toolkit 3.0.24 hd8ed1ab_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "liblief 0.11.5 h01db608_1",
   "libiconv 1.16 h6dd45c4_0",
   "markupsafe 2.0.1 py38h9544abe_1",
   "watchgod 0.7 pyhd8ed1ab_0",
   "pyyaml 6.0 py38h9544abe_3",
   "charset-normalizer 2.0.9 pyhd8ed1ab_0",
   "boa 0.8.1 pyha770c72_0",
   "idna 3.1 pyhd3deb0d_0",
   "libev 4.33 h516909a_1",
   "readline 8.1 h1a49cc3_0",
   "zstd 1.5.0 h41fb7a4_0",
   "libcurl 7.80.0 hcafe9da_0",
   "zlib 1.2.11 hb9de7d4_1013",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "libmambapy 0.19.1 py38h51ff73d_0",
   "_openmp_mutex 4.5 1_gnu",
   "python-libarchive-c 3.2 py38he3eb160_0",
   "libffi 3.4.2 h3557bc0_5",
   "json5 0.9.5 pyh9f0ad1d_0",
   "chardet 4.0.0 py38h2063c64_2",
   "libedit 3.1.20191231 he28a2e2_2",
   "xz 5.2.5 h6dd45c4_1",
   "lz4-c 1.9.3 h01db608_1",
   "pysocks 1.7.1 py38h2063c64_4",
   "ipython_genutils 0.2.0 py_1",
   "conda-package-handling 1.7.3 py38h9544abe_1",
   "pyrsistent 0.18.0 py38h9544abe_0",
   "libmamba 0.19.1 hddc0073_0",
   "psutil 5.8.0 py38h9544abe_2",
   "su-exec 0.2 h516909a_1002",
   "brotlipy 0.7.0 py38h9544abe_1003",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "libsolv 0.7.19 h469bdbd_5",
   "curl 7.80.0 hcafe9da_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "ruamel.yaml.clib 0.2.6 py38he362374_0",
   "future 0.18.2 py38h2063c64_4",
   "reproc-cpp 14.2.3 h01db608_0",
   "conda 4.11.0 py38he3eb160_0",
   "mamba 0.19.1 py38h0280004_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.17 py38he362374_1",
   "patch 2.7.6 hf897c2e_1002",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "pybind11-abi 4 hd8ed1ab_3",
   "typing_extensions 4.0.1 pyha770c72_0",
   "libgcc-ng 11.2.0 hf1cc4e7_11",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "rich 10.16.1 pyhd8ed1ab_0",
   "icu 69.1 h3621d8e_0",
   "jsonschema 4.3.1 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h6edf1e2_1008",
   "glob2 0.7 py_0",
   "pcre2 10.37 h73360fb_0",
   "ripgrep 13.0.0 h26d3e4c_1",
   "openssl 1.1.1l hf897c2e_0",
   "click 8.0.3 py38h2063c64_1",
   "jq 1.6 hb9de7d4_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.7.1 hf897c2e_0",
   "conda-forge-ci-setup 3.18.0 py38h9934e81_0"
  ],
  "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "arm_variant_type": "sbsa",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cudnn": "undefined",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64-cuda:11.2",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "9",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/.cuquantum-post-link.sh",
  "include/custatevec.h",
  "include/cutensornet.h",
  "include/cutensornet/types.h",
  "lib/libcustatevec.so",
  "lib/libcustatevec.so.0",
  "lib/libcustatevec.so.0.1.0.30",
  "lib/libcutensornet.so",
  "lib/libcutensornet.so.0",
  "lib/libcutensornet.so.0.1.0.30"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h436c9ae_1",
  "build_number": 1,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17,<3.0.a0",
   "cudatoolkit >=11.2,<12",
   "cutensor >=1.4,<1.5",
   "libgcc-ng >=3.0",
   "libstdcxx-ng >=3.4"
  ],
  "license": "LicenseRef-cuQuantum-Software-License-Agreement",
  "name": "cuquantum",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1640201266100,
  "version": "0.1.0.30"
 },
 "metadata_version": 1,
 "name": "cuquantum",
 "raw_recipe": "{% set version = \"0.1.0\" %}\n{% set patch_version = \"30\" %}\n\npackage:\n  name: cuquantum\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cuquantum/{{ version }}/local_installers/cuquantum-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz   # [linux64]\n  url: https://developer.download.nvidia.com/compute/cuquantum/{{ version }}/local_installers/cuquantum-linux-sbsa-{{ version }}.{{ patch_version }}-archive.tar.xz     # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cuquantum/{{ version }}/local_installers/cuquantum-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz  # [ppc64le]\n\n  sha256: 8ad8e98f14275ffe0de02574be5c86224af1c657c41baf02c16440301ffe0aae  # [linux64]\n  sha256: 3dd04cf08f1323318e0e63a7e28bc904c426ced3367aca809fba7e7beef94063  # [aarch64]\n  sha256: 0eb84eef619a1cfab5870fb585200a9869a197866685252e4ca8187322809554  # [ppc64le]\n\nbuild:\n  number: 1\n  skip: True  # [win or ppc64le or cuda_compiler_version != \"11.2\"]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                            # [linux]\n    - cp -r include/* $PREFIX/include/                                    # [linux]\n    - mkdir -p $PREFIX/lib                                                # [linux]\n    - cp lib/*.so* $PREFIX/lib/                                           # [linux]\n\n    # Patch for conda-forge:\n    # According to the CUDA support matrix, we require glibc 2.27+ on aarch64-sbsa,\n    # while conda-forge is still on 2.17. However, given that powf is the only\n    # offending symbol that needs a newer glibc, it is the easist if we just patch\n    # it.\n    - patchelf --clear-symbol-version powf $PREFIX/lib/libcustatevec.so   # [aarch64]\n  ignore_run_exports_from:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n  run_exports:\n    - {{ pin_subpackage('cuquantum', max_pin='x.x') }}\n  missing_dso_whitelist:\n    # TODO: add more\n    - '*/libgomp.*'  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n  host:\n    - patchelf >=0.12  # [aarch64]\n  run:\n    # Only GCC_3.0 or older symbols present\n    - libgcc-ng >=3.0     # [linux]\n    # Only GLIBCXX_3.4 or older symbols present\n    - libstdcxx-ng >=3.4  # [linux]\n    - cudatoolkit >=11.2,<12\n    - cutensor >=1.4,<1.5\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cuquantum-sdk\n  license: LicenseRef-cuQuantum-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cuquantum/license.html\n  license_file: docs/cuQuantum_license.pdf\n  summary: \"cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science\"\n  description: |\n    NVIDIA cuQuantum SDK is a high-performance library for quantum information science and beyond.\n    Currently its primary target is quantum circuit simulations and it contains the major component:\n\n      - cuStateVec: a high-performance library for state vector computations\n      - cuTensorNet: a high-performance library for tensor network computations\n\n    License Agreements:- The packages are governed by the NVIDIA cuQuantum\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n    https://docs.nvidia.com/cuda/cuquantum/license.html\n  doc_url: https://docs.nvidia.com/cuda/cuquantum/index.html\n  dev_url: https://developer.nvidia.com/cuquantum-downloads\n\nextra:\n  recipe-maintainers:\n    - leofang\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA cuQuantum SDK is a high-performance library for quantum information science and beyond.\nCurrently its primary target is quantum circuit simulations and it contains the major component:\n\n  - cuStateVec: a high-performance library for state vector computations\n  - cuTensorNet: a high-performance library for tensor network computations\n\nLicense Agreements:- The packages are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
   "dev_url": "https://developer.nvidia.com/cuquantum-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cuquantum/index.html",
   "home": "https://developer.nvidia.com/cuquantum-sdk",
   "license": "LicenseRef-cuQuantum-Software-License-Agreement",
   "license_file": "docs/cuQuantum_license.pdf",
   "license_url": "https://docs.nvidia.com/cuda/cuquantum/license.html",
   "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science"
  },
  "build": {
   "ignore_run_exports_from": [
    "gcc_linux-aarch64 9.*",
    "nvcc_linux-aarch64 11.2.*"
   ],
   "missing_dso_whitelist": [
    "*/libgomp.*"
   ],
   "number": "1",
   "run_exports": [
    "cuquantum >=0.1.0.30,<0.2.0a0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp -r include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "cp lib/*.so* $PREFIX/lib/",
    "patchelf --clear-symbol-version powf $PREFIX/lib/libcustatevec.so"
   ],
   "script_env": [
    "CUDA_HOME"
   ],
   "string": "h436c9ae_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang"
   ]
  },
  "package": {
   "name": "cuquantum",
   "version": "0.1.0.30"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 1_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h5bd9786_13",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_2",
    "gcc_impl_linux-aarch64 9.4.0 h603953f_11",
    "gcc_linux-aarch64 9.4.0 h9fa865e_2",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_13",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libgcc-devel_linux-aarch64 9.4.0 h85f5abf_11",
    "libgcc-ng 11.2.0 hf1cc4e7_11",
    "libgomp 11.2.0 hf1cc4e7_11",
    "libsanitizer 9.4.0 h4d00405_11",
    "libstdcxx-ng 11.2.0 h0d0a5bb_11",
    "nvcc_linux-aarch64 11.2 hd9c1ecf_15",
    "sed 4.8 ha0d5d3d_0",
    "sysroot_linux-64 2.17 h4a8ded7_13",
    "sysroot_linux-aarch64 2.17 h43d7e78_13"
   ],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "libgcc-ng 11.2.0 hf1cc4e7_11",
    "libgomp 11.2.0 hf1cc4e7_11",
    "libstdcxx-ng 11.2.0 h0d0a5bb_11",
    "patchelf 0.14.3 h884eca8_0"
   ],
   "run": [
    "__glibc >=2.17,<3.0.a0",
    "cudatoolkit >=11.2,<12",
    "cutensor >=1.4,<1.5",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "3dd04cf08f1323318e0e63a7e28bc904c426ced3367aca809fba7e7beef94063",
   "url": "https://developer.download.nvidia.com/compute/cuquantum/0.1.0/local_installers/cuquantum-linux-sbsa-0.1.0.30-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.2.*",
    "gcc_linux-aarch64 9.*",
    "git",
    "gxx_linux-aarch64 9.*",
    "nvcc_linux-aarch64 11.2.*",
    "sysroot_linux-64 2.17.*"
   ]
  }
 },
 "version": "0.1.0.30"
}