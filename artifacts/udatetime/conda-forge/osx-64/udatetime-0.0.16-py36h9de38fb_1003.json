{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.2",
  "conda_private": false,
  "conda_version": "4.8.5",
  "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nudatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
  "dev_url": "https://github.com/freach/udatetime",
  "doc_url": "https://github.com/freach/udatetime",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "daviskirk"
   ]
  },
  "home": "https://github.com/freach/udatetime",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "license_file": "/Users/runner/work/1/s/recipe/LICENSE",
  "root_pkgs": [
   "conda-env 2.6.0 1",
   "requests 2.24.0 pyh9f0ad1d_0",
   "traitlets 5.0.4 py_0",
   "libarchive 3.3.3 hf12134e_1008",
   "idna 2.10 pyh9f0ad1d_0",
   "jq 1.6 h1de35cc_1000",
   "ruamel_yaml 0.15.80 py38h4d0b108_1002",
   "py-lief 0.10.1 py38h11c0d25_1",
   "anaconda-client 1.7.2 py_0",
   "sqlite 3.33.0 h960bd1c_0",
   "jupyter_core 4.6.3 py38h32f6830_1",
   "libffi 3.2.1 hb1e8313_1007",
   "pycparser 2.20 pyh9f0ad1d_2",
   "soupsieve 2.0.1 py_1",
   "libxml2 2.9.10 h2c6e4a5_2",
   "tk 8.6.10 hb0a8c7a_0",
   "certifi 2020.6.20 py38h32f6830_0",
   "glob2 0.7 py_0",
   "shyaml 0.6.1 py_0",
   "ripgrep 12.1.1 h0b31af3_0",
   "cryptography 3.1 py38h52adbb4_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "pyrsistent 0.17.3 py38h4d0b108_0",
   "openssl 1.1.1h haf1e3a3_0",
   "libiconv 1.16 haf1e3a3_0",
   "urllib3 1.25.10 py_0",
   "conda 4.8.5 py38h32f6830_1",
   "expat 2.2.9 hb1e8313_2",
   "beautifulsoup4 4.9.1 py_1",
   "lz4-c 1.9.2 hb1e8313_3",
   "xz 5.2.5 haf1e3a3_1",
   "importlib_metadata 1.7.0 0",
   "conda-package-handling 1.7.0 py38h4d0b108_5",
   "pip 20.2.3 py_0",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "tqdm 4.49.0 pyh9f0ad1d_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "zstd 1.4.5 h289c70a_2",
   "brotlipy 0.7.0 py38h4d0b108_1000",
   "nbformat 5.0.7 py_0",
   "pycosat 0.6.3 py38h4d0b108_1004",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "perl 5.26.2 haec8ef5_1006",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "cffi 1.14.3 py38hc4dd44e_0",
   "zlib 1.2.11 h7795811_1009",
   "liblief 0.10.1 hb1e8313_1",
   "readline 8.0 h0678c8f_2",
   "pyopenssl 19.1.0 py_1",
   "conda-forge-ci-setup 3.3.0 py38h32f6830_0",
   "icu 67.1 hb1e8313_0",
   "c-ares 1.16.1 haf1e3a3_3",
   "pytz 2020.1 pyh9f0ad1d_0",
   "conda-build 3.20.2 py38h32f6830_0",
   "yaml 0.2.5 haf1e3a3_0",
   "bzip2 1.0.8 haf1e3a3_3",
   "zipp 3.2.0 py_0",
   "python 3.8.5 h0ed32c4_8_cpython",
   "curl 7.71.1 hcb81553_6",
   "krb5 1.17.1 h75d18d8_3",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "ncurses 6.2 hb1e8313_1",
   "libcurl 7.71.1 h9bf37e3_6",
   "jsonschema 3.2.0 py38h32f6830_1",
   "python-libarchive-c 2.9 py38h32f6830_0",
   "clyent 1.2.2 py_1",
   "pcre 8.44 h4a8c4bd_0",
   "pkginfo 1.5.0.1 py_0",
   "markupsafe 1.1.1 py38h4d0b108_1",
   "pysocks 1.7.1 py38h32f6830_1",
   "gettext 0.19.8.1 h46ab8bc_1002",
   "chardet 3.0.4 py38h32f6830_1007",
   "psutil 5.7.2 py38h4d0b108_0",
   "importlib-metadata 1.7.0 py38h32f6830_0",
   "pyyaml 5.3.1 py38h4d0b108_0",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "git 2.28.0 pl526hde3ca24_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "lzo 2.10 haf1e3a3_1000",
   "setuptools 49.6.0 py38h32f6830_1",
   "oniguruma 6.9.3 h01d97ff_0",
   "libcxx 10.0.1 h5f48129_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0"
  ],
  "summary": "Fast RFC3339 compliant Python date-time library",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.7.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "10",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/bench_udatetime.py",
  "lib/python3.6/site-packages/udatetime-0.0.16-py3.6.egg-info/PKG-INFO",
  "lib/python3.6/site-packages/udatetime-0.0.16-py3.6.egg-info/not-zip-safe",
  "lib/python3.6/site-packages/udatetime/__init__.py",
  "lib/python3.6/site-packages/udatetime/_pure.py",
  "lib/python3.6/site-packages/udatetime/rfc3339.cpython-36m-darwin.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36h9de38fb_1003",
  "build_number": 1003,
  "depends": [
   "python >=3.6,<3.7.0a0",
   "python_abi 3.6.* *_cp36m"
  ],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "name": "udatetime",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1600913157614,
  "version": "0.0.16"
 },
 "metadata_version": 1,
 "name": "udatetime",
 "raw_recipe": "{% set name = \"udatetime\" %}\n{% set version = \"0.0.16\" %}\n{% set sha256 = \"82d3d7f148f69dd53ba8d913b1c21386263d057dbdf044c799ce76b5a7667427\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1003\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  # udatetime only supports posix platforms so we'll skip building for windows\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - setuptools\n    # udatetime requires gcc and python dev tools so we require the toolchaing to be present\n  run:\n    - python\n\ntest:\n  imports:\n    - udatetime\n\nabout:\n  home: https://github.com/freach/udatetime\n  license: Apache-2.0\n  license_family: Apache\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Fast RFC3339 compliant Python date-time library'\n  description: |\n    Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\n    udatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n  doc_url: https://github.com/freach/udatetime\n  dev_url: https://github.com/freach/udatetime\n\nextra:\n  recipe-maintainers:\n    - daviskirk\n",
 "rendered_recipe": {
  "about": {
   "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nudatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
   "dev_url": "https://github.com/freach/udatetime",
   "doc_url": "https://github.com/freach/udatetime",
   "home": "https://github.com/freach/udatetime",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "/Users/runner/work/1/s/recipe/LICENSE",
   "summary": "Fast RFC3339 compliant Python date-time library"
  },
  "build": {
   "number": "1003",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py36h9de38fb_1003"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "daviskirk"
   ]
  },
  "package": {
   "name": "udatetime",
   "version": "0.0.16"
  },
  "requirements": {
   "build": [
    "cctools_osx-64 949.0.1 h5ba7a2e_7",
    "clang 10.0.1 default_hf57f61e_1",
    "clang_osx-64 10.0.1 h05bbb7f_10",
    "clangxx 10.0.1 default_hf57f61e_1",
    "compiler-rt 10.0.1 he6db49b_0",
    "compiler-rt_osx-64 10.0.1 h033240e_0",
    "ld64_osx-64 530 h3c32e8a_7",
    "libclang-cpp10 10.0.1 default_hf57f61e_1",
    "libcxx 10.0.1 h5f48129_0",
    "libllvm10 10.0.1 h009f743_3",
    "llvm-tools 10.0.1 h1341992_3",
    "tapi 1000.10.8 h879752b_4",
    "zlib 1.2.11 h7795811_1009"
   ],
   "host": [
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py36h9f0ad1d_0",
    "libcxx 10.0.1 h5f48129_0",
    "libffi 3.2.1 hb1e8313_1007",
    "ncurses 6.2 hb1e8313_1",
    "openssl 1.1.1h haf1e3a3_0",
    "python 3.6.11 hc38f9c5_2_cpython",
    "python_abi 3.6 1_cp36m",
    "readline 8.0 h0678c8f_2",
    "setuptools 49.6.0 py36h9f0ad1d_1",
    "sqlite 3.33.0 h960bd1c_0",
    "tk 8.6.10 hb0a8c7a_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1009"
   ],
   "run": [
    "python >=3.6,<3.7.0a0",
    "python_abi 3.6.* *_cp36m"
   ]
  },
  "source": {
   "fn": "udatetime-0.0.16.tar.gz",
   "sha256": "82d3d7f148f69dd53ba8d913b1c21386263d057dbdf044c799ce76b5a7667427",
   "url": "https://pypi.io/packages/source/u/udatetime/udatetime-0.0.16.tar.gz"
  },
  "test": {
   "imports": [
    "udatetime"
   ]
  }
 },
 "version": "0.0.16"
}