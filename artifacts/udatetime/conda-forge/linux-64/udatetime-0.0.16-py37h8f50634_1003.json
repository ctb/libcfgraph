{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.2",
  "conda_private": false,
  "conda_version": "4.8.5",
  "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nudatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
  "dev_url": "https://github.com/freach/udatetime",
  "doc_url": "https://github.com/freach/udatetime",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "daviskirk"
   ]
  },
  "home": "https://github.com/freach/udatetime",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "license_file": "/home/conda/recipe_root/LICENSE",
  "root_pkgs": [
   "python_abi 3.7 1_cp37m",
   "anaconda-client 1.7.2 py_0",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "ripgrep 12.1.1 h516909a_0",
   "readline 8.0 he28a2e2_2",
   "clyent 1.2.2 py_1",
   "krb5 1.17.1 hfafb76e_3",
   "libarchive 3.3.3 hddc7a2b_1008",
   "pip 20.2.3 py_0",
   "chardet 3.0.4 py37hc8dfbb8_1007",
   "six 1.15.0 pyh9f0ad1d_0",
   "glob2 0.7 py_0",
   "ca-certificates 2020.6.20 hecda079_0",
   "sqlite 3.33.0 h4cf870e_0",
   "_libgcc_mutex 0.1 conda_forge",
   "psutil 5.7.2 py37h8f50634_0",
   "libcurl 7.71.1 hcdd3856_6",
   "libffi 3.2.1 he1b5a44_1007",
   "libxml2 2.9.10 h68273f3_2",
   "pyrsistent 0.17.3 py37h8f50634_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "cryptography 3.1 py37hb09aad4_0",
   "curl 7.71.1 he644dc0_6",
   "libstdcxx-ng 9.3.0 hdf63c60_16",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "python-libarchive-c 2.9 py37hc8dfbb8_0",
   "pkginfo 1.5.0.1 py_0",
   "idna 2.10 pyh9f0ad1d_0",
   "lz4-c 1.9.2 he1b5a44_3",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "c-ares 1.16.1 h516909a_3",
   "patch 2.7.6 h14c3975_1001",
   "yaml 0.2.5 h516909a_0",
   "python-dateutil 2.8.1 py_0",
   "beautifulsoup4 4.9.1 py_1",
   "bzip2 1.0.8 h516909a_3",
   "conda-package-handling 1.7.0 py37h8f50634_5",
   "libgomp 9.3.0 h24d8f2e_16",
   "python 3.7.8 h6f2ec95_1_cpython",
   "pcre 8.44 he1b5a44_0",
   "libgcc-ng 9.3.0 h24d8f2e_16",
   "su-exec 0.2 h516909a_1002",
   "_openmp_mutex 4.5 1_gnu",
   "ld_impl_linux-64 2.35 h769bd43_9",
   "ruamel_yaml 0.15.80 py37h8f50634_1002",
   "importlib_metadata 1.7.0 0",
   "libnghttp2 1.41.0 h8cfc5f6_2",
   "urllib3 1.25.10 py_0",
   "patchelf 0.11 he1b5a44_0",
   "conda-build 3.20.2 py37hc8dfbb8_0",
   "liblief 0.10.1 he1b5a44_1",
   "soupsieve 2.0.1 py_1",
   "pyyaml 5.3.1 py37h8f50634_0",
   "py-lief 0.10.1 py37h3340039_1",
   "setuptools 49.6.0 py37hc8dfbb8_1",
   "conda 4.8.5 py37hc8dfbb8_1",
   "git 2.28.0 pl526h5e3e691_1",
   "libiconv 1.16 h516909a_0",
   "expat 2.2.9 he1b5a44_2",
   "pytz 2020.1 pyh9f0ad1d_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "tk 8.6.10 hed695b0_0",
   "zipp 3.1.0 py_0",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "tqdm 4.49.0 pyh9f0ad1d_0",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "traitlets 5.0.4 py_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "tini 0.18.0 h14c3975_1001",
   "lzo 2.10 h516909a_1000",
   "pyopenssl 19.1.0 py_1",
   "pycosat 0.6.3 py37h8f50634_1004",
   "zstd 1.4.5 h6597ccf_2",
   "ncurses 6.2 he1b5a44_1",
   "brotlipy 0.7.0 py37h8f50634_1000",
   "perl 5.26.2 h516909a_1006",
   "icu 67.1 he1b5a44_0",
   "libev 4.33 h516909a_1",
   "libssh2 1.9.0 hab1572f_5",
   "nbformat 5.0.7 py_0",
   "cffi 1.14.3 py37h2b28604_0",
   "xz 5.2.5 h516909a_1",
   "ipython_genutils 0.2.0 py_1",
   "zlib 1.2.11 h516909a_1009",
   "requests 2.24.0 pyh9f0ad1d_0",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "openssl 1.1.1h h516909a_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "markupsafe 1.1.1 py37h8f50634_1",
   "jq 1.6 h14c3975_1000",
   "conda-env 2.6.0 1",
   "shyaml 0.6.1 py_0",
   "conda-forge-ci-setup 3.3.0 py37h71091ce_0",
   "oniguruma 6.9.3 h516909a_0",
   "click 7.1.2 pyh9f0ad1d_0"
  ],
  "summary": "Fast RFC3339 compliant Python date-time library",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/bench_udatetime.py",
  "lib/python3.7/site-packages/udatetime-0.0.16-py3.7.egg-info/PKG-INFO",
  "lib/python3.7/site-packages/udatetime-0.0.16-py3.7.egg-info/not-zip-safe",
  "lib/python3.7/site-packages/udatetime/__init__.py",
  "lib/python3.7/site-packages/udatetime/_pure.py",
  "lib/python3.7/site-packages/udatetime/rfc3339.cpython-37m-x86_64-linux-gnu.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h8f50634_1003",
  "build_number": 1003,
  "depends": [
   "libgcc-ng >=7.5.0",
   "python >=3.7,<3.8.0a0",
   "python_abi 3.7.* *_cp37m"
  ],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "name": "udatetime",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1600913135339,
  "version": "0.0.16"
 },
 "metadata_version": 1,
 "name": "udatetime",
 "raw_recipe": "{% set name = \"udatetime\" %}\n{% set version = \"0.0.16\" %}\n{% set sha256 = \"82d3d7f148f69dd53ba8d913b1c21386263d057dbdf044c799ce76b5a7667427\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1003\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  # udatetime only supports posix platforms so we'll skip building for windows\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - setuptools\n    # udatetime requires gcc and python dev tools so we require the toolchaing to be present\n  run:\n    - python\n\ntest:\n  imports:\n    - udatetime\n\nabout:\n  home: https://github.com/freach/udatetime\n  license: Apache-2.0\n  license_family: Apache\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Fast RFC3339 compliant Python date-time library'\n  description: |\n    Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\n    udatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n  doc_url: https://github.com/freach/udatetime\n  dev_url: https://github.com/freach/udatetime\n\nextra:\n  recipe-maintainers:\n    - daviskirk\n",
 "rendered_recipe": {
  "about": {
   "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nudatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. udatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to udatetime. All datetime objects created by udatetime are timezone-aware. The timezones that udatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
   "dev_url": "https://github.com/freach/udatetime",
   "doc_url": "https://github.com/freach/udatetime",
   "home": "https://github.com/freach/udatetime",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "/home/conda/recipe_root/LICENSE",
   "summary": "Fast RFC3339 compliant Python date-time library"
  },
  "build": {
   "number": "1003",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py37h8f50634_1003"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "daviskirk"
   ]
  },
  "package": {
   "name": "udatetime",
   "version": "0.0.16"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35 h18a2f87_9",
    "binutils_linux-64 2.35 heab0d09_28",
    "gcc_impl_linux-64 7.5.0 hda68d29_13",
    "gcc_linux-64 7.5.0 hf34d7eb_28",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "ld_impl_linux-64 2.35 h769bd43_9",
    "libgcc-ng 9.3.0 h24d8f2e_16",
    "libgomp 9.3.0 h24d8f2e_16",
    "libstdcxx-ng 9.3.0 hdf63c60_16",
    "sysroot_linux-64 2.12 h77966d4_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py37hc8dfbb8_0",
    "ld_impl_linux-64 2.35 h769bd43_9",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.3.0 h24d8f2e_16",
    "libgomp 9.3.0 h24d8f2e_16",
    "libstdcxx-ng 9.3.0 hdf63c60_16",
    "ncurses 6.2 he1b5a44_1",
    "openssl 1.1.1h h516909a_0",
    "python 3.7.8 h6f2ec95_1_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.6.0 py37hc8dfbb8_1",
    "sqlite 3.33.0 h4cf870e_0",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1009"
   ],
   "run": [
    "libgcc-ng >=7.5.0",
    "python >=3.7,<3.8.0a0",
    "python_abi 3.7.* *_cp37m"
   ]
  },
  "source": {
   "fn": "udatetime-0.0.16.tar.gz",
   "sha256": "82d3d7f148f69dd53ba8d913b1c21386263d057dbdf044c799ce76b5a7667427",
   "url": "https://pypi.io/packages/source/u/udatetime/udatetime-0.0.16.tar.gz"
  },
  "test": {
   "imports": [
    "udatetime"
   ]
  }
 },
 "version": "0.0.16"
}