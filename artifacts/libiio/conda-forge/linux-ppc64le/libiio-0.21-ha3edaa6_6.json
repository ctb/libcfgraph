{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.1",
  "description": "libiio is used to interface to the Linux Industrial Input/Output (IIO) Subsystem.\nThe Linux IIO subsystem is intended to provide support for devices that in some\nsense are analog to digital or digital to analog converters (ADCs, DACs). This\nincludes, but is not limited to ADCs, Accelerometers, Gyros, IMUs, Capacitance to\nDigital Converters (CDCs), Pressure Sensors, Color, Light and Proximity Sensors,\nTemperature Sensors, Magnetometers, DACs, DDS (Direct Digital Synthesis), PLLs\n(Phase Locked Loops), Variable/Programmable Gain Amplifiers (VGA, PGA), and RF\ntransceivers. You can use libiio natively on an embedded Linux target (local mode),\nor use libiio to communicate remotely to that same target from a host Linux,\nWindows or MAC over USB or Ethernet or Serial.\n",
  "dev_url": "https://github.com/analogdevicesinc/libiio",
  "doc_url": "https://analogdevicesinc.github.io/libiio/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "libiio",
   "final": true,
   "parent_recipe": {
    "name": "libiio-split",
    "path": "/home/conda/recipe_root",
    "version": "0.21"
   },
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://github.com/analogdevicesinc/libiio",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.1-or-later AND GPL-3.0-or-later",
  "license_family": "LGPL",
  "license_file": [
   "COPYING.txt",
   "COPYING_GPL.txt"
  ],
  "root_pkgs": [
   "tini 0.18.0 h14c3975_1001",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h6eb9509_1010",
   "jupyter_core 4.7.1 py38hf8b3453_0",
   "git 2.30.2 pl5320h09515ac_1",
   "curl 7.76.1 h86bdb50_1",
   "pcre 8.44 hb209c28_0",
   "clyent 1.2.2 py_1",
   "markupsafe 1.1.1 py38h98b8a6f_3",
   "pycosat 0.6.3 py38h98b8a6f_1006",
   "libgomp 9.3.0 hc7a5eb4_18",
   "xz 5.2.5 h6eb9509_1",
   "ld_impl_linux-ppc64le 2.35.1 ha35d02b_2",
   "libnghttp2 1.43.0 h42039ad_0",
   "patchelf 0.11 hb209c28_0",
   "libedit 3.1.20191231 h41a240f_2",
   "conda 4.10.1 py38hf8b3453_0",
   "libiconv 1.16 h6eb9509_0",
   "psutil 5.8.0 py38h98b8a6f_1",
   "idna 2.10 pyh9f0ad1d_0",
   "yaml 0.2.5 h6eb9509_0",
   "sqlite 3.35.5 h961021d_0",
   "expat 2.3.0 h3b9df90_0",
   "su-exec 0.2 h6eb9509_1002",
   "soupsieve 2.0.1 py_1",
   "certifi 2020.12.5 py38hf8b3453_1",
   "tqdm 4.60.0 pyhd8ed1ab_0",
   "python 3.8.10 h82ac395_1_cpython",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "urllib3 1.26.4 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py38h98b8a6f_1001",
   "cffi 1.14.5 py38h0dac770_0",
   "_libgcc_mutex 0.1 conda_forge",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libev 4.33 h6eb9509_1",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "krb5 1.17.2 h2004cfc_0",
   "_openmp_mutex 4.5 1_gnu",
   "ripgrep 12.1.1 h6eb9509_1",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "pysocks 1.7.1 py38hf8b3453_3",
   "libssh2 1.9.0 ha5a9321_6",
   "ncurses 6.2 hea85c5d_4",
   "conda-build 3.21.4 py38hf8b3453_0",
   "py-lief 0.10.1 py38h7f2f977_2",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-package-handling 1.7.3 py38h98b8a6f_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "lzo 2.10 h6eb9509_1000",
   "pytz 2021.1 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h3b9df90_0",
   "libxml2 2.9.10 h5b1524f_4",
   "jinja2 2.11.3 pyh44b312d_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "zstd 1.4.9 h65c4b1a_0",
   "python-libarchive-c 2.9 py38hf8b3453_2",
   "libffi 3.3 hea85c5d_2",
   "libarchive 3.5.1 hb8455fb_1",
   "icu 68.1 hea85c5d_0",
   "python_abi 3.8 1_cp38",
   "wheel 0.36.2 pyhd3deb0d_0",
   "libstdcxx-ng 9.3.0 h22bc1b8_18",
   "patch 2.7.6 h4e0d66e_1002",
   "six 1.16.0 pyh6c4a22f_0",
   "tk 8.6.10 h38e1d09_1",
   "ipython_genutils 0.2.0 py_1",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "ruamel_yaml 0.15.80 py38h98b8a6f_1004",
   "pyrsistent 0.17.3 py38h98b8a6f_2",
   "liblief 0.10.1 ha4af025_2",
   "ca-certificates 2020.12.5 h1084571_0",
   "gettext 0.19.8.1 hf23c357_1005",
   "pyyaml 5.4.1 py38h98b8a6f_0",
   "glob2 0.7 py_0",
   "chardet 4.0.0 py38hf8b3453_1",
   "c-ares 1.17.1 h4e0d66e_1",
   "python-dateutil 2.8.1 py_0",
   "setuptools 49.6.0 py38hf8b3453_3",
   "cryptography 3.4.7 py38h257c4d3_0",
   "readline 8.1 h5c45dff_0",
   "importlib-metadata 4.0.1 py38hf8b3453_0",
   "openssl 1.1.1k h4e0d66e_0",
   "perl 5.32.0 h339bb43_0",
   "libcurl 7.76.1 hf726fd8_1",
   "traitlets 5.0.5 py_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "libgcc-ng 9.3.0 hc7a5eb4_18",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "pip 21.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h4e0d66e_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.9.4 py38h6345821_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.0 py38hf8b3453_0",
   "jq 1.6 h339bb43_1000"
  ],
  "summary": "Library for interfacing with Linux IIO devices",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "libxml2": "2.9",
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "libxml2": {
    "max_pin": "x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "files": [],
 "index": {
  "arch": "ppc64le",
  "build": "ha3edaa6_6",
  "build_number": 6,
  "depends": [
   "libiio-c 0.21 ha3fe54d_6",
   "pylibiio 0.21 py_6"
  ],
  "license": "LGPL-2.1-or-later AND GPL-3.0-or-later",
  "license_family": "LGPL",
  "name": "libiio",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1620939038617,
  "version": "0.21"
 },
 "metadata_version": 1,
 "name": "libiio",
 "raw_recipe": "# This file created by conda-build 3.21.4\n# ------------------------------------------------\n\npackage:\n  name: libiio\n  version: '0.21'\nsource:\n  - patches:\n      - 0002-Python-Do-not-verify-whether-libiio-is-installed-when-cross-compiling.patch\n    sha256: 03d13165cbeb83b036743cbd9a10e336c728da162714f39d13250a3d94305cac\n    url: https://github.com/analogdevicesinc/libiio/archive/v0.21.tar.gz\nbuild:\n  number: 6\n  run_exports:\n    - libiio-c >=0.21,<0.22.0a0\n  string: ha3edaa6_6\nrequirements:\n  build: []\n  run:\n    - libiio-c 0.21 ha3fe54d_6\n    - pylibiio 0.21 py_6\ntest:\n  commands:\n    - iio_info --help\n  imports:\n    - iio\nabout:\n  description: 'libiio is used to interface to the Linux Industrial Input/Output (IIO)\n    Subsystem.\n\n    The Linux IIO subsystem is intended to provide support for devices that in some\n\n    sense are analog to digital or digital to analog converters (ADCs, DACs). This\n\n    includes, but is not limited to ADCs, Accelerometers, Gyros, IMUs, Capacitance\n    to\n\n    Digital Converters (CDCs), Pressure Sensors, Color, Light and Proximity Sensors,\n\n    Temperature Sensors, Magnetometers, DACs, DDS (Direct Digital Synthesis), PLLs\n\n    (Phase Locked Loops), Variable/Programmable Gain Amplifiers (VGA, PGA), and RF\n\n    transceivers. You can use libiio natively on an embedded Linux target (local mode),\n\n    or use libiio to communicate remotely to that same target from a host Linux,\n\n    Windows or MAC over USB or Ethernet or Serial.\n\n    '\n  dev_url: https://github.com/analogdevicesinc/libiio\n  doc_url: https://analogdevicesinc.github.io/libiio/\n  home: https://github.com/analogdevicesinc/libiio\n  license: LGPL-2.1-or-later AND GPL-3.0-or-later\n  license_family: LGPL\n  license_file:\n    - COPYING.txt\n    - COPYING_GPL.txt\n  summary: Library for interfacing with Linux IIO devices\nextra:\n  copy_test_source_files: true\n  feedstock-name: libiio\n  final: true\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "libiio is used to interface to the Linux Industrial Input/Output (IIO) Subsystem.\nThe Linux IIO subsystem is intended to provide support for devices that in some\nsense are analog to digital or digital to analog converters (ADCs, DACs). This\nincludes, but is not limited to ADCs, Accelerometers, Gyros, IMUs, Capacitance to\nDigital Converters (CDCs), Pressure Sensors, Color, Light and Proximity Sensors,\nTemperature Sensors, Magnetometers, DACs, DDS (Direct Digital Synthesis), PLLs\n(Phase Locked Loops), Variable/Programmable Gain Amplifiers (VGA, PGA), and RF\ntransceivers. You can use libiio natively on an embedded Linux target (local mode),\nor use libiio to communicate remotely to that same target from a host Linux,\nWindows or MAC over USB or Ethernet or Serial.\n",
   "dev_url": "https://github.com/analogdevicesinc/libiio",
   "doc_url": "https://analogdevicesinc.github.io/libiio/",
   "home": "https://github.com/analogdevicesinc/libiio",
   "license": "LGPL-2.1-or-later AND GPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": [
    "COPYING.txt",
    "COPYING_GPL.txt"
   ],
   "summary": "Library for interfacing with Linux IIO devices"
  },
  "build": {
   "number": 6,
   "run_exports": [
    "libiio-c >=0.21,<0.22.0a0"
   ],
   "string": "ha3edaa6_6"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "libiio",
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "libiio",
   "version": "0.21"
  },
  "requirements": {
   "build": [],
   "run": [
    "libiio-c 0.21 ha3fe54d_6",
    "pylibiio 0.21 py_6"
   ]
  },
  "source": [
   {
    "patches": [
     "0002-Python-Do-not-verify-whether-libiio-is-installed-when-cross-compiling.patch"
    ],
    "sha256": "03d13165cbeb83b036743cbd9a10e336c728da162714f39d13250a3d94305cac",
    "url": "https://github.com/analogdevicesinc/libiio/archive/v0.21.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "iio_info --help"
   ],
   "imports": [
    "iio"
   ]
  }
 },
 "version": "0.21"
}