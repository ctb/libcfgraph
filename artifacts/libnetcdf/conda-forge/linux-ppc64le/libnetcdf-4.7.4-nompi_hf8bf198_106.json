{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.4",
  "conda_private": false,
  "conda_version": "4.9.0",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "groutr",
    "kmuehlbauer",
    "ocefpaf",
    "mingwandroid",
    "msarahan",
    "beckermr",
    "xylar"
   ]
  },
  "home": "http://www.unidata.ucar.edu/software/netcdf/",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_file": "COPYRIGHT",
  "root_pkgs": [
   "pyrsistent 0.17.3 py38h8e95b53_1",
   "zipp 3.3.1 py_0",
   "psutil 5.7.2 py38h3750d88_1",
   "libxml2 2.9.10 hfa5d076_2",
   "sqlite 3.33.0 h433b40a_1",
   "python-libarchive-c 2.9 py38h88c697e_2",
   "markupsafe 1.1.1 py38h3750d88_2",
   "icu 67.1 hb209c28_0",
   "requests 2.24.0 pyh9f0ad1d_0",
   "libstdcxx-ng 9.3.0 h42fc837_17",
   "libgomp 9.3.0 hb998004_17",
   "zlib 1.2.11 h6eb9509_1010",
   "importlib_metadata 2.0.0 1",
   "cffi 1.14.3 py38hf6601a2_1",
   "idna 2.10 pyh9f0ad1d_0",
   "python_abi 3.8 1_cp38",
   "pcre 8.44 hb209c28_0",
   "chardet 3.0.4 py38h88c697e_1008",
   "ncurses 6.2 hb209c28_2",
   "urllib3 1.25.11 py_0",
   "wheel 0.35.1 pyh9f0ad1d_0",
   "ripgrep 12.1.1 h6eb9509_1",
   "setuptools 49.6.0 py38h88c697e_2",
   "ipython_genutils 0.2.0 py_1",
   "bzip2 1.0.8 h6eb9509_3",
   "liblief 0.10.1 ha4af025_2",
   "libiconv 1.16 h6eb9509_0",
   "patch 2.7.6 h6eb9509_1001",
   "ld_impl_linux-ppc64le 2.35 h78afe3c_9",
   "jupyter_core 4.6.3 py38h32f6830_2",
   "certifi 2020.6.20 py38h88c697e_2",
   "xz 5.2.5 h6eb9509_1",
   "c-ares 1.16.1 h6eb9509_3",
   "libssh2 1.9.0 h0e66b82_5",
   "python-dateutil 2.8.1 py_0",
   "brotlipy 0.7.0 py38h3750d88_1001",
   "curl 7.71.1 hfd09b2d_8",
   "importlib-metadata 2.0.0 py_1",
   "tqdm 4.50.2 pyh9f0ad1d_0",
   "perl 5.26.2 h6eb9509_1006",
   "tk 8.6.10 h151fe60_1",
   "patchelf 0.11 hb209c28_0",
   "ruamel_yaml 0.15.80 py38h3750d88_1003",
   "libedit 3.1.20191231 h41a240f_2",
   "soupsieve 2.0.1 py_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "openssl 1.1.1h h6eb9509_0",
   "pysocks 1.7.1 py38h88c697e_2",
   "expat 2.2.9 hb209c28_2",
   "clyent 1.2.2 py_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "_libgcc_mutex 0.1 conda_forge",
   "yaml 0.2.5 h6eb9509_0",
   "cryptography 3.1.1 py38hf02fc87_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "libarchive 3.4.3 h75da85a_0",
   "pytz 2020.1 pyh9f0ad1d_0",
   "libnghttp2 1.41.0 h0eba5ba_2",
   "_openmp_mutex 4.5 1_gnu",
   "nbformat 5.0.8 py_0",
   "python 3.8.6 hb656b93_0_cpython",
   "anaconda-client 1.7.2 py_0",
   "traitlets 5.0.5 py_0",
   "libcurl 7.71.1 he8386ad_8",
   "conda-package-handling 1.7.2 py38h3750d88_0",
   "jsonschema 3.2.0 py_2",
   "pyopenssl 19.1.0 py_1",
   "pkginfo 1.6.0 pyh9f0ad1d_0",
   "lzo 2.10 h6eb9509_1000",
   "six 1.15.0 pyh9f0ad1d_0",
   "conda-build 3.20.4 py38h88c697e_1",
   "tini 0.18.0 h14c3975_1001",
   "conda 4.9.0 py38h88c697e_1",
   "su-exec 0.2 h6eb9509_1002",
   "pycosat 0.6.3 py38h3750d88_1005",
   "libffi 3.2.1 hb209c28_1007",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "attrs 20.2.0 pyh9f0ad1d_0",
   "libgcc-ng 9.3.0 hb998004_17",
   "lz4-c 1.9.2 hb209c28_3",
   "libev 4.33 h6eb9509_1",
   "krb5 1.17.1 hc2f0735_3",
   "git 2.29.0 pl5262hb9df0df_0",
   "readline 8.0 h41a240f_2",
   "glob2 0.7 py_0",
   "gettext 0.19.8.1 h731f51d_1004",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "pip 20.2.4 py_0",
   "pyyaml 5.3.1 py38h3750d88_1",
   "zstd 1.4.5 h1dc757f_2",
   "py-lief 0.10.1 py38h7f2f977_2",
   "jq 1.6 h14c3975_1000",
   "click 7.1.2 pyh9f0ad1d_0",
   "shyaml 0.6.1 py_0",
   "conda-forge-ci-setup 3.4.1 py38h509f808_1",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.3 h6eb9509_0"
  ],
  "summary": "Libraries and data formats that support array-oriented scientific data",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "bzip2": "1",
  "c_compiler": "gcc",
  "c_compiler_version": "8",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "curl": "7",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "hdf4": "4.2",
  "hdf5": "1.10.6",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "jpeg": "9",
  "lua": "5",
  "mpi": "nompi",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "bzip2": {
    "max_pin": "x"
   },
   "curl": {
    "max_pin": "x"
   },
   "hdf4": {
    "max_pin": "x.x"
   },
   "jpeg": {
    "max_pin": "x"
   },
   "mpich": "x.x",
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zlib": "1.2"
 },
 "files": [
  "bin/nc-config",
  "bin/nccopy",
  "bin/ncdump",
  "bin/ncgen",
  "bin/ncgen3",
  "include/netcdf.h",
  "include/netcdf_aux.h",
  "include/netcdf_dispatch.h",
  "include/netcdf_filter.h",
  "include/netcdf_mem.h",
  "include/netcdf_meta.h",
  "lib/cmake/netCDF/netCDFConfig.cmake",
  "lib/cmake/netCDF/netCDFConfigVersion.cmake",
  "lib/cmake/netCDF/netCDFTargets-release.cmake",
  "lib/cmake/netCDF/netCDFTargets.cmake",
  "lib/libnetcdf.a",
  "lib/libnetcdf.settings",
  "lib/libnetcdf.so",
  "lib/libnetcdf.so.18",
  "lib/pkgconfig/netcdf.pc",
  "share/man/man1/nccopy.1",
  "share/man/man1/ncdump.1",
  "share/man/man1/ncgen.1",
  "share/man/man1/ncgen3.1"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "nompi_hf8bf198_106",
  "build_number": 106,
  "depends": [
   "bzip2 >=1.0.8,<2.0a0",
   "curl >=7.71.1,<8.0a0",
   "hdf4 >=4.2.13,<4.3.0a0",
   "hdf5 * nompi_*",
   "hdf5 >=1.10.6,<1.10.7.0a0",
   "jpeg >=9d,<10a",
   "libgcc-ng >=8.4.0",
   "zlib >=1.2.11,<1.3.0a0"
  ],
  "license": "MIT",
  "name": "libnetcdf",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1603310553967,
  "version": "4.7.4"
 },
 "metadata_version": 1,
 "name": "libnetcdf",
 "raw_recipe": "{% set version = \"4.7.4\" %}\n{% set build = 6 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize nompi via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: libnetcdf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Unidata/netcdf-c/archive/v{{ version }}.tar.gz\n  sha256: 99930ad7b3c4c1a8e8831fb061cb02b2170fc8e5ccaeda733bd99c3b9d31666b\n  patches:\n    - patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch\n    - patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch\n    - patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch\n    - patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch\n    - patches/0009-topsrcdir.patch\n    - patches/prevent_MS_runtime_libs_being_installed_again.patch  # [win]\n    - patches/strdup.patch\n    - patches/do_not_use_16_processes_in_tests.patch  # [ppc64le]\n    - patches/fix-474-for-new-curl.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win and vc<14]\n  {% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  # add build string so packages can depend on\n  # mpi or nompi variants\n  # dependencies:\n  # `PKG_NAME * mpi_mpich_*` for mpich\n  # `PKG_NAME * mpi_*` for any mpi\n  # `PKG_NAME * nompi_*` for no mpi\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n\n  # mpi builds require the right mpi\n  # non-mpi builds *do not* appear to require non-mpi builds\n  # at least not always\n\n  {% if mpi != 'nompi' %}\n  {% set build_pin = mpi_prefix + '_*' %}\n  {% else %}\n  {% set build_pin = '' %}\n  {% endif %}\n\n  run_exports:\n    #   https://abi-laboratory.pro/tracker/timeline/netcdf/\n    - {{ pin_subpackage('libnetcdf', max_pin='x.x.x.x') }} {{ build_pin }}\n\nrequirements:\n  build:\n    - cmake\n    - make  # [not win]\n    - pkg-config  # [not win]\n    - {{ compiler('c') }}\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - msinttypes  # [win and vc<14]\n    - bzip2\n    - curl\n    - zlib\n    # hdf4 doesn't seem to be well tested for Little Endian Arches\n    # I don't think it is wise to block on that in 2020\n    - hdf4  # [not aarch64]\n    # without this repeat reference, conda-smithy doesn't pin correctly\n    - hdf5\n    - hdf5 * {{ mpi_prefix }}_*\n    - jpeg\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - bzip2\n    - curl\n    - zlib\n    - hdf4  # [not aarch64]\n    - hdf5 * {{ mpi_prefix }}_*\n    - jpeg\n    # Curl should be pulling this... Investigate it later.\n    - libssh2  # [win]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libnetcdf.a  # [not win]\n    - test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}  # [not win]\n    - nc-config --all  # [not win]\n\nabout:\n  home: http://www.unidata.ucar.edu/software/netcdf/\n  license: MIT\n  license_file: COPYRIGHT\n  summary: Libraries and data formats that support array-oriented scientific data\n\nextra:\n  recipe-maintainers:\n    - groutr\n    - kmuehlbauer\n    - ocefpaf\n    - mingwandroid\n    - msarahan\n    - beckermr\n    - xylar\n",
 "rendered_recipe": {
  "about": {
   "home": "http://www.unidata.ucar.edu/software/netcdf/",
   "license": "MIT",
   "license_file": "COPYRIGHT",
   "summary": "Libraries and data formats that support array-oriented scientific data"
  },
  "build": {
   "number": "106",
   "run_exports": [
    "libnetcdf >=4.7.4,<4.7.5.0a0"
   ],
   "string": "nompi_hf8bf198_106"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "beckermr",
    "groutr",
    "kmuehlbauer",
    "mingwandroid",
    "msarahan",
    "ocefpaf",
    "xylar"
   ]
  },
  "package": {
   "name": "libnetcdf",
   "version": "4.7.4"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.35 h9026189_9",
    "binutils_linux-ppc64le 2.35 hd8189f2_29",
    "bzip2 1.0.8 h6eb9509_3",
    "c-ares 1.16.1 h6eb9509_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "cmake 3.18.2 ha09bb35_0",
    "expat 2.2.9 hb209c28_2",
    "gcc_impl_linux-ppc64le 8.4.0 h37540d7_17",
    "gcc_linux-ppc64le 8.4.0 h28d0253_29",
    "kernel-headers_linux-ppc64le 3.10.0 hbe0c576_10",
    "krb5 1.17.1 hc2f0735_3",
    "ld_impl_linux-ppc64le 2.35 h78afe3c_9",
    "libcurl 7.71.1 he8386ad_8",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-devel_linux-ppc64le 8.4.0 hbb93445_17",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgomp 9.3.0 hb998004_17",
    "libnghttp2 1.41.0 h0eba5ba_2",
    "libssh2 1.9.0 h0e66b82_5",
    "libstdcxx-ng 9.3.0 h42fc837_17",
    "libuv 1.40.0 hf817498_0",
    "make 4.3 hf817498_1",
    "ncurses 6.2 hb209c28_2",
    "openssl 1.1.1h h6eb9509_0",
    "pkg-config 0.29.2 h6eb9509_1008",
    "rhash 1.3.6 h6eb9509_1001",
    "sysroot_linux-ppc64le 2.17 h8b29623_10",
    "tk 8.6.10 h151fe60_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h6eb9509_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h6eb9509_3",
    "c-ares 1.16.1 h6eb9509_3",
    "ca-certificates 2020.6.20 hecda079_0",
    "curl 7.71.1 hfd09b2d_8",
    "hdf4 4.2.13 h9a582f1_3",
    "hdf5 1.10.6 nompi_h9cca772_1110",
    "jpeg 9d h6eb9509_0",
    "krb5 1.17.1 hc2f0735_3",
    "libcurl 7.71.1 he8386ad_8",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-ng 9.3.0 hb998004_17",
    "libgfortran-ng 9.3.0 hf44303d_17",
    "libgfortran5 9.3.0 hf44303d_17",
    "libgomp 9.3.0 hb998004_17",
    "libnghttp2 1.41.0 h0eba5ba_2",
    "libssh2 1.9.0 h0e66b82_5",
    "libstdcxx-ng 9.3.0 h42fc837_17",
    "ncurses 6.2 hb209c28_2",
    "openssl 1.1.1h h6eb9509_0",
    "tk 8.6.10 h151fe60_1",
    "zlib 1.2.11 h6eb9509_1010"
   ],
   "run": [
    "bzip2 >=1.0.8,<2.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "curl >=7.71.1,<8.0a0",
    "hdf4 >=4.2.13,<4.3.0a0",
    "hdf4 >=4.2.13,<4.3.0a0",
    "hdf5 * nompi_*",
    "hdf5 >=1.10.6,<1.10.7.0a0",
    "jpeg >=9d,<10a",
    "jpeg >=9d,<10a",
    "libgcc-ng >=8.4.0",
    "zlib >=1.2.11,<1.3.0a0",
    "zlib >=1.2.11,<1.3.0a0"
   ]
  },
  "source": {
   "patches": [
    "patches/0003-Add-find_package-Threads-REQUIRED-to-CMakeLists.txt.patch",
    "patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch",
    "patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch",
    "patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch",
    "patches/0009-topsrcdir.patch",
    "patches/do_not_use_16_processes_in_tests.patch",
    "patches/fix-474-for-new-curl.patch",
    "patches/strdup.patch"
   ],
   "sha256": "99930ad7b3c4c1a8e8831fb061cb02b2170fc8e5ccaeda733bd99c3b9d31666b",
   "url": "https://github.com/Unidata/netcdf-c/archive/v4.7.4.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libnetcdf.a",
    "test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}",
    "nc-config --all"
   ]
  }
 },
 "version": "4.7.4"
}