{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "Code for Anisotropies in the Microwave Background\nby Antony Lewis and Anthony Challinor\n\nFeatures:\n  - Support for closed, open and flat models\n  - Scalar, vector and tensor modes including polarization\n  - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n  - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n  - Relatively structured and easily extendable Fortran 90 code\n  - Efficient support for massive neutrinos\n  - Absolute computations from correctly normalized initial power spectra\n  - Computation of lensed CMB power spectra and lensing potential power spectrum\n  - Internally parallelized for fast execution on multi-processor machines\n  - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n  - Constant equation of state quintessence (or variable PPF)\n  - Support for general correlated adiabatic/isocurvature initial conditions\n  - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n  - Integrated interface to HALOFIT for non-linear fitting\n  - support for arbitrary neutrino mass splittings\n  - For 21cm, lensing and number count power spectra see this extension\n  - For perturbed recombination and effect on small-scale baryons see this extension\n  - Calculation of local primordial and CMB lensing bispectra\n  - Easy-to-use Python wrapper\n",
  "dev_url": "https://github.com/cmbant/CAMB",
  "doc_url": "https://camb.info/readme.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "beckermr",
    "cmbant"
   ]
  },
  "home": "https://camb.info/",
  "identifiers": [],
  "keywords": [],
  "license": "modified LGPL",
  "license_family": "LGPL",
  "license_file": "/home/conda/recipe_root/LICENSE",
  "root_pkgs": [
   "wheel 0.36.2 pyhd3deb0d_0",
   "setuptools 49.6.0 py38h578d9bd_3",
   "clyent 1.2.2 py_1",
   "ripgrep 12.1.1 h516909a_1",
   "libgcc-ng 9.3.0 h2828fa1_18",
   "conda 4.9.2 py38h578d9bd_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "libiconv 1.16 h516909a_0",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "liblief 0.10.1 he1b5a44_2",
   "requests 2.25.1 pyhd3deb0d_0",
   "readline 8.0 he28a2e2_2",
   "cffi 1.14.5 py38ha65f79e_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "urllib3 1.26.3 pyhd8ed1ab_0",
   "jsonschema 3.2.0 py_2",
   "curl 7.71.1 he644dc0_8",
   "soupsieve 2.0.1 py_1",
   "zstd 1.4.8 ha95c52a_1",
   "_openmp_mutex 4.5 1_gnu",
   "certifi 2020.12.5 py38h578d9bd_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "xz 5.2.5 h516909a_1",
   "git 2.30.1 pl5320h014a29a_0",
   "anaconda-client 1.7.2 py_0",
   "python-libarchive-c 2.9 py38h578d9bd_2",
   "libgomp 9.3.0 h2828fa1_18",
   "attrs 20.3.0 pyhd3deb0d_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "gettext 0.19.8.1 h0b5b191_1005",
   "pcre 8.44 he1b5a44_0",
   "yaml 0.2.5 h516909a_0",
   "jinja2 2.11.3 pyh44b312d_0",
   "markupsafe 1.1.1 py38h497a2fe_3",
   "ncurses 6.2 h58526e2_4",
   "patch 2.7.6 h7f98852_1002",
   "libssh2 1.9.0 hab1572f_5",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "su-exec 0.2 h516909a_1002",
   "libstdcxx-ng 9.3.0 h6de172a_18",
   "tqdm 4.56.2 pyhd8ed1ab_0",
   "python 3.8.6 hffdb5ce_5_cpython",
   "ipython_genutils 0.2.0 py_1",
   "conda-package-handling 1.7.2 py38h8df0ef7_0",
   "libev 4.33 h516909a_1",
   "chardet 4.0.0 py38h578d9bd_1",
   "libxml2 2.9.10 h72842e0_3",
   "zlib 1.2.11 h516909a_1010",
   "_libgcc_mutex 0.1 conda_forge",
   "bzip2 1.0.8 h7f98852_4",
   "pysocks 1.7.1 py38h578d9bd_3",
   "tk 8.6.10 h21135ba_1",
   "psutil 5.8.0 py38h497a2fe_1",
   "zipp 3.4.0 py_0",
   "libcurl 7.71.1 hcdd3856_8",
   "pip 21.0.1 pyhd8ed1ab_0",
   "py-lief 0.10.1 py38h348cfbe_2",
   "python_abi 3.8 1_cp38",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "perl 5.32.0 h36c2ea0_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "patchelf 0.11 he1b5a44_0",
   "ld_impl_linux-64 2.35.1 hea4e1c9_2",
   "sqlite 3.34.0 h74cdb3f_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "libnghttp2 1.43.0 h812cca2_0",
   "ca-certificates 2020.12.5 ha878542_0",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "idna 2.10 pyh9f0ad1d_0",
   "c-ares 1.17.1 h36c2ea0_0",
   "python-dateutil 2.8.1 py_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "libarchive 3.5.1 h3f442fb_1",
   "openssl 1.1.1j h7f98852_0",
   "cryptography 3.4.4 py38h3e25421_0",
   "expat 2.2.10 h9c3ff4c_0",
   "importlib-metadata 3.4.0 py38h578d9bd_0",
   "libffi 3.3 h58526e2_2",
   "traitlets 5.0.5 py_0",
   "lzo 2.10 h516909a_1000",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "six 1.15.0 pyh9f0ad1d_0",
   "icu 68.1 h58526e2_0",
   "tini 0.18.0 h14c3975_1001",
   "krb5 1.17.2 h926e7f8_0",
   "glob2 0.7 py_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.8.0 py38h7bc8238_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "jq 1.6 h36c2ea0_1000",
   "oniguruma 6.9.3 h36c2ea0_0"
  ],
  "summary": "Code for Anisotropies in the Microwave Background",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "9",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cdt_name",
    "docker_image"
   ],
   [
    "c_compiler_version",
    "fortran_compiler_version"
   ]
  ]
 },
 "files": [
  "bin/camb",
  "lib/python3.8/site-packages/camb-1.3.2-py3.8.egg-info/PKG-INFO",
  "lib/python3.8/site-packages/camb-1.3.2-py3.8.egg-info/not-zip-safe",
  "lib/python3.8/site-packages/camb/HighLExtrapTemplate_lenspotentialCls.dat",
  "lib/python3.8/site-packages/camb/PArthENoPE_880.2_marcucci.dat",
  "lib/python3.8/site-packages/camb/PArthENoPE_880.2_standard.dat",
  "lib/python3.8/site-packages/camb/PRIMAT_Yp_DH_Error.dat",
  "lib/python3.8/site-packages/camb/__init__.py",
  "lib/python3.8/site-packages/camb/_command_line.py",
  "lib/python3.8/site-packages/camb/_compilers.py",
  "lib/python3.8/site-packages/camb/_config.py",
  "lib/python3.8/site-packages/camb/baseconfig.py",
  "lib/python3.8/site-packages/camb/bbn.py",
  "lib/python3.8/site-packages/camb/bispectrum.py",
  "lib/python3.8/site-packages/camb/camb.py",
  "lib/python3.8/site-packages/camb/camblib.so",
  "lib/python3.8/site-packages/camb/constants.py",
  "lib/python3.8/site-packages/camb/correlations.py",
  "lib/python3.8/site-packages/camb/dark_energy.py",
  "lib/python3.8/site-packages/camb/emission_angle.py",
  "lib/python3.8/site-packages/camb/initialpower.py",
  "lib/python3.8/site-packages/camb/mathutils.py",
  "lib/python3.8/site-packages/camb/model.py",
  "lib/python3.8/site-packages/camb/nonlinear.py",
  "lib/python3.8/site-packages/camb/postborn.py",
  "lib/python3.8/site-packages/camb/recombination.py",
  "lib/python3.8/site-packages/camb/reionization.py",
  "lib/python3.8/site-packages/camb/results.py",
  "lib/python3.8/site-packages/camb/sources.py",
  "lib/python3.8/site-packages/camb/symbolic.py",
  "lib/python3.8/site-packages/camb/tests/__init__.py",
  "lib/python3.8/site-packages/camb/tests/camb_test.py",
  "lib/python3.8/site-packages/camb/tests/hmcode_test.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38hb99dbf8_0",
  "build_number": 0,
  "depends": [
   "gfortran_linux-64 9.*",
   "libgcc-ng >=9.3.0",
   "libgfortran-ng",
   "libgfortran5 >=9.3.0",
   "mock",
   "numpy",
   "python >=3.8,<3.9.0a0",
   "python_abi 3.8.* *_cp38",
   "scipy >=1.0",
   "setuptools",
   "six",
   "sympy >=1.0"
  ],
  "license": "modified LGPL",
  "license_family": "LGPL",
  "name": "camb",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1615830483145,
  "version": "1.3.2"
 },
 "metadata_version": 1,
 "name": "camb",
 "raw_recipe": "{% set name = \"camb\" %}\n{% set version = \"1.3.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cmbant/CAMB/archive/{{ version }}.tar.gz\n  sha256: 38e49aa1e5b856ff2efd909490fde60682287811703fabf418afbc81347cd0c2\n\nbuild:\n  number: 0\n  skip: true  # [py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - m2w64-toolchain  # [win]\n    - git  # [not win]\n    - m2-git  # [win]\n    - make  # [not win]\n    - m2-make  # [win]\n    - python\n    - setuptools\n    - pip\n  host:\n    - python\n    - pip\n    - setuptools\n  run:\n    - python\n    - numpy\n    - six  # TODO: remove for next update\n    - mock\n    - setuptools  # for an import of pkg_resources\n    - sympy >=1.0\n    - scipy >=1.0\n    - {{ compiler('fortran') }}  # [not win]\n\ntest:\n  imports:\n    - camb\n  files:\n    - params.ini\n    - test_pycamb.py\n    - run_test.sh  # [win]\n\nabout:\n  home: https://camb.info/\n  license: modified LGPL\n  license_family: LGPL\n  license_file: {{ RECIPE_DIR }}/LICENSE\n  summary: Code for Anisotropies in the Microwave Background\n  description: |\n    Code for Anisotropies in the Microwave Background\n    by Antony Lewis and Anthony Challinor\n\n    Features:\n      - Support for closed, open and flat models\n      - Scalar, vector and tensor modes including polarization\n      - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n      - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n      - Relatively structured and easily extendable Fortran 90 code\n      - Efficient support for massive neutrinos\n      - Absolute computations from correctly normalized initial power spectra\n      - Computation of lensed CMB power spectra and lensing potential power spectrum\n      - Internally parallelized for fast execution on multi-processor machines\n      - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n      - Constant equation of state quintessence (or variable PPF)\n      - Support for general correlated adiabatic/isocurvature initial conditions\n      - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n      - Integrated interface to HALOFIT for non-linear fitting\n      - support for arbitrary neutrino mass splittings\n      - For 21cm, lensing and number count power spectra see this extension\n      - For perturbed recombination and effect on small-scale baryons see this extension\n      - Calculation of local primordial and CMB lensing bispectra\n      - Easy-to-use Python wrapper\n  doc_url: https://camb.info/readme.html\n  dev_url: https://github.com/cmbant/CAMB\n\nextra:\n  recipe-maintainers:\n    - beckermr\n    - cmbant\n",
 "rendered_recipe": {
  "about": {
   "description": "Code for Anisotropies in the Microwave Background\nby Antony Lewis and Anthony Challinor\n\nFeatures:\n  - Support for closed, open and flat models\n  - Scalar, vector and tensor modes including polarization\n  - Output Cl, matter transfer functions, matter power spectrum and \u03c38\n  - Fast computation to ~0.3-0.1% accuracy, with controllable accuracy level\n  - Relatively structured and easily extendable Fortran 90 code\n  - Efficient support for massive neutrinos\n  - Absolute computations from correctly normalized initial power spectra\n  - Computation of lensed CMB power spectra and lensing potential power spectrum\n  - Internally parallelized for fast execution on multi-processor machines\n  - Use CAMB with CosmoMC for Monte-Carlo parameter estimation\n  - Constant equation of state quintessence (or variable PPF)\n  - Support for general correlated adiabatic/isocurvature initial conditions\n  - Accurate full-sky calculation of lensed power spectra (astro-ph/0502425)\n  - Integrated interface to HALOFIT for non-linear fitting\n  - support for arbitrary neutrino mass splittings\n  - For 21cm, lensing and number count power spectra see this extension\n  - For perturbed recombination and effect on small-scale baryons see this extension\n  - Calculation of local primordial and CMB lensing bispectra\n  - Easy-to-use Python wrapper\n",
   "dev_url": "https://github.com/cmbant/CAMB",
   "doc_url": "https://camb.info/readme.html",
   "home": "https://camb.info/",
   "license": "modified LGPL",
   "license_family": "LGPL",
   "license_file": "/home/conda/recipe_root/LICENSE",
   "summary": "Code for Anisotropies in the Microwave Background"
  },
  "build": {
   "number": "0",
   "string": "py38hb99dbf8_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "beckermr",
    "cmbant"
   ]
  },
  "package": {
   "name": "camb",
   "version": "1.3.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35.1 h193b22a_2",
    "binutils_linux-64 2.35 h67ddf6f_30",
    "c-ares 1.17.1 h7f98852_1",
    "ca-certificates 2020.12.5 ha878542_0",
    "certifi 2020.12.5 py38h578d9bd_1",
    "curl 7.75.0 h979ede3_0",
    "expat 2.2.10 h9c3ff4c_0",
    "gcc_impl_linux-64 9.3.0 h70c0ae5_18",
    "gcc_linux-64 9.3.0 hf25ea35_30",
    "gettext 0.19.8.1 h0b5b191_1005",
    "gfortran_impl_linux-64 9.3.0 hc4a2995_18",
    "gfortran_linux-64 9.3.0 hdc58fab_30",
    "git 2.30.2 pl5320h6697202_0",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "krb5 1.17.2 h926e7f8_0",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libcurl 7.75.0 hc4aaa36_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libffi 3.3 h58526e2_2",
    "libgcc-devel_linux-64 9.3.0 h7864c58_18",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgfortran5 9.3.0 hff62375_18",
    "libgomp 9.3.0 h2828fa1_18",
    "libiconv 1.16 h516909a_0",
    "libnghttp2 1.43.0 h812cca2_0",
    "libssh2 1.9.0 ha56f1ee_6",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "make 4.3 hd18ef5c_1",
    "ncurses 6.2 h58526e2_4",
    "openssl 1.1.1j h7f98852_0",
    "pcre 8.44 he1b5a44_0",
    "perl 5.32.0 h36c2ea0_0",
    "pip 21.0.1 pyhd8ed1ab_0",
    "python 3.8.8 hffdb5ce_0_cpython",
    "python_abi 3.8 1_cp38",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.6.0 py38h578d9bd_3",
    "sqlite 3.34.0 h74cdb3f_0",
    "sysroot_linux-64 2.12 h77966d4_13",
    "tk 8.6.10 h21135ba_1",
    "wheel 0.36.2 pyhd3deb0d_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.12.5 ha878542_0",
    "certifi 2020.12.5 py38h578d9bd_1",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libffi 3.3 h58526e2_2",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgfortran-ng 9.3.0 hff62375_18",
    "libgfortran5 9.3.0 hff62375_18",
    "libgomp 9.3.0 h2828fa1_18",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "ncurses 6.2 h58526e2_4",
    "openssl 1.1.1j h7f98852_0",
    "pip 21.0.1 pyhd8ed1ab_0",
    "python 3.8.8 hffdb5ce_0_cpython",
    "python_abi 3.8 1_cp38",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.6.0 py38h578d9bd_3",
    "sqlite 3.34.0 h74cdb3f_0",
    "tk 8.6.10 h21135ba_1",
    "wheel 0.36.2 pyhd3deb0d_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "run": [
    "gfortran_linux-64 9.*",
    "libgcc-ng >=9.3.0",
    "libgfortran-ng",
    "libgfortran5 >=9.3.0",
    "mock",
    "numpy",
    "python >=3.8,<3.9.0a0",
    "python_abi 3.8.* *_cp38",
    "scipy >=1.0",
    "setuptools",
    "six",
    "sympy >=1.0"
   ]
  },
  "source": {
   "sha256": "38e49aa1e5b856ff2efd909490fde60682287811703fabf418afbc81347cd0c2",
   "url": "https://github.com/cmbant/CAMB/archive/1.3.2.tar.gz"
  },
  "test": {
   "files": [
    "params.ini",
    "test_pycamb.py"
   ],
   "imports": [
    "camb"
   ]
  }
 },
 "version": "1.3.2"
}