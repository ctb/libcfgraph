{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\nmatrix-matrix operations in which at least one operand is a sparse matrix.\nThe cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\nepilogue, and matrix characteristics, including memory layout,\nalignment, and data types.\nLicense Agreements:- The packages are governed by the NVIDIA cuSPARSELt\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\nhttps://docs.nvidia.com/cuda/cusparselt/license.html\n",
  "dev_url": "https://developer.nvidia.com/cusparselt/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cusparselt/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mnicely",
    "leofang"
   ]
  },
  "home": "https://developer.nvidia.com/cusparse",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
  "license_file": "LICENSE.txt",
  "license_url": "https://docs.nvidia.com/cuda/cusparselt/license.html",
  "root_pkgs": [
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "conda 4.10.3 py38h578d9bd_2",
   "tini 0.18.0 h14c3975_1001",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "cffi 1.14.6 py38h3931269_1",
   "xz 5.2.5 h516909a_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "libnghttp2 1.43.0 h812cca2_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "yaml 0.2.5 h516909a_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "ipython_genutils 0.2.0 py_1",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "expat 2.4.1 h9c3ff4c_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "idna 3.1 pyhd3deb0d_0",
   "requests 2.26.0 pyhd8ed1ab_0",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "libgomp 11.2.0 h1d223b6_9",
   "krb5 1.19.2 hcc1bbae_2",
   "jupyter_core 4.8.1 py38h578d9bd_0",
   "traitlets 5.1.0 pyhd8ed1ab_0",
   "libcurl 7.79.1 h2574ce0_1",
   "setuptools 58.0.4 py38h578d9bd_2",
   "libstdcxx-ng 11.2.0 he4da1e4_9",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "pcre2 10.37 h032f7d1_0",
   "perl 5.32.1 0_h7f98852_perl5",
   "gettext 0.19.8.1 h73d1719_1008",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "lzo 2.10 h516909a_1000",
   "sqlite 3.36.0 h9cd32fc_2",
   "icu 68.1 h58526e2_0",
   "python 3.8.12 hb7a2778_1_cpython",
   "tk 8.6.11 h27826a3_1",
   "libarchive 3.5.2 hccf745f_1",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "libiconv 1.16 h516909a_0",
   "ncurses 6.2 h58526e2_4",
   "bzip2 1.0.8 h7f98852_4",
   "clyent 1.2.2 py_1",
   "six 1.16.0 pyh6c4a22f_0",
   "importlib-metadata 4.8.1 py38h578d9bd_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "zlib 1.2.11 h36c2ea0_1011",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "libxml2 2.9.12 h72842e0_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "glob2 0.7 py_0",
   "patchelf 0.13 h58526e2_0",
   "py-lief 0.11.5 py38h709712a_0",
   "soupsieve 2.0.1 py_1",
   "_libgcc_mutex 0.1 conda_forge",
   "libgcc-ng 11.2.0 h1d223b6_9",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "pyyaml 5.4.1 py38h497a2fe_1",
   "zstd 1.5.0 ha95c52a_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "python_abi 3.8 2_cp38",
   "filelock 3.1.0 pyhd8ed1ab_1",
   "ca-certificates 2021.5.30 ha878542_0",
   "ripgrep 13.0.0 habb4d0f_1",
   "chardet 4.0.0 py38h578d9bd_1",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "git 2.33.0 pl5321hc30692c_1",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "libev 4.33 h516909a_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "libffi 3.4.2 h9c3ff4c_4",
   "patch 2.7.6 h7f98852_1002",
   "su-exec 0.2 h516909a_1002",
   "certifi 2021.5.30 py38h578d9bd_0",
   "openssl 1.1.1l h7f98852_0",
   "pip 21.2.4 pyhd8ed1ab_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "pysocks 1.7.1 py38h578d9bd_3",
   "curl 7.79.1 h2574ce0_1",
   "c-ares 1.17.2 h7f98852_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-ci-setup 3.11.1 py38h904d315_0"
  ],
  "summary": "Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cudnn": "undefined",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "quay.io/condaforge/linux-anvil-cuda:11.2",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ],
   [
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/.cusparselt-post-link.sh",
  "include/cusparseLt.h",
  "lib/libcusparseLt.so",
  "lib/libcusparseLt.so.0",
  "lib/libcusparseLt.so.0.2.0.1"
 ],
 "index": {
  "arch": "x86_64",
  "build": "hdc17891_0",
  "build_number": 0,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17,<3.0.a0",
   "_openmp_mutex >=4.5",
   "cudatoolkit >=11.2,<12",
   "libgcc-ng >=3.0",
   "libstdcxx-ng >=3.4"
  ],
  "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
  "name": "cusparselt",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1633220564609,
  "version": "0.2.0.1"
 },
 "metadata_version": 1,
 "name": "cusparselt",
 "raw_recipe": "{% set version = \"0.2.0\" %}\n{% set patch_version = \"1\" %}\n\npackage:\n  name: cusparselt\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-linux-x86_64-{{ version }}.{{ patch_version }}.tar.gz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-linux-sbsa-{{ version }}.{{ patch_version }}.tar.gz  # [aarch64]\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-windows-x86_64-{{ version }}.{{ patch_version }}.zip  # [win64]\n  sha256: a2d724d44fc20ebd1ee481aee444cef0a803338c69208f7c70e2556920705541  # [linux64]\n  sha256: 09a0d5afbc804ff2dabb65c012a59352a22a1596223929e4fd35e602c0df7b4c  # [aarch64]\n  sha256: 6379fddb2b8922a62510781b1a478986cf3dbdb8026fcd121c49e929ccf192c2  # [win64]\n\nbuild:\n  number: 0\n  skip: True  # [(not linux64 and not win64 and not (aarch64 and arm_variant_type == \"sbsa\")) or cuda_compiler_version != \"11.2\"]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in the docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                                # [unix]\n    - cp -r include/* $PREFIX/include/                                        # [unix]\n    - mkdir -p $PREFIX/lib                                                    # [unix]\n    - mv lib64/libcusparseLt.so* $PREFIX/lib/                                 # [unix]\n\n    - copy include\\\\cusparseLt.h %LIBRARY_INC%\\\\                           # [win64]\n    - copy lib\\\\cusparseLt.dll %LIBRARY_BIN%\\\\                             # [win64]\n    - copy lib\\\\cusparseLt.lib %LIBRARY_LIB%\\\\                             # [win64]\n  ignore_run_exports_from:\n    - {{ compiler('c') }}    # [linux]\n    - {{ compiler('cuda') }}\n  run_exports:\n    - {{ pin_subpackage('cusparselt', exact=True) }}\n  missing_dso_whitelist:\n    - '*/libgomp.*'  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    - libgomp  # [linux]\n  run:\n    # Only GCC_3.0 or older symbols present\n    - libgcc-ng >=3.0     # [linux]\n    # Only GLIBCXX_3.4 or older symbols present\n    - libstdcxx-ng >=3.4  # [linux]\n    - cudatoolkit >=11.2,<12\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain\n    - cudatoolkit 11.2\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cusparse\n  license: LicenseRef-cuSPARSELt-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cusparselt/license.html\n  license_file: LICENSE.txt\n  summary: \"Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs\"\n  description: |\n    NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\n    matrix-matrix operations in which at least one operand is a sparse matrix.\n    The cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\n    epilogue, and matrix characteristics, including memory layout,\n    alignment, and data types.\n    License Agreements:- The packages are governed by the NVIDIA cuSPARSELt\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\n    https://docs.nvidia.com/cuda/cusparselt/license.html\n  doc_url: https://docs.nvidia.com/cuda/cusparselt/index.html\n  dev_url: https://developer.nvidia.com/cusparselt/downloads\n\nextra:\n  recipe-maintainers:\n    - mnicely\n    - leofang\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\nmatrix-matrix operations in which at least one operand is a sparse matrix.\nThe cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\nepilogue, and matrix characteristics, including memory layout,\nalignment, and data types.\nLicense Agreements:- The packages are governed by the NVIDIA cuSPARSELt\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\nhttps://docs.nvidia.com/cuda/cusparselt/license.html\n",
   "dev_url": "https://developer.nvidia.com/cusparselt/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cusparselt/index.html",
   "home": "https://developer.nvidia.com/cusparse",
   "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
   "license_file": "LICENSE.txt",
   "license_url": "https://docs.nvidia.com/cuda/cusparselt/license.html",
   "summary": "Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports_from": [
    "gcc_linux-64 7.*",
    "nvcc_linux-64 11.2.*"
   ],
   "missing_dso_whitelist": [
    "*/libgomp.*"
   ],
   "number": "0",
   "run_exports": [
    "cusparselt 0.2.0.1 0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp -r include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcusparseLt.so* $PREFIX/lib/"
   ],
   "script_env": null,
   "string": "hdc17891_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "mnicely"
   ]
  },
  "package": {
   "name": "cusparselt",
   "version": "0.2.0.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h5bd9786_12",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_33",
    "gcc_impl_linux-64 7.5.0 habd7529_19",
    "gcc_linux-64 7.5.0 h47867f9_33",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_12",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libgcc-devel_linux-64 7.5.0 hda03d7c_19",
    "libgcc-ng 11.2.0 h1d223b6_9",
    "libgomp 11.2.0 h1d223b6_9",
    "libstdcxx-ng 11.2.0 he4da1e4_9",
    "nvcc_linux-64 11.2 h309498c_14",
    "sed 4.8 he412f7d_0",
    "sysroot_linux-64 2.17 h4a8ded7_12"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "libgomp 11.2.0 h1d223b6_9"
   ],
   "run": [
    "__glibc >=2.17,<3.0.a0",
    "_openmp_mutex >=4.5",
    "cudatoolkit >=11.2,<12",
    "libgcc-ng >=3.0",
    "libstdcxx-ng >=3.4"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "a2d724d44fc20ebd1ee481aee444cef0a803338c69208f7c70e2556920705541",
   "url": "https://developer.download.nvidia.com/compute/libcusparse-lt/0.2.0/local_installers/libcusparse_lt-linux-x86_64-0.2.0.1.tar.gz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.2.*",
    "gcc_linux-64 7.*",
    "git",
    "gxx_linux-64 7.*",
    "nvcc_linux-64 11.2.*",
    "sysroot_linux-64 2.17.*"
   ]
  }
 },
 "version": "0.2.0.1"
}