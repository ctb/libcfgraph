{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.7",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
  "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
  "doc_url": "https://dynamictimewarping.github.io/python/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "home": "https://dynamictimewarping.github.io/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libgcc-ng 11.2.0 h1d223b6_11",
   "c-ares 1.18.1 h7f98852_0",
   "glob2 0.7 py_0",
   "pyyaml 6.0 py38h497a2fe_3",
   "brotlipy 0.7.0 py38h497a2fe_1003",
   "pyrsistent 0.18.0 py38h497a2fe_0",
   "setuptools 60.5.0 py38h578d9bd_0",
   "libnghttp2 1.43.0 h812cca2_1",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "gettext 0.19.8.1 h73d1719_1008",
   "rich 11.0.0 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "libmamba 0.19.1 h3985d26_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "jupyter_core 4.9.1 py38h578d9bd_1",
   "libstdcxx-ng 11.2.0 he4da1e4_11",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "psutil 5.9.0 py38h497a2fe_0",
   "six 1.16.0 pyh6c4a22f_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "libxml2 2.9.12 h885dcf4_1",
   "pytz 2021.3 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py38h497a2fe_1",
   "typing_extensions 4.0.1 pyha770c72_0",
   "libcurl 7.81.0 h2574ce0_0",
   "conda-build 3.21.7 py38h578d9bd_0",
   "libmambapy 0.19.1 py38h908000c_0",
   "zlib 1.2.11 h36c2ea0_1013",
   "certifi 2021.10.8 py38h578d9bd_1",
   "pcre2 10.37 h032f7d1_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "pysocks 1.7.1 py38h578d9bd_4",
   "readline 8.1 h46c0cb4_0",
   "pip 21.3.1 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pycosat 0.6.3 py38h497a2fe_1009",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "prompt-toolkit 3.0.24 pyha770c72_0",
   "tk 8.6.11 h27826a3_1",
   "importlib-metadata 4.10.0 py38h578d9bd_0",
   "yaml 0.2.5 h7f98852_2",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "libsolv 0.7.19 h780b84a_5",
   "backports 1.0 py_2",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "sqlite 3.37.0 h9cd32fc_0",
   "openssl 1.1.1l h7f98852_0",
   "ripgrep 13.0.0 habb4d0f_1",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "git 2.34.1 pl5321hc30692c_0",
   "libev 4.33 h516909a_1",
   "cryptography 36.0.1 py38h3e25421_0",
   "prompt_toolkit 3.0.24 hd8ed1ab_0",
   "libiconv 1.16 h516909a_0",
   "su-exec 0.2 h516909a_1002",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_1",
   "ruamel.yaml.clib 0.2.6 py38h497a2fe_0",
   "python_abi 3.8 2_cp38",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "watchgod 0.7 pyhd8ed1ab_0",
   "patchelf 0.14.3 h58526e2_0",
   "clyent 1.2.2 py_1",
   "perl 5.32.1 1_h7f98852_perl5",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "filelock 3.4.2 pyhd8ed1ab_1",
   "chardet 4.0.0 py38h578d9bd_2",
   "future 0.18.2 py38h578d9bd_4",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "krb5 1.19.2 hcc1bbae_3",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "ruamel.yaml 0.17.19 py38h497a2fe_0",
   "boa 0.8.1 pyha770c72_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "idna 3.1 pyhd3deb0d_0",
   "expat 2.4.2 h9c3ff4c_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "xz 5.2.5 h516909a_1",
   "ncurses 6.2 h58526e2_4",
   "tini 0.18.0 h14c3975_1001",
   "charset-normalizer 2.0.10 pyhd8ed1ab_0",
   "zipp 3.7.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "libuuid 2.32.1 h7f98852_1000",
   "python 3.8.12 hb7a2778_2_cpython",
   "patch 2.7.6 h7f98852_1002",
   "ruamel_yaml 0.15.80 py38h497a2fe_1006",
   "libarchive 3.5.2 hccf745f_1",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "curl 7.81.0 h2574ce0_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "conda 4.11.0 py38h578d9bd_0",
   "mamba 0.19.1 py38h1abaa86_0",
   "lzo 2.10 h516909a_1000",
   "libnsl 2.0.0 h7f98852_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 1_gnu",
   "requests 2.27.1 pyhd8ed1ab_0",
   "tzdata 2021e he74cb21_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "commonmark 0.9.1 py_0",
   "ca-certificates 2021.10.8 ha878542_0",
   "zstd 1.5.1 ha95c52a_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_11",
   "conda-package-handling 1.7.3 py38h497a2fe_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "icu 69.1 h9c3ff4c_0",
   "py-lief 0.11.5 py38h709712a_1",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ipython_genutils 0.2.0 py_1",
   "reproc 14.2.3 h7f98852_0",
   "cffi 1.15.0 py38h3931269_0",
   "python-libarchive-c 3.2 py38h578d9bd_0",
   "click 8.0.3 py38h578d9bd_1",
   "conda-forge-ci-setup 3.18.1 py38h7bc8238_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "oniguruma 6.9.7.1 h7f98852_0"
  ],
  "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "python",
    "python_impl"
   ]
  ]
 },
 "files": [
  "bin/dtw",
  "lib/python3.9/site-packages/dtw/__init__.py",
  "lib/python3.9/site-packages/dtw/__main__.py",
  "lib/python3.9/site-packages/dtw/_backtrack.py",
  "lib/python3.9/site-packages/dtw/_dtw_utils.c",
  "lib/python3.9/site-packages/dtw/_dtw_utils.cpython-39-x86_64-linux-gnu.so",
  "lib/python3.9/site-packages/dtw/_dtw_utils.pyx",
  "lib/python3.9/site-packages/dtw/_globalCostMatrix.py",
  "lib/python3.9/site-packages/dtw/countPaths.py",
  "lib/python3.9/site-packages/dtw/data/aami3a.csv",
  "lib/python3.9/site-packages/dtw/data/aami3b.csv",
  "lib/python3.9/site-packages/dtw/dtw.py",
  "lib/python3.9/site-packages/dtw/dtwPlot.py",
  "lib/python3.9/site-packages/dtw/dtw_core.c",
  "lib/python3.9/site-packages/dtw/dtw_core.h",
  "lib/python3.9/site-packages/dtw/dtw_test_data.py",
  "lib/python3.9/site-packages/dtw/mvm.py",
  "lib/python3.9/site-packages/dtw/stepPattern.py",
  "lib/python3.9/site-packages/dtw/warp.py",
  "lib/python3.9/site-packages/dtw/warpArea.py",
  "lib/python3.9/site-packages/dtw/window.py",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/AUTHORS.rst",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/INSTALLER",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/LICENSE",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/METADATA",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/RECORD",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/REQUESTED",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/WHEEL",
  "lib/python3.9/site-packages/dtw_python-1.1.12.dist-info/direct_url.json"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py39h3811e60_2",
  "build_number": 2,
  "depends": [
   "libgcc-ng >=9.4.0",
   "numpy >=1.22.0,<2.0a0",
   "python >=3.9,<3.10.0a0",
   "python_abi 3.9.* *_cp39",
   "scipy"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "dtw-python",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1642336266130,
  "version": "1.1.12"
 },
 "metadata_version": 1,
 "name": "dtw-python",
 "raw_recipe": "{% set name = \"dtw-python\" %}\n{% set version = \"1.1.12\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 887a67211275d2f9e70eb3b1319890cb5d7f9a8e0d68e5a5566664448d51ce26\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [py<36 or python_impl == 'pypy']\n  entry_points:\n    - dtw = dtw.__main__:main\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython\n    - numpy >=1.19                           # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - setuptools\n  host:\n    - python\n    - pip\n    - cython\n    - numpy >=1.19\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - dtw\n  requires:\n    - pytest\n  source_files:\n    - tests\n  commands:\n    - pytest tests\n    - dtw --help\n\nabout:\n  home: https://dynamictimewarping.github.io/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions,\n    normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.\n  description: DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW\n    is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.\n  doc_url: https://dynamictimewarping.github.io/python/\n  dev_url: https://github.com/DynamicTimeWarping/dtw-python\n\nextra:\n  recipe-maintainers:\n    - tonigi\n",
 "rendered_recipe": {
  "about": {
   "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main"
   ],
   "number": "2",
   "script": "/home/conda/feedstock_root/build_artifacts/dtw-python_1642336125452/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
   "string": "py39h3811e60_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.12"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_4",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2021.10.8 ha878542_0",
    "cython 0.29.26 py310h122e73d_0",
    "gcc_impl_linux-64 9.4.0 h03d3576_11",
    "gcc_linux-64 9.4.0 h391b98a_4",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-devel_linux-64 9.4.0 hd854feb_11",
    "libgcc-ng 11.2.0 h1d223b6_11",
    "libgomp 11.2.0 h1d223b6_11",
    "libnsl 2.0.0 h7f98852_0",
    "libsanitizer 9.4.0 h79bfe98_11",
    "libstdcxx-ng 11.2.0 he4da1e4_11",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.11 h36c2ea0_1013",
    "ncurses 6.2 h58526e2_4",
    "openssl 3.0.0 h7f98852_2",
    "python 3.10.2 h543edf9_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1 h46c0cb4_0",
    "setuptools 60.5.0 py310hff52083_0",
    "sqlite 3.37.0 h9cd32fc_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "tk 8.6.11 h27826a3_1",
    "tzdata 2021e he74cb21_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2021.10.8 ha878542_0",
    "cython 0.29.26 py39he80948d_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libblas 3.9.0 12_linux64_openblas",
    "libcblas 3.9.0 12_linux64_openblas",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 11.2.0 h1d223b6_11",
    "libgfortran-ng 11.2.0 h69a702a_11",
    "libgfortran5 11.2.0 h5c6108e_11",
    "libgomp 11.2.0 h1d223b6_11",
    "liblapack 3.9.0 12_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.18 pthreads_h8fe5266_0",
    "libstdcxx-ng 11.2.0 he4da1e4_11",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.11 h36c2ea0_1013",
    "ncurses 6.2 h58526e2_4",
    "numpy 1.22.0 py39h91f2184_0",
    "openssl 3.0.0 h7f98852_2",
    "pip 21.3.1 pyhd8ed1ab_0",
    "python 3.9.9 h543edf9_0_cpython",
    "python_abi 3.9 2_cp39",
    "readline 8.1 h46c0cb4_0",
    "setuptools 60.5.0 py39hf3d152e_0",
    "sqlite 3.37.0 h9cd32fc_0",
    "tk 8.6.11 h27826a3_1",
    "tzdata 2021e he74cb21_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013"
   ],
   "run": [
    "libgcc-ng >=9.4.0",
    "numpy >=1.22.0,<2.0a0",
    "python >=3.9,<3.10.0a0",
    "python_abi 3.9.* *_cp39",
    "scipy"
   ]
  },
  "source": {
   "sha256": "887a67211275d2f9e70eb3b1319890cb5d7f9a8e0d68e5a5566664448d51ce26",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.12.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "1.1.12"
}