{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.0",
  "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
  "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
  "doc_url": "https://dynamictimewarping.github.io/python/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "home": "https://dynamictimewarping.github.io/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "conda-build 3.21.4 py38h578d9bd_0",
   "_libgcc_mutex 0.1 conda_forge",
   "bzip2 1.0.8 h7f98852_4",
   "libgcc-ng 9.3.0 h2828fa1_18",
   "setuptools 49.6.0 py38h578d9bd_3",
   "libnghttp2 1.43.0 h812cca2_0",
   "gettext 0.19.8.1 h0b5b191_1005",
   "perl 5.32.0 h36c2ea0_0",
   "patch 2.7.6 h7f98852_1002",
   "attrs 20.3.0 pyhd3deb0d_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "libcurl 7.76.0 hc4aaa36_0",
   "libiconv 1.16 h516909a_0",
   "tini 0.18.0 h14c3975_1001",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38h348cfbe_2",
   "sqlite 3.35.3 h74cdb3f_0",
   "urllib3 1.26.4 pyhd8ed1ab_0",
   "curl 7.76.0 h979ede3_0",
   "python 3.8.8 hffdb5ce_0_cpython",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "clyent 1.2.2 py_1",
   "ca-certificates 2020.12.5 ha878542_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "openssl 1.1.1k h7f98852_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "ncurses 6.2 h58526e2_4",
   "wheel 0.36.2 pyhd3deb0d_0",
   "pip 21.0.1 pyhd8ed1ab_0",
   "libstdcxx-ng 9.3.0 h6de172a_18",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "tk 8.6.10 h21135ba_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "cffi 1.14.5 py38ha65f79e_0",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "glob2 0.7 py_0",
   "chardet 4.0.0 py38h578d9bd_1",
   "git 2.30.2 pl5320h24fefe6_1",
   "yaml 0.2.5 h516909a_0",
   "icu 68.1 h58526e2_0",
   "python-dateutil 2.8.1 py_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "krb5 1.17.2 h926e7f8_0",
   "tqdm 4.59.0 pyhd8ed1ab_0",
   "importlib-metadata 3.10.0 py38h578d9bd_0",
   "libxml2 2.9.10 h72842e0_3",
   "zlib 1.2.11 h516909a_1010",
   "ipython_genutils 0.2.0 py_1",
   "conda-package-handling 1.7.2 py38h8df0ef7_0",
   "libgomp 9.3.0 h2828fa1_18",
   "su-exec 0.2 h516909a_1002",
   "certifi 2020.12.5 py38h578d9bd_1",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "libssh2 1.9.0 ha56f1ee_6",
   "traitlets 5.0.5 py_0",
   "ld_impl_linux-64 2.35.1 hea4e1c9_2",
   "libarchive 3.5.1 h3f442fb_1",
   "readline 8.0 he28a2e2_2",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "python-libarchive-c 2.9 py38h578d9bd_2",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "pcre 8.44 he1b5a44_0",
   "anaconda-client 1.7.2 py_0",
   "liblief 0.10.1 he1b5a44_2",
   "libev 4.33 h516909a_1",
   "pysocks 1.7.1 py38h578d9bd_3",
   "jinja2 2.11.3 pyh44b312d_0",
   "zstd 1.4.9 ha95c52a_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "expat 2.3.0 h9c3ff4c_0",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "python_abi 3.8 1_cp38",
   "patchelf 0.11 he1b5a44_0",
   "_openmp_mutex 4.5 1_gnu",
   "ripgrep 12.1.1 h516909a_1",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "lzo 2.10 h516909a_1000",
   "c-ares 1.17.1 h7f98852_1",
   "markupsafe 1.1.1 py38h497a2fe_3",
   "soupsieve 2.0.1 py_1",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "xz 5.2.5 h516909a_1",
   "libffi 3.3 h58526e2_2",
   "conda 4.10.0 py38h578d9bd_1",
   "jq 1.6 h36c2ea0_1000",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.9.2 py38h904d315_0",
   "oniguruma 6.9.3 h36c2ea0_0",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "python",
    "python_impl"
   ],
   [
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/dtw",
  "lib/python3.9/site-packages/dtw/__init__.py",
  "lib/python3.9/site-packages/dtw/__main__.py",
  "lib/python3.9/site-packages/dtw/_backtrack.py",
  "lib/python3.9/site-packages/dtw/_dtw_utils.c",
  "lib/python3.9/site-packages/dtw/_dtw_utils.cpython-39-x86_64-linux-gnu.so",
  "lib/python3.9/site-packages/dtw/_dtw_utils.pyx",
  "lib/python3.9/site-packages/dtw/_globalCostMatrix.py",
  "lib/python3.9/site-packages/dtw/countPaths.py",
  "lib/python3.9/site-packages/dtw/data/aami3a.csv",
  "lib/python3.9/site-packages/dtw/data/aami3b.csv",
  "lib/python3.9/site-packages/dtw/dtw.py",
  "lib/python3.9/site-packages/dtw/dtwPlot.py",
  "lib/python3.9/site-packages/dtw/dtw_core.c",
  "lib/python3.9/site-packages/dtw/dtw_core.h",
  "lib/python3.9/site-packages/dtw/dtw_test_data.py",
  "lib/python3.9/site-packages/dtw/mvm.py",
  "lib/python3.9/site-packages/dtw/stepPattern.py",
  "lib/python3.9/site-packages/dtw/warp.py",
  "lib/python3.9/site-packages/dtw/warpArea.py",
  "lib/python3.9/site-packages/dtw/window.py",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/AUTHORS.rst",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/INSTALLER",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/LICENSE",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/METADATA",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/RECORD",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/REQUESTED",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/WHEEL",
  "lib/python3.9/site-packages/dtw_python-1.1.10.dist-info/direct_url.json"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py39h3811e60_0",
  "build_number": 0,
  "depends": [
   "libgcc-ng >=9.3.0",
   "numpy >=1.20.2,<2.0a0",
   "python >=3.9,<3.10.0a0",
   "python_abi 3.9.* *_cp39",
   "scipy"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "dtw-python",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1618141691039,
  "version": "1.1.10"
 },
 "metadata_version": 1,
 "name": "dtw-python",
 "raw_recipe": "{% set name = \"dtw-python\" %}\n{% set version = \"1.1.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 3d1b4dd990666717f484e389de963703ff3090bf97e3ae723ab39d9a031d06c8\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [py<36 or python_impl == 'pypy']\n  entry_points:\n    - dtw = dtw.__main__:main\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - numpy >=1.19\n    - cython\n    - setuptools\n  host:\n    - python\n    - pip\n    - cython\n    - numpy >=1.19\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - dtw\n  requires:\n    - pytest\n  source_files:\n    - tests\n  commands:\n    - pytest tests\n    - dtw --help\n\nabout:\n  home: https://dynamictimewarping.github.io/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions,\n    normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.\n  description: DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW\n    is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.\n  doc_url: https://dynamictimewarping.github.io/python/\n  dev_url: https://github.com/DynamicTimeWarping/dtw-python\n\nextra:\n  recipe-maintainers:\n    - tonigi\n",
 "rendered_recipe": {
  "about": {
   "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main"
   ],
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/dtw-python_1618141462367/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
   "string": "py39h3811e60_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.10"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35.1 h193b22a_2",
    "binutils_linux-64 2.35 h67ddf6f_30",
    "ca-certificates 2020.12.5 ha878542_0",
    "certifi 2020.12.5 py39hf3d152e_1",
    "cython 0.29.22 py39he80948d_0",
    "gcc_impl_linux-64 9.3.0 h70c0ae5_18",
    "gcc_linux-64 9.3.0 hf25ea35_30",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libblas 3.9.0 8_openblas",
    "libcblas 3.9.0 8_openblas",
    "libffi 3.3 h58526e2_2",
    "libgcc-devel_linux-64 9.3.0 h7864c58_18",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgfortran-ng 9.3.0 hff62375_18",
    "libgfortran5 9.3.0 hff62375_18",
    "libgomp 9.3.0 h2828fa1_18",
    "liblapack 3.9.0 8_openblas",
    "libopenblas 0.3.12 pthreads_h4812303_1",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "ncurses 6.2 h58526e2_4",
    "numpy 1.20.2 py39hdbf815f_0",
    "openssl 1.1.1k h7f98852_0",
    "python 3.9.2 hffdb5ce_0_cpython",
    "python_abi 3.9 1_cp39",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.6.0 py39hf3d152e_3",
    "sqlite 3.35.4 h74cdb3f_0",
    "sysroot_linux-64 2.12 h77966d4_13",
    "tk 8.6.10 h21135ba_1",
    "tzdata 2021a he74cb21_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.12.5 ha878542_0",
    "certifi 2020.12.5 py39hf3d152e_1",
    "cython 0.29.22 py39he80948d_0",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libblas 3.9.0 8_openblas",
    "libcblas 3.9.0 8_openblas",
    "libffi 3.3 h58526e2_2",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgfortran-ng 9.3.0 hff62375_18",
    "libgfortran5 9.3.0 hff62375_18",
    "libgomp 9.3.0 h2828fa1_18",
    "liblapack 3.9.0 8_openblas",
    "libopenblas 0.3.12 pthreads_h4812303_1",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "ncurses 6.2 h58526e2_4",
    "numpy 1.20.2 py39hdbf815f_0",
    "openssl 1.1.1k h7f98852_0",
    "pip 21.0.1 pyhd8ed1ab_0",
    "python 3.9.2 hffdb5ce_0_cpython",
    "python_abi 3.9 1_cp39",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.6.0 py39hf3d152e_3",
    "sqlite 3.35.4 h74cdb3f_0",
    "tk 8.6.10 h21135ba_1",
    "tzdata 2021a he74cb21_0",
    "wheel 0.36.2 pyhd3deb0d_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "run": [
    "libgcc-ng >=9.3.0",
    "numpy >=1.20.2,<2.0a0",
    "python >=3.9,<3.10.0a0",
    "python_abi 3.9.* *_cp39",
    "scipy"
   ]
  },
  "source": {
   "sha256": "3d1b4dd990666717f484e389de963703ff3090bf97e3ae723ab39d9a031d06c8",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.10.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "1.1.10"
}