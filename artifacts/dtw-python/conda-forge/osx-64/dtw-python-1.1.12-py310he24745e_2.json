{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.7",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
  "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
  "doc_url": "https://dynamictimewarping.github.io/python/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "home": "https://dynamictimewarping.github.io/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libcurl 7.80.0 hf45b732_1",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "ruamel.yaml.clib 0.2.6 py39h89e85a6_0",
   "conda 4.11.0 py39h6e9494a_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "conda-forge-ci-setup 3.18.1 py39hb0a6171_0",
   "icu 69.1 he49afe7_0",
   "liblief 0.11.5 he49afe7_1",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "requests 2.26.0 pyhd8ed1ab_1",
   "boa 0.8.1 pyha770c72_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "setuptools 59.4.0 py39h6e9494a_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "typing_extensions 4.0.1 pyha770c72_0",
   "future 0.18.2 py39h6e9494a_4",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "prompt-toolkit 3.0.24 pyha770c72_0",
   "libcxx 12.0.1 habf9029_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "cryptography 36.0.0 py39h209aa08_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "commonmark 0.9.1 py_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "cffi 1.15.0 py39he338e87_0",
   "libmambapy 0.19.1 py39h2c464dc_0",
   "libiconv 1.16 haf1e3a3_0",
   "markupsafe 2.0.1 py39h89e85a6_1",
   "backports 1.0 py_2",
   "zipp 3.7.0 pyhd8ed1ab_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "expat 2.4.2 he49afe7_0",
   "xz 5.2.5 haf1e3a3_1",
   "charset-normalizer 2.0.9 pyhd8ed1ab_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "git 2.34.1 pl5321h9a53687_0",
   "pip 21.3.1 pyhd8ed1ab_0",
   "perl 5.32.1 1_h0d85af4_perl5",
   "cctools 949.0.1 hd9211c8_23",
   "filelock 3.4.2 pyhd8ed1ab_1",
   "curl 7.80.0 hf45b732_1",
   "rich 11.0.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.19 py39h89e85a6_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "tk 8.6.11 h5dbffcc_1",
   "chardet 4.0.0 py39h6e9494a_2",
   "ld64_osx-64 530 he8994da_23",
   "sqlite 3.37.0 h23a322b_0",
   "krb5 1.19.2 hcfbf3a7_3",
   "click 8.0.3 py39h6e9494a_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "jupyter_core 4.9.1 py39h6e9494a_1",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "libnghttp2 1.43.0 h6f36284_1",
   "libsolv 0.7.19 hcf210ce_5",
   "libxml2 2.9.12 h7e28ab6_1",
   "libmamba 0.19.1 h9ce2d19_0",
   "zstd 1.5.0 h582d3a0_0",
   "python-libarchive-c 3.2 py39h6e9494a_0",
   "libarchive 3.5.2 h2b60450_1",
   "conda-build 3.21.7 py39h6e9494a_0",
   "tapi 1100.0.11 h9ce4665_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "importlib-metadata 4.10.0 py39h6e9494a_0",
   "readline 8.1 h05e3726_0",
   "openssl 1.1.1l h0d85af4_0",
   "prompt_toolkit 3.0.24 hd8ed1ab_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "c-ares 1.18.1 h0d85af4_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h80d2146_1",
   "conda-package-handling 1.7.3 py39h89e85a6_1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "pyrsistent 0.18.0 py39h89e85a6_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "psutil 5.9.0 py39h89e85a6_0",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "clyent 1.2.2 py_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "ca-certificates 2021.10.8 h033912b_0",
   "idna 3.1 pyhd3deb0d_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "certifi 2021.10.8 py39h6e9494a_1",
   "python 3.9.7 h1248fe1_3_cpython",
   "pysocks 1.7.1 py39h6e9494a_4",
   "pytz 2021.3 pyhd8ed1ab_0",
   "ldid 2.1.2 h6a69015_3",
   "ipython_genutils 0.2.0 py_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "libllvm12 12.0.1 hd011deb_2",
   "pybind11-abi 4 hd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tzdata 2021e he74cb21_0",
   "libev 4.33 haf1e3a3_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "pyyaml 6.0 py39h89e85a6_3",
   "mamba 0.19.1 py39ha435c47_0"
  ],
  "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.5",
  "target_platform": "osx-64",
  "zip_keys": [
   [
    "python",
    "python_impl"
   ]
  ]
 },
 "files": [
  "bin/dtw",
  "lib/python3.10/site-packages/dtw/__init__.py",
  "lib/python3.10/site-packages/dtw/__main__.py",
  "lib/python3.10/site-packages/dtw/_backtrack.py",
  "lib/python3.10/site-packages/dtw/_dtw_utils.c",
  "lib/python3.10/site-packages/dtw/_dtw_utils.cpython-310-darwin.so",
  "lib/python3.10/site-packages/dtw/_dtw_utils.pyx",
  "lib/python3.10/site-packages/dtw/_globalCostMatrix.py",
  "lib/python3.10/site-packages/dtw/countPaths.py",
  "lib/python3.10/site-packages/dtw/data/aami3a.csv",
  "lib/python3.10/site-packages/dtw/data/aami3b.csv",
  "lib/python3.10/site-packages/dtw/dtw.py",
  "lib/python3.10/site-packages/dtw/dtwPlot.py",
  "lib/python3.10/site-packages/dtw/dtw_core.c",
  "lib/python3.10/site-packages/dtw/dtw_core.h",
  "lib/python3.10/site-packages/dtw/dtw_test_data.py",
  "lib/python3.10/site-packages/dtw/mvm.py",
  "lib/python3.10/site-packages/dtw/stepPattern.py",
  "lib/python3.10/site-packages/dtw/warp.py",
  "lib/python3.10/site-packages/dtw/warpArea.py",
  "lib/python3.10/site-packages/dtw/window.py",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/AUTHORS.rst",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/INSTALLER",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/LICENSE",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/METADATA",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/RECORD",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/REQUESTED",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/WHEEL",
  "lib/python3.10/site-packages/dtw_python-1.1.12.dist-info/direct_url.json"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py310he24745e_2",
  "build_number": 2,
  "depends": [
   "numpy >=1.22.0,<2.0a0",
   "python >=3.10,<3.11.0a0",
   "python_abi 3.10.* *_cp310",
   "scipy"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "dtw-python",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1642336392006,
  "version": "1.1.12"
 },
 "metadata_version": 1,
 "name": "dtw-python",
 "raw_recipe": "{% set name = \"dtw-python\" %}\n{% set version = \"1.1.12\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 887a67211275d2f9e70eb3b1319890cb5d7f9a8e0d68e5a5566664448d51ce26\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  skip: true  # [py<36 or python_impl == 'pypy']\n  entry_points:\n    - dtw = dtw.__main__:main\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython\n    - numpy >=1.19                           # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - setuptools\n  host:\n    - python\n    - pip\n    - cython\n    - numpy >=1.19\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n\ntest:\n  imports:\n    - dtw\n  requires:\n    - pytest\n  source_files:\n    - tests\n  commands:\n    - pytest tests\n    - dtw --help\n\nabout:\n  home: https://dynamictimewarping.github.io/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions,\n    normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc.\n  description: DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW\n    is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.\n  doc_url: https://dynamictimewarping.github.io/python/\n  dev_url: https://github.com/DynamicTimeWarping/dtw-python\n\nextra:\n  recipe-maintainers:\n    - tonigi\n",
 "rendered_recipe": {
  "about": {
   "description": "DTW is a family of algorithms which compute the local stretch or compression to apply to the time axes of two timeseries in order to optimally map one (query) onto the other (reference). DTW outputs the remaining cumulative distance between the two and, if desired, the mapping itself (warping function). DTW is widely used for classification and clustering tasks, e.g. in bioinformatics, chemometrics, econometrics, and general timeseries mining.",
   "dev_url": "https://github.com/DynamicTimeWarping/dtw-python",
   "doc_url": "https://dynamictimewarping.github.io/python/",
   "home": "https://dynamictimewarping.github.io/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A comprehensive implementation of dynamic time warping (DTW) algorithms in Python.  DTW computes the optimal (least cumulative distance) alignment between points of two time series.  Common DTW variants covered include local (slope) and global (window) constraints, subsequence matches, arbitrary distance definitions, normalizations, minimum variance matching, and so on.  Provides cumulative distances, alignments, specialized plot styles, etc."
  },
  "build": {
   "entry_points": [
    "dtw = dtw.__main__:main"
   ],
   "number": "2",
   "script": "/Users/runner/miniforge3/conda-bld/dtw-python_1642336203937/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol/bin/python -m pip install . --no-deps -vv",
   "string": "py310he24745e_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tonigi"
   ]
  },
  "package": {
   "name": "dtw-python",
   "version": "1.1.12"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "ca-certificates 2021.10.8 h033912b_0",
    "cctools_osx-64 949.0.1 h6407bdd_23",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hc8532ff_5",
    "clangxx 11.1.0 default_he082bbe_1",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "cython 0.29.26 py310hba3363e_0",
    "ld64_osx-64 530 he8994da_21",
    "ldid 2.1.2 h6a69015_3",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcxx 12.0.1 habf9029_1",
    "libffi 3.4.2 h0d85af4_5",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.1 hd011deb_2",
    "libzlib 1.2.11 h9173be1_1013",
    "llvm-tools 11.1.0 hd011deb_2",
    "ncurses 6.2 h2e338ed_4",
    "openssl 3.0.0 h0d85af4_2",
    "python 3.10.2 h38b4d05_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1 h05e3726_0",
    "setuptools 60.5.0 py310h2ec42d9_0",
    "sqlite 3.37.0 h23a322b_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.11 h5dbffcc_1",
    "tzdata 2021e he74cb21_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h9173be1_1013"
   ],
   "host": [
    "bzip2 1.0.8 h0d85af4_4",
    "ca-certificates 2021.10.8 h033912b_0",
    "cython 0.29.26 py310hba3363e_0",
    "libblas 3.9.0 12_osx64_openblas",
    "libcblas 3.9.0 12_osx64_openblas",
    "libcxx 12.0.1 habf9029_1",
    "libffi 3.4.2 h0d85af4_5",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "liblapack 3.9.0 12_osx64_openblas",
    "libopenblas 0.3.18 openmp_h3351f45_0",
    "libzlib 1.2.11 h9173be1_1013",
    "llvm-openmp 12.0.1 hda6cdc1_1",
    "ncurses 6.2 h2e338ed_4",
    "numpy 1.22.0 py310hfbbbacf_0",
    "openssl 3.0.0 h0d85af4_2",
    "pip 21.3.1 pyhd8ed1ab_0",
    "python 3.10.2 h38b4d05_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1 h05e3726_0",
    "setuptools 60.5.0 py310h2ec42d9_0",
    "sqlite 3.37.0 h23a322b_0",
    "tk 8.6.11 h5dbffcc_1",
    "tzdata 2021e he74cb21_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h9173be1_1013"
   ],
   "run": [
    "numpy >=1.22.0,<2.0a0",
    "python >=3.10,<3.11.0a0",
    "python_abi 3.10.* *_cp310",
    "scipy"
   ]
  },
  "source": {
   "sha256": "887a67211275d2f9e70eb3b1319890cb5d7f9a8e0d68e5a5566664448d51ce26",
   "url": "https://pypi.io/packages/source/d/dtw-python/dtw-python-1.1.12.tar.gz"
  },
  "test": {
   "commands": [
    "pytest tests",
    "dtw --help"
   ],
   "imports": [
    "dtw"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "1.1.12"
}