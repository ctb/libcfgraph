{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.6",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "zfp is an open source C/C++ library for compressed numerical arrays\nthat support high throughput read and write random access. zfp also\nsupports streaming compression of integer and floating-point data,\ne.g., for applications that read and write large data sets to and\nfrom disk. zfp is primarily written in C and C++ but also includes\nPython and Fortran bindings.\n",
  "dev_url": "https://github.com/LLNL/zfp",
  "doc_url": "http://zfp.readthedocs.io/en/release0.5.5/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "kmpaul",
    "ToreAad",
    "lindstro",
    "GarrettDMorrison",
    "hmaarrfk"
   ]
  },
  "home": "https://computation.llnl.gov/projects/floating-point-compression",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "brotlipy 0.7.0 py38h98b8a6f_1003",
   "patch 2.7.6 h4e0d66e_1002",
   "dataclasses 0.8 pyhc8e2a94_3",
   "ca-certificates 2021.10.8 h1084571_0",
   "lz4-c 1.9.3 h3b9df90_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "libnsl 2.0.0 h4e0d66e_0",
   "backports 1.0 py_2",
   "prompt_toolkit 3.0.22 hd8ed1ab_0",
   "libgomp 11.2.0 h7698a5e_11",
   "cryptography 35.0.0 py38h2987e8e_2",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "zstd 1.5.0 h65c4b1a_0",
   "python 3.8.12 h57873ef_1_cpython",
   "tzdata 2021e he74cb21_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "libedit 3.1.20191231 h41a240f_2",
   "prompt-toolkit 3.0.22 pyha770c72_0",
   "libiconv 1.16 h6eb9509_0",
   "expat 2.4.1 h3b9df90_0",
   "soupsieve 2.3 pyhd8ed1ab_0",
   "pip 21.3.1 pyhd8ed1ab_0",
   "libgcc-ng 11.2.0 h7698a5e_11",
   "python-libarchive-c 3.1 py38hf8b3453_0",
   "libev 4.33 h6eb9509_1",
   "libstdcxx-ng 11.2.0 habdf983_11",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "idna 3.1 pyhd3deb0d_0",
   "py-lief 0.11.5 py38hfdc2fcd_1",
   "su-exec 0.2 h6eb9509_1002",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "future 0.18.2 py38hf8b3453_4",
   "_openmp_mutex 4.5 1_gnu",
   "openssl 1.1.1l h4e0d66e_0",
   "wheel 0.37.0 pyhd8ed1ab_1",
   "typing_extensions 3.10.0.2 pyha770c72_0",
   "libxml2 2.9.12 h1876533_1",
   "libssh2 1.10.0 ha5a9321_2",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "pycosat 0.6.3 py38h98b8a6f_1009",
   "pycparser 2.20 pyh9f0ad1d_2",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "tk 8.6.11 h41c6715_1",
   "setuptools 58.5.3 py38hf8b3453_0",
   "jsonschema 4.2.1 pyhd8ed1ab_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "commonmark 0.9.1 py_0",
   "yaml 0.2.5 h6eb9509_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py38h98b8a6f_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "libsolv 0.7.19 h690f14c_5",
   "ruamel_yaml 0.15.80 py38h98b8a6f_1006",
   "krb5 1.19.2 haf43566_3",
   "reproc 14.2.3 h4e0d66e_0",
   "readline 8.1 h5c45dff_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "patchelf 0.13 hea85c5d_0",
   "ncurses 6.2 hea85c5d_4",
   "boa 0.7.1 pyha770c72_0",
   "icu 69.1 h3b4ca64_0",
   "ipython_genutils 0.2.0 py_1",
   "git 2.33.1 pl5321h29e2a4d_0",
   "reproc-cpp 14.2.3 h3b9df90_0",
   "zlib 1.2.11 h339bb43_1013",
   "psutil 5.8.0 py38h98b8a6f_2",
   "libnghttp2 1.43.0 h42039ad_1",
   "filelock 3.3.2 pyhd8ed1ab_0",
   "cffi 1.15.0 py38hae6c81b_0",
   "curl 7.79.1 he415e40_1",
   "requests 2.26.0 pyhd8ed1ab_0",
   "xz 5.2.5 h6eb9509_1",
   "pyrsistent 0.18.0 py38h98b8a6f_0",
   "mamba 0.16.0 py38h5a21a44_0",
   "python_abi 3.8 2_cp38",
   "jupyter_core 4.9.1 py38hf8b3453_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "importlib-metadata 4.8.1 py38hf8b3453_1",
   "ruamel.yaml 0.17.17 py38h1e5b5cc_0",
   "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
   "pcre2 10.37 h32277c3_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "pysocks 1.7.1 py38hf8b3453_4",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "urllib3 1.26.7 pyhd8ed1ab_0",
   "libarchive 3.5.2 h3281d6a_1",
   "chardet 4.0.0 py38hf8b3453_2",
   "_libgcc_mutex 0.1 conda_forge",
   "ripgrep 13.0.0 ha57a3a6_1",
   "tini 0.18.0 h14c3975_1001",
   "lzo 2.10 h6eb9509_1000",
   "libzlib 1.2.11 h339bb43_1013",
   "pygments 2.10.0 pyhd8ed1ab_0",
   "perl 5.32.1 1_h4e0d66e_perl5",
   "ruamel.yaml.clib 0.2.2 py38h98b8a6f_2",
   "liblief 0.11.5 h3b9df90_1",
   "sqlite 3.36.0 h4e2196e_2",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "certifi 2021.10.8 py38hf8b3453_1",
   "libcurl 7.79.1 he415e40_1",
   "jinja2 3.0.2 pyhd8ed1ab_0",
   "pyyaml 6.0 py38h98b8a6f_3",
   "libffi 3.4.2 h3b9df90_4",
   "gettext 0.19.8.1 h6603d1e_1008",
   "conda-package-handling 1.7.3 py38h98b8a6f_1",
   "six 1.16.0 pyh6c4a22f_0",
   "rich 10.12.0 py38hf8b3453_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "c-ares 1.18.1 h4e0d66e_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda 4.11.0 py38h8328f6c_0",
   "click 8.0.3 py38hf8b3453_1",
   "oniguruma 6.9.7.1 h4e0d66e_0",
   "conda-forge-ci-setup 3.17.1 py38h1c32bc2_1",
   "jq 1.6 h339bb43_1000",
   "conda-build 3.21.6 py38h8328f6c_2"
  ],
  "summary": "Library for compressed numerical arrays that support high throughput read and write random access",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.21",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ],
   [
    "python",
    "numpy"
   ]
  ]
 },
 "files": [
  "bin/zfp",
  "include/bitstream.h",
  "include/cfparray1d.h",
  "include/cfparray1f.h",
  "include/cfparray2d.h",
  "include/cfparray2f.h",
  "include/cfparray3d.h",
  "include/cfparray3f.h",
  "include/cfparrays.h",
  "include/zfp.h",
  "include/zfp/cache.h",
  "include/zfp/header.h",
  "include/zfp/headerHelpers.h",
  "include/zfp/iterator1.h",
  "include/zfp/iterator2.h",
  "include/zfp/iterator3.h",
  "include/zfp/macros.h",
  "include/zfp/memory.h",
  "include/zfp/pointer1.h",
  "include/zfp/pointer2.h",
  "include/zfp/pointer3.h",
  "include/zfp/reference1.h",
  "include/zfp/reference2.h",
  "include/zfp/reference3.h",
  "include/zfp/system.h",
  "include/zfp/types.h",
  "include/zfp/view1.h",
  "include/zfp/view2.h",
  "include/zfp/view3.h",
  "include/zfparray.h",
  "include/zfparray1.h",
  "include/zfparray2.h",
  "include/zfparray3.h",
  "include/zfpcodec.h",
  "include/zfpcodecd.h",
  "include/zfpcodecf.h",
  "include/zfpfactory.h",
  "lib/cmake/zfp/cfp-targets-release.cmake",
  "lib/cmake/zfp/cfp-targets.cmake",
  "lib/cmake/zfp/zfp-config-version.cmake",
  "lib/cmake/zfp/zfp-config.cmake",
  "lib/cmake/zfp/zfp-targets-release.cmake",
  "lib/cmake/zfp/zfp-targets.cmake",
  "lib/libcfp.so",
  "lib/libcfp.so.0",
  "lib/libcfp.so.0.5.5",
  "lib/libzfp.so",
  "lib/libzfp.so.0",
  "lib/libzfp.so.0.5.5"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "h3b9df90_8",
  "build_number": 8,
  "depends": [
   "_openmp_mutex >=4.5",
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "zfp",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1637706854266,
  "version": "0.5.5"
 },
 "metadata_version": 1,
 "name": "zfp",
 "raw_recipe": "{% set version = \"0.5.5\" %}\n\n# This package builds 2 outputs\n#    zfp     --- C headers\n#    zfpy    --- Python package\n#\n# The build procedure actually rebuilds zfp when zfpy is being built\n# during the install phase, conda will simply ignore all the files\n# that are being copied related to zfp since they already exist in the prefix\n\npackage:\n  name: zfp\n  version: {{ version }}\n\nsource:\n  url: https://github.com/LLNL/zfp/archive/{{ version }}.tar.gz\n  sha256: 6a7f4934489087d9c117a4af327fd6495ea757924f4df467b9c537abf8bd86c4\n  patches:\n    # https://github.com/scikit-build/scikit-build/issues/506\n    - 100-update-cmake.patch\n    # https://github.com/LLNL/zfp/pull/109\n    - 109-avoid-importing-cpython-array.patch\n\nbuild:\n  number: 8\n  script: source ${RECIPE_DIR}/build_zfp.sh  # [unix]\n  script: {{ RECIPE_DIR }}\\bld_zfp.bat       # [win]\n  run_exports:\n    # No real information, for now, let keep the defaults\n    - {{ pin_subpackage('zfp') }}\n  rpaths:\n    - lib/  # [unix]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make     # [unix]\n    - ninja    # [win]\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]\n\ntest:\n  commands:\n    - test -f $PREFIX/include/zfp.h                # [unix]\n    - test -f ${PREFIX}/lib/cmake/zfp/zfp-config.cmake  # [unix]\n    - if not exist %LIBRARY_INC%\\zfp.h exit 1      # [win]\n    - test -f $PREFIX/lib/libzfp.so.{{ version }}  # [linux]\n    - test -f $PREFIX/lib/libzfp${SHLIB_EXT}       # [unix]\n    - if not exist %LIBRARY_BIN%\\zfp.dll exit 1    # [win]\n    - if not exist %LIBRARY_LIB%\\zfp.lib exit 1    # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\zfp\\zfp-config.cmake exit 1  # [win]\n    # Command always returns 1\n    - which zfp  # [unix]\n    - where zfp  # [win]\n\noutputs:\n  - name: zfp\n  - name: zfpy\n    build:\n      script: source ${RECIPE_DIR}/build_zfpy.sh  # [unix]\n      script: {{ RECIPE_DIR }}\\bld_zfpy.bat       # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - make     # [unix]\n        - ninja    # [win]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n      host:\n        - python\n        - numpy\n        - cython\n        - {{ pin_subpackage('zfp', exact=True) }}\n      run:\n        - python\n        - {{ pin_compatible('numpy') }}\n        # I don't think run exports work with pin exact subpackage\n        - {{ pin_subpackage('zfp', exact=True) }}\n    test:\n      imports:\n        - zfpy\n\nabout:\n  home: https://computation.llnl.gov/projects/floating-point-compression\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Library for compressed numerical arrays that support high throughput read and write random access'\n  description: |\n    zfp is an open source C/C++ library for compressed numerical arrays\n    that support high throughput read and write random access. zfp also\n    supports streaming compression of integer and floating-point data,\n    e.g., for applications that read and write large data sets to and\n    from disk. zfp is primarily written in C and C++ but also includes\n    Python and Fortran bindings.\n  doc_url: http://zfp.readthedocs.io/en/release0.5.5/\n  dev_url: https://github.com/LLNL/zfp\n\nextra:\n  recipe-maintainers:\n    - kmpaul\n    - ToreAad\n    - lindstro\n    - GarrettDMorrison\n    - hmaarrfk\n",
 "rendered_recipe": {
  "about": {
   "description": "zfp is an open source C/C++ library for compressed numerical arrays\nthat support high throughput read and write random access. zfp also\nsupports streaming compression of integer and floating-point data,\ne.g., for applications that read and write large data sets to and\nfrom disk. zfp is primarily written in C and C++ but also includes\nPython and Fortran bindings.\n",
   "dev_url": "https://github.com/LLNL/zfp",
   "doc_url": "http://zfp.readthedocs.io/en/release0.5.5/",
   "home": "https://computation.llnl.gov/projects/floating-point-compression",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Library for compressed numerical arrays that support high throughput read and write random access"
  },
  "build": {
   "number": "8",
   "rpaths": [
    "lib/"
   ],
   "run_exports": [
    "zfp >=0.5.5,<1.0a0"
   ],
   "script": "source ${RECIPE_DIR}/build_zfp.sh",
   "string": "h3b9df90_8"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "GarrettDMorrison",
    "ToreAad",
    "hmaarrfk",
    "kmpaul",
    "lindstro"
   ]
  },
  "package": {
   "name": "zfp",
   "version": "0.5.5"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.36.1 h5836da8_2",
    "binutils_linux-ppc64le 2.36 he035471_1",
    "bzip2 1.0.8 h4e0d66e_4",
    "c-ares 1.18.1 h4e0d66e_0",
    "ca-certificates 2021.10.8 h1084571_0",
    "cmake 3.21.3 hadba709_0",
    "expat 2.4.1 h3b9df90_0",
    "gcc_impl_linux-ppc64le 9.4.0 hcbd312b_11",
    "gcc_linux-ppc64le 9.4.0 h2449294_1",
    "gxx_impl_linux-ppc64le 9.4.0 hcbd312b_11",
    "gxx_linux-ppc64le 9.4.0 h64afa7a_1",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "krb5 1.19.2 hf9a8087_3",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libcurl 7.80.0 h3643067_0",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-devel_linux-ppc64le 9.4.0 he021ec0_11",
    "libgcc-ng 11.2.0 h7698a5e_11",
    "libgomp 11.2.0 h7698a5e_11",
    "libnghttp2 1.43.0 h66fdf1b_1",
    "libsanitizer 9.4.0 h106b142_11",
    "libssh2 1.10.0 he881182_2",
    "libstdcxx-devel_linux-ppc64le 9.4.0 he021ec0_11",
    "libstdcxx-ng 11.2.0 habdf983_11",
    "libuv 1.42.0 h4e0d66e_0",
    "libzlib 1.2.11 h339bb43_1013",
    "lz4-c 1.9.3 h3b9df90_1",
    "make 4.3 hf817498_1",
    "ncurses 6.2 hea85c5d_4",
    "openssl 3.0.0 h4e0d66e_2",
    "rhash 1.4.1 h4e0d66e_0",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13",
    "tk 8.6.11 h41c6715_1",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 h339bb43_1013",
    "zstd 1.5.0 h65c4b1a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "libgcc-ng 11.2.0 h7698a5e_11",
    "libgomp 11.2.0 h7698a5e_11",
    "libstdcxx-ng 11.2.0 habdf983_11"
   ],
   "run": [
    "_openmp_mutex >=4.5",
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0"
   ]
  },
  "source": {
   "patches": [
    "100-update-cmake.patch",
    "109-avoid-importing-cpython-array.patch"
   ],
   "sha256": "6a7f4934489087d9c117a4af327fd6495ea757924f4df467b9c537abf8bd86c4",
   "url": "https://github.com/LLNL/zfp/archive/0.5.5.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/zfp.h",
    "test -f ${PREFIX}/lib/cmake/zfp/zfp-config.cmake",
    "test -f $PREFIX/lib/libzfp.so.0.5.5",
    "test -f $PREFIX/lib/libzfp${SHLIB_EXT}",
    "which zfp"
   ]
  }
 },
 "version": "0.5.5"
}