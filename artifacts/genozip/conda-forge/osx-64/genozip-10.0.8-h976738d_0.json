{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.20.5",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "Genozip\n\n(available on Conda, Docker Hub and https://github.com/divonlan/genozip)\n\nGenozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. It can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --help=input').\n\nThe compression ratio depends on the data being compressed, and you can usually expect about a 1.5-3X ratio when compressing .bam, 2X-5X for .fastq.gz files (i.e. compressing already-compressed files), and up to 200X when compressing an uncompressed high-sample-count .vcf file with only GT data.\n\nSign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n\nThe compression is lossless - the decompressed file is 100% identical to the original file.\nNotes:\n1. Losslessness when the original file is already compressed (with .gz, .bz2 or .xz as well as .bam) is relative to the underlying uncompressed file. If the original file was compressed with BGZF (as in BAM and most genomic files with a .gz extension) - genounzip will re-compresses the file with BGZF upon decompression (unless --plain is specified), and, further, it will attempt to recover the exact same BGZF compression as in the original file. However, sometimes exact-same BGZF compression is not possible due to different libraries used.\n2. The one exception to Genozip's strict losslessness is when using the --optimize option which is lossy (see --help for details)\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n\nCommands:\ngenozip   - compress one or more files\ngenounzip - decompress one or more files\ngenols    - show metadata of one or more files or the entire directory\ngenocat   - view one or more files\n\nSome examples:\n\nCreating a reference file:\ngenozip --make-reference myfasta.fa\n\nCompressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\ngenozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\ngenozip --reference myfasta.ref.genozip mysample.bam\ngenozip --reference myfasta.ref.genozip mysamples.vcf.gz\ngenozip --reference myfasta.ref.genozip *     \u2190compresses all files in the current directory\n\nNotes:\n1. Genozip can compress with or without a reference - using a reference achieves much better compression when compressing FASTQ or unaligned SAM/BAM, and modestly better compression in other cases\n2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n4. Compression of CRAM (but not SAM or BAM) files requires samtools to be installed\n5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n\nCompressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\ngenozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\ngenounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n\nUsing genozip in a pipline:\ngenocat mysample.sam.genozip | samtools - .....\nmy-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n\nLookups, downsampling and other subsets:\ngenocat --regions chr1:10000-20000 mysamples.vcf.genozip   \u2190displays a specific region\ngenocat --regions ^Y,MT mysample.bam.genozip   \u2190displays all alignments except Y and MT contigs\ngenocat --regions chrM GRCh38.fa.genozip   \u2190displays the sequence of chrM\ngenocat --samples SMPL1,SMPL2 mysamples.vcf.genozip   \u2190displays 2 samples\ngenocat --grep 1101:2392 myreads.fq.genozip   \u2190displays reads that have \"1101:2392\" anywhere in the description\ngenocat --downsample 10 mysample.fq.genozip   \u2190displays 1 in 10 reads\nNotes:\n1. --regions works with VCF, SAM/BAM, FASTA, 23andMe, GVF and reference files ; --grep works with FASTQ, FASTA ; --samples works with VCF ; --downsample works with all types\n2. There is no need for a separate indexing step or index file\n3. Many more options (see --help for full list): --no-header ; --header-only ; --header-one ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n\nBinding mutiple files into a single genozip file and unbinding:\ngenozip *.fq.gz -o all-samples.fq.genozip   \u2190binds all .fq.gz files in the current directory\ngenounzip my-project.fq.genozip --unbind\n\nCompressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\ngenozip file.bam --optimize\n\nCompressing faster, sacrificing a bit of compression ratio:\ngenozip file.bam --fast\n\nEncrypting (256 bit AES):\ngenozip file.vcf --password abc\ngenounzip file.vcf.genozip --password abc\n\nConverting SAM/BAM to FASTQ:\ngenounzip file.bam.genozip --fastq\n\nConverting 23andMe to VCF:\ngenounzip genome_mydata-Full.txt.genozip --vcf -e GRCh37.ref.genozip\n\nGenerate a samtools/bcftools index file when uncompressing:\ngenounzip file.bam.genozip --index\n\nCalculating the MD5 of the underlying textual file (also included in --test):\ngenozip file.vcf --md5\ngenounzip file.vcf.genozip --md5\ngenols file.vcf.genozip\n\nCompressing and then verifying that the compressed file decompresses correctly:\ngenozip file.vcf --test\n\nCiting\nDo you find Genozip useful? Please support continued development by citing:\nLan, D., et al. Bioinformatics, 36, 4091\u20134092, July 2020, https://doi.org/10.1093/bioinformatics/btaa290\n\nFeature requests and bug reports: bugs@genozip.com\n\nGenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "dev_url": "https://github.com/divonlan/genozip",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "home": "https://github.com/divonlan/genozip",
  "identifiers": [],
  "keywords": [],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "license_file": [
   "LICENSE.non-commercial.txt",
   "LICENSE.commercial.txt"
  ],
  "root_pkgs": [
   "ruamel_yaml 0.15.80 py38h94c058a_1003",
   "ca-certificates 2020.12.5 h033912b_0",
   "conda-env 2.6.0 1",
   "idna 2.10 pyh9f0ad1d_0",
   "py-lief 0.10.1 py38heedec30_2",
   "jq 1.6 hc929b4f_1000",
   "pyyaml 5.3.1 py38h5406a74_2",
   "ncurses 6.2 h2e338ed_4",
   "wheel 0.36.2 pyhd3deb0d_0",
   "nbformat 5.0.8 py_0",
   "anaconda-client 1.7.2 py_0",
   "libcurl 7.71.1 h9bf37e3_8",
   "jsonschema 3.2.0 py_2",
   "cryptography 3.3.1 py38h6b4ec92_0",
   "cffi 1.14.4 py38h979bc6b_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "zstd 1.4.8 hf387650_1",
   "soupsieve 2.0.1 py_1",
   "requests 2.25.1 pyhd3deb0d_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "markupsafe 1.1.1 py38h5406a74_3",
   "psutil 5.8.0 py38h5406a74_1",
   "certifi 2020.12.5 py38h50d1736_1",
   "perl 5.32.0 hbcb3906_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "c-ares 1.17.1 hc929b4f_0",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "expat 2.2.9 hb1e8313_2",
   "tk 8.6.10 h0419947_1",
   "xz 5.2.5 haf1e3a3_1",
   "libcxx 11.0.0 h4c3b8ed_1",
   "liblief 0.10.1 hb1e8313_2",
   "chardet 4.0.0 py38h50d1736_0",
   "brotlipy 0.7.0 py38h94c058a_1001",
   "zlib 1.2.11 h7795811_1010",
   "pcre 8.44 hb1e8313_0",
   "libffi 3.3 h046ec9c_2",
   "libxml2 2.9.10 h802ca4f_3",
   "curl 7.71.1 hcb81553_8",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-build 3.20.5 py38h5347e94_0",
   "tqdm 4.55.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h7937167_1005",
   "git 2.30.0 pl5320hd05cdc2_0",
   "attrs 20.3.0 pyhd3deb0d_0",
   "importlib_metadata 3.3.0 hd8ed1ab_3",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "python_abi 3.8 1_cp38",
   "libssh2 1.9.0 h8a08a2b_5",
   "pip 20.3.3 pyhd8ed1ab_0",
   "pkginfo 1.6.1 pyh9f0ad1d_0",
   "readline 8.0 h0678c8f_2",
   "ripgrep 12.1.1 haf1e3a3_1",
   "conda 4.9.2 py38h50d1736_0",
   "pytz 2020.5 pyhd8ed1ab_0",
   "pycosat 0.6.3 py38h94c058a_1005",
   "python 3.8.6 h624753d_4_cpython",
   "yaml 0.2.5 haf1e3a3_0",
   "oniguruma 6.9.3 hc929b4f_0",
   "openssl 1.1.1i h35c211d_0",
   "libarchive 3.5.1 h0a5793d_1",
   "pyrsistent 0.17.3 py38h5406a74_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "bzip2 1.0.8 hc929b4f_4",
   "conda-forge-ci-setup 3.6.3 py38he866dac_0",
   "clyent 1.2.2 py_1",
   "sqlite 3.34.0 h17101e1_0",
   "conda-package-handling 1.7.2 py38h94c058a_0",
   "importlib-metadata 3.3.0 py38h50d1736_3",
   "pysocks 1.7.1 py38h5347e94_2",
   "lz4-c 1.9.3 h046ec9c_0",
   "zipp 3.4.0 py_0",
   "python-libarchive-c 2.9 py38h5347e94_2",
   "libnghttp2 1.41.0 h7580e61_2",
   "ipython_genutils 0.2.0 py_1",
   "krb5 1.17.2 h60d9502_0",
   "lzo 2.10 haf1e3a3_1000",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "urllib3 1.26.2 pyhd8ed1ab_0",
   "jupyter_core 4.7.0 py38h50d1736_0",
   "icu 68.1 h74dc148_0",
   "setuptools 49.6.0 py38h5347e94_2"
  ],
  "summary": "Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "bzip2": "1",
  "c_compiler": "clang",
  "c_compiler_version": "10",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "bzip2": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/genocat",
  "bin/genols",
  "bin/genounzip",
  "bin/genozip"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h976738d_0",
  "build_number": 0,
  "depends": [
   "bzip2 >=1.0.8,<2.0a0",
   "curl"
  ],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "name": "genozip",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1610238616209,
  "version": "10.0.8"
 },
 "metadata_version": 1,
 "name": "genozip",
 "raw_recipe": "{% set version = \"10.0.8\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: genozip\n  version: {{ version }}\n\nsource:\n  url: https://github.com/divonlan/genozip/archive/genozip-{{ version }}.tar.gz\n  sha256: c1688a25f08c951ba89314be5c7f5ec04dc6ea951ebeea07ed977026843ba1c0\n \nbuild:\n  skip: True  # [win]\n  number: 0\n\nrequirements:\n  build:    \n    - {{ compiler('c') }}        # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{posix}}make\n    - {{posix}}sed               # [win]\n    - {{posix}}coreutils         # [win]\n    - bzip2\n  host:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n  run:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n    - curl\n\ntest:\n\n  commands:\n    {% set genozip_executables = [\n      \"genozip\",\n      \"genounzip\",\n      \"genocat\",\n      \"genols\"\n    ] %}\n    - genozip --help\n\nabout:\n  home: https://github.com/divonlan/genozip\n  dev_url: https://github.com/divonlan/genozip\n  license: CUSTOM\n  license_family: OTHER\n  license_file: \n    - LICENSE.non-commercial.txt\n    - LICENSE.commercial.txt\n  summary: Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too\n  description: |\n    Genozip\n    \n    (available on Conda, Docker Hub and https://github.com/divonlan/genozip)\n    \n    Genozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. It can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --help=input').\n    \n    The compression ratio depends on the data being compressed, and you can usually expect about a 1.5-3X ratio when compressing .bam, 2X-5X for .fastq.gz files (i.e. compressing already-compressed files), and up to 200X when compressing an uncompressed high-sample-count .vcf file with only GT data.\n    \n    Sign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n    \n    The compression is lossless - the decompressed file is 100% identical to the original file.\n    Notes: \n    1. Losslessness when the original file is already compressed (with .gz, .bz2 or .xz as well as .bam) is relative to the underlying uncompressed file. If the original file was compressed with BGZF (as in BAM and most genomic files with a .gz extension) - genounzip will re-compresses the file with BGZF upon decompression (unless --plain is specified), and, further, it will attempt to recover the exact same BGZF compression as in the original file. However, sometimes exact-same BGZF compression is not possible due to different libraries used.\n    2. The one exception to Genozip's strict losslessness is when using the --optimize option which is lossy (see --help for details)\n    \n    The command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n    \n    Commands: \n    genozip   - compress one or more files \n    genounzip - decompress one or more files \n    genols    - show metadata of one or more files or the entire directory \n    genocat   - view one or more files \n    \n    Some examples:\n    \n    Creating a reference file:\n    genozip --make-reference myfasta.fa\n    \n    Compressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\n    genozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\n    genozip --reference myfasta.ref.genozip mysample.bam\n    genozip --reference myfasta.ref.genozip mysamples.vcf.gz\n    genozip --reference myfasta.ref.genozip *     \u2190compresses all files in the current directory\n    \n    Notes:\n    1. Genozip can compress with or without a reference - using a reference achieves much better compression when compressing FASTQ or unaligned SAM/BAM, and modestly better compression in other cases\n    2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n    3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n    4. Compression of CRAM (but not SAM or BAM) files requires samtools to be installed\n    5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n    \n    Compressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\n    genozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\n    genounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n    \n    Using genozip in a pipline:\n    genocat mysample.sam.genozip | samtools - .....\n    my-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n    \n    Lookups, downsampling and other subsets:\n    genocat --regions chr1:10000-20000 mysamples.vcf.genozip   \u2190displays a specific region\n    genocat --regions ^Y,MT mysample.bam.genozip   \u2190displays all alignments except Y and MT contigs\n    genocat --regions chrM GRCh38.fa.genozip   \u2190displays the sequence of chrM\n    genocat --samples SMPL1,SMPL2 mysamples.vcf.genozip   \u2190displays 2 samples\n    genocat --grep 1101:2392 myreads.fq.genozip   \u2190displays reads that have \"1101:2392\" anywhere in the description\n    genocat --downsample 10 mysample.fq.genozip   \u2190displays 1 in 10 reads\n    Notes:\n    1. --regions works with VCF, SAM/BAM, FASTA, 23andMe, GVF and reference files ; --grep works with FASTQ, FASTA ; --samples works with VCF ; --downsample works with all types\n    2. There is no need for a separate indexing step or index file\n    3. Many more options (see --help for full list): --no-header ; --header-only ; --header-one ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n    \n    Binding mutiple files into a single genozip file and unbinding:\n    genozip *.fq.gz -o all-samples.fq.genozip   \u2190binds all .fq.gz files in the current directory\n    genounzip my-project.fq.genozip --unbind \n    \n    Compressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\n    genozip file.bam --optimize \n    \n    Compressing faster, sacrificing a bit of compression ratio:\n    genozip file.bam --fast \n    \n    Encrypting (256 bit AES):\n    genozip file.vcf --password abc \n    genounzip file.vcf.genozip --password abc \n    \n    Converting SAM/BAM to FASTQ:\n    genounzip file.bam.genozip --fastq\n    \n    Converting 23andMe to VCF:\n    genounzip genome_mydata-Full.txt.genozip --vcf -e GRCh37.ref.genozip\n    \n    Generate a samtools/bcftools index file when uncompressing:\n    genounzip file.bam.genozip --index\n    \n    Calculating the MD5 of the underlying textual file (also included in --test):\n    genozip file.vcf --md5 \n    genounzip file.vcf.genozip --md5 \n    genols file.vcf.genozip\n    \n    Compressing and then verifying that the compressed file decompresses correctly:\n    genozip file.vcf --test \n    \n    Citing\n    Do you find Genozip useful? Please support continued development by citing:\n    Lan, D., et al. Bioinformatics, 36, 4091\u20134092, July 2020, https://doi.org/10.1093/bioinformatics/btaa290\n     \n    Feature requests and bug reports: bugs@genozip.com \n    \n    Genozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com \n    \n    Usage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n    \n    THIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nextra:\n  recipe-maintainers:\n    - divonlan\n",
 "rendered_recipe": {
  "about": {
   "description": "Genozip\n\n(available on Conda, Docker Hub and https://github.com/divonlan/genozip)\n\nGenozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. It can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --help=input').\n\nThe compression ratio depends on the data being compressed, and you can usually expect about a 1.5-3X ratio when compressing .bam, 2X-5X for .fastq.gz files (i.e. compressing already-compressed files), and up to 200X when compressing an uncompressed high-sample-count .vcf file with only GT data.\n\nSign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n\nThe compression is lossless - the decompressed file is 100% identical to the original file.\nNotes:\n1. Losslessness when the original file is already compressed (with .gz, .bz2 or .xz as well as .bam) is relative to the underlying uncompressed file. If the original file was compressed with BGZF (as in BAM and most genomic files with a .gz extension) - genounzip will re-compresses the file with BGZF upon decompression (unless --plain is specified), and, further, it will attempt to recover the exact same BGZF compression as in the original file. However, sometimes exact-same BGZF compression is not possible due to different libraries used.\n2. The one exception to Genozip's strict losslessness is when using the --optimize option which is lossy (see --help for details)\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n\nCommands:\ngenozip   - compress one or more files\ngenounzip - decompress one or more files\ngenols    - show metadata of one or more files or the entire directory\ngenocat   - view one or more files\n\nSome examples:\n\nCreating a reference file:\ngenozip --make-reference myfasta.fa\n\nCompressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\ngenozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\ngenozip --reference myfasta.ref.genozip mysample.bam\ngenozip --reference myfasta.ref.genozip mysamples.vcf.gz\ngenozip --reference myfasta.ref.genozip *     \u2190compresses all files in the current directory\n\nNotes:\n1. Genozip can compress with or without a reference - using a reference achieves much better compression when compressing FASTQ or unaligned SAM/BAM, and modestly better compression in other cases\n2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n4. Compression of CRAM (but not SAM or BAM) files requires samtools to be installed\n5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n\nCompressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\ngenozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\ngenounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n\nUsing genozip in a pipline:\ngenocat mysample.sam.genozip | samtools - .....\nmy-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n\nLookups, downsampling and other subsets:\ngenocat --regions chr1:10000-20000 mysamples.vcf.genozip   \u2190displays a specific region\ngenocat --regions ^Y,MT mysample.bam.genozip   \u2190displays all alignments except Y and MT contigs\ngenocat --regions chrM GRCh38.fa.genozip   \u2190displays the sequence of chrM\ngenocat --samples SMPL1,SMPL2 mysamples.vcf.genozip   \u2190displays 2 samples\ngenocat --grep 1101:2392 myreads.fq.genozip   \u2190displays reads that have \"1101:2392\" anywhere in the description\ngenocat --downsample 10 mysample.fq.genozip   \u2190displays 1 in 10 reads\nNotes:\n1. --regions works with VCF, SAM/BAM, FASTA, 23andMe, GVF and reference files ; --grep works with FASTQ, FASTA ; --samples works with VCF ; --downsample works with all types\n2. There is no need for a separate indexing step or index file\n3. Many more options (see --help for full list): --no-header ; --header-only ; --header-one ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n\nBinding mutiple files into a single genozip file and unbinding:\ngenozip *.fq.gz -o all-samples.fq.genozip   \u2190binds all .fq.gz files in the current directory\ngenounzip my-project.fq.genozip --unbind\n\nCompressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\ngenozip file.bam --optimize\n\nCompressing faster, sacrificing a bit of compression ratio:\ngenozip file.bam --fast\n\nEncrypting (256 bit AES):\ngenozip file.vcf --password abc\ngenounzip file.vcf.genozip --password abc\n\nConverting SAM/BAM to FASTQ:\ngenounzip file.bam.genozip --fastq\n\nConverting 23andMe to VCF:\ngenounzip genome_mydata-Full.txt.genozip --vcf -e GRCh37.ref.genozip\n\nGenerate a samtools/bcftools index file when uncompressing:\ngenounzip file.bam.genozip --index\n\nCalculating the MD5 of the underlying textual file (also included in --test):\ngenozip file.vcf --md5\ngenounzip file.vcf.genozip --md5\ngenols file.vcf.genozip\n\nCompressing and then verifying that the compressed file decompresses correctly:\ngenozip file.vcf --test\n\nCiting\nDo you find Genozip useful? Please support continued development by citing:\nLan, D., et al. Bioinformatics, 36, 4091\u20134092, July 2020, https://doi.org/10.1093/bioinformatics/btaa290\n\nFeature requests and bug reports: bugs@genozip.com\n\nGenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
   "dev_url": "https://github.com/divonlan/genozip",
   "home": "https://github.com/divonlan/genozip",
   "license": "CUSTOM",
   "license_family": "OTHER",
   "license_file": [
    "LICENSE.commercial.txt",
    "LICENSE.non-commercial.txt"
   ],
   "summary": "Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too"
  },
  "build": {
   "number": "0",
   "string": "h976738d_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "package": {
   "name": "genozip",
   "version": "10.0.8"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 hc929b4f_4",
    "cctools_osx-64 949.0.1 h2f0f38f_19",
    "clang 10.0.1 default_hf57f61e_1",
    "clang_osx-64 10.0.1 h05bbb7f_10",
    "clangxx 10.0.1 default_hf57f61e_1",
    "compiler-rt 10.0.1 he6db49b_0",
    "compiler-rt_osx-64 10.0.1 h033240e_0",
    "ld64_osx-64 530 hea264c1_17",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp10 10.0.1 default_hf57f61e_1",
    "libcxx 11.0.0 h4c3b8ed_1",
    "libllvm10 10.0.1 h009f743_3",
    "libllvm11 11.0.0 hf85e3d2_0",
    "llvm-tools 10.0.1 h1341992_3",
    "make 4.3 h22f3db7_1",
    "tapi 1100.0.11 h9ce4665_0",
    "zlib 1.2.11 h7795811_1010"
   ],
   "host": [
    "bzip2 1.0.8 hc929b4f_4"
   ],
   "run": [
    "bzip2 >=1.0.8,<2.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "curl"
   ]
  },
  "source": {
   "sha256": "c1688a25f08c951ba89314be5c7f5ec04dc6ea951ebeea07ed977026843ba1c0",
   "url": "https://github.com/divonlan/genozip/archive/genozip-10.0.8.tar.gz"
  },
  "test": {
   "commands": [
    "genozip --help"
   ]
  }
 },
 "version": "10.0.8"
}