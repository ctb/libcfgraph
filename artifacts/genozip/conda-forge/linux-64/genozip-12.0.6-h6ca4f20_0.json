{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "Genozip\n\n(available on Conda, Docker Hub and https://github.com/divonlan/genozip ; Documentation: http://genozip.com)\n\nGenozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, PHYLIP, Chain, Kraken and 23andMe files.\n\nCiting Do you find Genozip useful? Please cite:\nLan, D., et al. (2021) Genozip: a universal extensible genomic data compressor. Bioinformatics, https://doi.org/10.1093/bioinformatics/btab102\nLan, D., et al. (2020) genozip: a fast and efficient compression tool for VCF files Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n\n\nTypically, a 2X-5X improvement over the existing compression is achieved when compressing already-compressed files like .fastq.gz .bam vcf.gz and much higher ratios in some other cases.\n\nYes, Genozip can compress already-compressed files (.gz .bz2 .xz .bam .cram).\n\nThe compression is lossless - the decompressed file is 100% identical to the original file (see documentation for exceptions).\nSign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, see: http://genozip.com\n\nGenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed on http://genozip.com/license.html\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "dev_url": "https://github.com/divonlan/genozip",
  "doc_url": "https://genozip.com",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "home": "https://genozip.com",
  "identifiers": [],
  "keywords": [],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "license_file": [
   "LICENSE.non-commercial.txt",
   "LICENSE.commercial.txt"
  ],
  "root_pkgs": [
   "tini 0.18.0 h14c3975_1001",
   "libcurl 7.77.0 h2574ce0_0",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_0",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "zipp 3.4.1 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "pysocks 1.7.1 py38h578d9bd_3",
   "setuptools 49.6.0 py38h578d9bd_3",
   "tk 8.6.10 h21135ba_1",
   "ld_impl_linux-64 2.35.1 hea4e1c9_2",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "six 1.16.0 pyh6c4a22f_0",
   "krb5 1.19.1 hcc1bbae_0",
   "icu 68.1 h58526e2_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "libiconv 1.16 h516909a_0",
   "traitlets 5.0.5 py_0",
   "libgomp 9.3.0 h2828fa1_19",
   "wheel 0.36.2 pyhd3deb0d_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "yaml 0.2.5 h516909a_0",
   "_libgcc_mutex 0.1 conda_forge",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "libxml2 2.9.12 h72842e0_0",
   "python 3.8.10 h49503c6_1_cpython",
   "zlib 1.2.11 h516909a_1010",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "ncurses 6.2 h58526e2_4",
   "libssh2 1.9.0 ha56f1ee_6",
   "py-lief 0.11.5 py38h709712a_0",
   "curl 7.77.0 hea6ffbf_0",
   "libev 4.33 h516909a_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "importlib-metadata 4.4.0 py38h578d9bd_0",
   "readline 8.1 h46c0cb4_0",
   "perl 5.32.0 h36c2ea0_0",
   "libffi 3.3 h58526e2_2",
   "pytz 2021.1 pyhd8ed1ab_0",
   "python-dateutil 2.8.1 py_0",
   "ca-certificates 2021.5.30 ha878542_0",
   "python_abi 3.8 1_cp38",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "git 2.30.2 pl5320h24fefe6_1",
   "su-exec 0.2 h516909a_1002",
   "chardet 4.0.0 py38h578d9bd_1",
   "libgcc-ng 9.3.0 h2828fa1_19",
   "_openmp_mutex 4.5 1_gnu",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "ipython_genutils 0.2.0 py_1",
   "c-ares 1.17.1 h7f98852_1",
   "tqdm 4.61.0 pyhd8ed1ab_0",
   "zstd 1.5.0 ha95c52a_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "markupsafe 2.0.1 py38h497a2fe_0",
   "sqlite 3.35.5 h74cdb3f_0",
   "cryptography 3.4.7 py38ha5dfef3_0",
   "patchelf 0.11 he1b5a44_0",
   "certifi 2021.5.30 py38h578d9bd_0",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "patch 2.7.6 h7f98852_1002",
   "soupsieve 2.0.1 py_1",
   "pycparser 2.20 pyh9f0ad1d_2",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libstdcxx-ng 9.3.0 h6de172a_19",
   "xz 5.2.5 h516909a_1",
   "urllib3 1.26.5 pyhd8ed1ab_0",
   "python-libarchive-c 3.1 py38h578d9bd_0",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "libnghttp2 1.43.0 h812cca2_0",
   "openssl 1.1.1k h7f98852_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "idna 2.10 pyh9f0ad1d_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "conda-package-handling 1.7.3 py38h497a2fe_0",
   "libarchive 3.5.1 hccf745f_2",
   "gettext 0.19.8.1 h0b5b191_1005",
   "bzip2 1.0.8 h7f98852_4",
   "clyent 1.2.2 py_1",
   "pcre 8.44 he1b5a44_0",
   "expat 2.4.1 h9c3ff4c_0",
   "cffi 1.14.5 py38ha65f79e_0",
   "lzo 2.10 h516909a_1000",
   "glob2 0.7 py_0",
   "ripgrep 12.1.1 h516909a_1",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.9.6 py38h7bc8238_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.1 py38h578d9bd_0",
   "conda 4.10.3 py38h578d9bd_0",
   "jq 1.6 h36c2ea0_1000",
   "pip 21.1.3 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h7f98852_0"
  ],
  "summary": "Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "bzip2": "1",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "bzip2": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/genocat",
  "bin/genols",
  "bin/genounzip",
  "bin/genozip"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h6ca4f20_0",
  "build_number": 0,
  "depends": [
   "bzip2 >=1.0.8,<2.0a0",
   "curl",
   "libgcc-ng >=7.5.0"
  ],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "name": "genozip",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1626277845535,
  "version": "12.0.6"
 },
 "metadata_version": 1,
 "name": "genozip",
 "raw_recipe": "{% set version = \"12.0.6\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: genozip\n  version: {{ version }}\n\nsource:\n  url: https://github.com/divonlan/genozip/archive/genozip-{{ version }}.tar.gz\n  sha256: 373469a244e4e178480a72e7ecd5345d7c92aabf97d4d0fa8c61c9ca9ff321c1\n \nbuild:\n  skip: True  # [win]\n  number: 0\n\nrequirements:\n  build:    \n    - {{ compiler('c') }}        # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{posix}}make\n    - {{posix}}sed               # [win]\n    - {{posix}}coreutils         # [win]\n    - bzip2\n  host:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n  run:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n    - curl\n\ntest:\n\n  commands:\n    {% set genozip_executables = [\n      \"genozip\",\n      \"genounzip\",\n      \"genocat\",\n      \"genols\"\n    ] %}\n    - genozip --help\n\nabout:\n  home: https://genozip.com\n  dev_url: https://github.com/divonlan/genozip\n  doc_url: https://genozip.com\n  license: CUSTOM\n  license_family: OTHER\n  license_file: \n    - LICENSE.non-commercial.txt\n    - LICENSE.commercial.txt\n  summary: Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too\n  description: |\n    Genozip\n    \n    (available on Conda, Docker Hub and https://github.com/divonlan/genozip ; Documentation: http://genozip.com)\n    \n    Genozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, PHYLIP, Chain, Kraken and 23andMe files.\n    \n    Citing Do you find Genozip useful? Please cite:\n    Lan, D., et al. (2021) Genozip: a universal extensible genomic data compressor. Bioinformatics, https://doi.org/10.1093/bioinformatics/btab102\n    Lan, D., et al. (2020) genozip: a fast and efficient compression tool for VCF files Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n    \n     \n    Typically, a 2X-5X improvement over the existing compression is achieved when compressing already-compressed files like .fastq.gz .bam vcf.gz and much higher ratios in some other cases. \n     \n    Yes, Genozip can compress already-compressed files (.gz .bz2 .xz .bam .cram). \n     \n    The compression is lossless - the decompressed file is 100% identical to the original file (see documentation for exceptions). \n    Sign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n    \n    The command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, see: http://genozip.com\n    \n    Genozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com \n    \n    Usage is subject to terms and conditions. The non-commercial license can be viewed on http://genozip.com/license.html\n    \n    THIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nextra:\n  recipe-maintainers:\n    - divonlan\n",
 "rendered_recipe": {
  "about": {
   "description": "Genozip\n\n(available on Conda, Docker Hub and https://github.com/divonlan/genozip ; Documentation: http://genozip.com)\n\nGenozip is a compressor for genomic files - while it can compress any file (i.e. not only genomic files), it is optimized to compress FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, PHYLIP, Chain, Kraken and 23andMe files.\n\nCiting Do you find Genozip useful? Please cite:\nLan, D., et al. (2021) Genozip: a universal extensible genomic data compressor. Bioinformatics, https://doi.org/10.1093/bioinformatics/btab102\nLan, D., et al. (2020) genozip: a fast and efficient compression tool for VCF files Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n\n\nTypically, a 2X-5X improvement over the existing compression is achieved when compressing already-compressed files like .fastq.gz .bam vcf.gz and much higher ratios in some other cases.\n\nYes, Genozip can compress already-compressed files (.gz .bz2 .xz .bam .cram).\n\nThe compression is lossless - the decompressed file is 100% identical to the original file (see documentation for exceptions).\nSign up to receive low-frequency updates related to Genozip: https://tinyurl.com/genozip\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, see: http://genozip.com\n\nGenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed on http://genozip.com/license.html\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
   "dev_url": "https://github.com/divonlan/genozip",
   "doc_url": "https://genozip.com",
   "home": "https://genozip.com",
   "license": "CUSTOM",
   "license_family": "OTHER",
   "license_file": [
    "LICENSE.commercial.txt",
    "LICENSE.non-commercial.txt"
   ],
   "summary": "Compressor for genomic files (FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF, 23andMe), up to 5x better than gzip and faster too"
  },
  "build": {
   "number": "0",
   "string": "h6ca4f20_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "package": {
   "name": "genozip",
   "version": "12.0.6"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_1",
    "binutils_linux-64 2.36 hf3e587d_31",
    "bzip2 1.0.8 h7f98852_4",
    "gcc_impl_linux-64 7.5.0 hda68d29_13",
    "gcc_linux-64 7.5.0 h47867f9_31",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "ld_impl_linux-64 2.36.1 hea4e1c9_1",
    "libgcc-ng 9.3.0 h2828fa1_19",
    "libgomp 9.3.0 h2828fa1_19",
    "libstdcxx-ng 9.3.0 h6de172a_19",
    "make 4.3 hd18ef5c_1",
    "sysroot_linux-64 2.12 h77966d4_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "libgcc-ng 9.3.0 h2828fa1_19",
    "libgomp 9.3.0 h2828fa1_19"
   ],
   "run": [
    "bzip2 >=1.0.8,<2.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "curl",
    "libgcc-ng >=7.5.0"
   ]
  },
  "source": {
   "sha256": "373469a244e4e178480a72e7ecd5345d7c92aabf97d4d0fa8c61c9ca9ff321c1",
   "url": "https://github.com/divonlan/genozip/archive/genozip-12.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "genozip --help"
   ]
  }
 },
 "version": "12.0.6"
}