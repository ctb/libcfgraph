{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "GNU Radio is a free software development toolkit that provides the signal processing runtime and processing blocks to implement software radios using readily-available, low-cost external RF hardware and commodity processors. It is widely used in hobbyist, academic and commercial environments to support wireless communications research as well as to implement real-world radio systems.\nGNU Radio applications are primarily written using the Python programming language, while the supplied, performance-critical signal processing path is implemented in C++ using processor floating point extensions where available. Thus, the developer is able to implement real-time, high- throughput radio systems in a simple-to-use, rapid-application-development environment.\n",
  "dev_url": "https://github.com/gnuradio/gnuradio",
  "doc_url": "https://gnuradio.org/doc/doxygen/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://gnuradio.org/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "COPYING",
  "root_pkgs": [
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "brotlipy 0.7.0 py36h68aa20f_1001",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2021.5.30 h5b45459_0",
   "certifi 2021.5.30 py36ha15d459_0",
   "cffi 1.14.6 py36he58ceb7_1",
   "chardet 4.0.0 py36ha15d459_1",
   "charset-normalizer 2.0.4 pyhd3eb1b0_0",
   "click 8.0.1 py36ha15d459_0",
   "clyent 1.2.2 py_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "conda 4.10.3 py36ha15d459_2",
   "conda-build 3.21.4 py36ha15d459_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.11.1 py36h41985cd_0",
   "conda-package-handling 1.7.3 py36hb5e345e_0",
   "console_shortcut 0.1.1 4",
   "cryptography 3.4.7 py36hd0de82c_0",
   "decorator 5.1.0 pyhd8ed1ab_0",
   "filelock 3.3.0 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "idna 3.2 pyhd3eb1b0_0",
   "importlib-metadata 4.8.1 py36ha15d459_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "jsonschema 4.0.1 pyhd8ed1ab_0",
   "jupyter_core 4.8.1 py36ha15d459_0",
   "libarchive 3.5.2 hb45042f_1",
   "libiconv 1.16 he774522_0",
   "liblief 0.11.5 h0e60522_0",
   "libxml2 2.9.12 hf5bbc77_0",
   "libzlib 1.2.11 h8ffe710_1013",
   "lz4-c 1.9.3 h8ffe710_1",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 2.0.1 py36h68aa20f_0",
   "menuinst 1.4.18 py36ha15d459_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "openssl 1.1.1l h8ffe710_0",
   "pip 21.2.4 pyhd8ed1ab_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "powershell_shortcut 0.0.1 3",
   "psutil 5.8.0 py36h68aa20f_1",
   "py-lief 0.11.5 py36he2d232f_0",
   "pycosat 0.6.3 py36h68aa20f_1006",
   "pycparser 2.20 py_2",
   "pyopenssl 20.0.1 pyhd3eb1b0_1",
   "pyrsistent 0.17.3 py36h68aa20f_2",
   "pysocks 1.7.1 py36ha15d459_3",
   "python 3.6.13 h39d44d4_2_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-libarchive-c 3.1 py36ha15d459_0",
   "python_abi 3.6 2_cp36m",
   "pytz 2021.1 pyhd8ed1ab_0",
   "pywin32 301 py36h68aa20f_0",
   "pyyaml 5.4.1 py36h68aa20f_1",
   "requests 2.26.0 pyhd3eb1b0_0",
   "ripgrep 13.0.0 h7f3b576_1",
   "ruamel_yaml 0.15.80 py36h68aa20f_1004",
   "setuptools 58.0.4 py36ha15d459_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyhd3eb1b0_0",
   "soupsieve 2.0.1 py_1",
   "sqlite 3.36.0 h2bbff1b_0",
   "tqdm 4.62.2 pyhd3eb1b0_1",
   "traitlets 4.3.3 pyhd8ed1ab_2",
   "typing_extensions 3.10.0.2 pyha770c72_0",
   "tzdata 2021a h5d7bf9c_0",
   "urllib3 1.26.6 pyhd3eb1b0_1",
   "vc 14.2 h21ff451_1",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.27.29016 h5e58377_2",
   "wheel 0.37.0 pyhd3eb1b0_1",
   "win_inet_pton 1.1.0 py36ha15d459_2",
   "xz 5.2.5 h62dcd97_1",
   "yaml 0.2.5 he774522_0",
   "zipp 3.6.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h8ffe710_1013",
   "zstd 1.5.0 h6255e5f_0"
  ],
  "summary": "The free and open software radio ecosystem",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.74.0",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "codec2": "1.0.0",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fftw": "3",
  "fortran_compiler": "gfortran",
  "gsl": "2.7",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.18",
  "openssl": "1.1.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "fftw": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "qt": {
    "max_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "sqlite": {
    "max_pin": "x"
   },
   "zeromq": {
    "max_pin": "x.x.x"
   }
  },
  "pybind11_abi": "4",
  "python": "3.6.* *_cpython",
  "qt": "5.12",
  "r_base": "3.4",
  "soapysdr": "0.8",
  "sqlite": "3",
  "target_platform": "win-64",
  "uhd": "4.1.0",
  "vc": "14",
  "volk": "2.5",
  "zeromq": "4.3.4",
  "zip_keys": [
   [
    "python",
    "numpy"
   ]
  ]
 },
 "files": [],
 "index": {
  "app_entry": "gnuradio-companion",
  "arch": "x86_64",
  "build": "py36h1f53e60_0",
  "build_number": 0,
  "depends": [
   "adwaita-icon-theme",
   "fftw >=3.3.10,<4.0a0",
   "gnuradio-core 3.9.3.0 py36h1856d23_0",
   "gnuradio-grc 3.9.3.0 py36hccb16c0_0",
   "gnuradio-qtgui 3.9.3.0 py36h722d5eb_0",
   "gnuradio-soapy-intree 3.9.3.0 py36h1c0992e_0",
   "gnuradio-uhd 3.9.3.0 py36h6626968_0",
   "gnuradio-video-sdl 3.9.3.0 py36hccb16c0_0",
   "gnuradio-zeromq 3.9.3.0 py36h0657bbb_0",
   "gsl >=2.7,<2.8.0a0",
   "gtk3 >=3.24.29,<4.0a0",
   "libcodec2 >=1.0.0,<1.1.0a0",
   "libsndfile >=1.0.31,<1.1.0a0",
   "log4cpp >=1.1.3,<1.2.0a0",
   "mpir >=3.0.0,<4.0a0",
   "pybind11-abi 4",
   "pyqt >=5.12.3,<5.13.0a0",
   "python >=3.6,<3.7.0a0",
   "python_abi 3.6.* *_cp36m",
   "qt >=5.12.9,<5.13.0a0",
   "qwt >=6.1.6,<6.2.0a0",
   "sdl >=1.2.15,<1.3.0a0",
   "soapysdr >=0.8.1,<0.9.0a0",
   "uhd >=4.1.0,<4.1.1.0a0",
   "vc >=14.1,<15.0a0",
   "volk >=2.5.0,<2.6.0a0",
   "vs2015_runtime >=14.16.27012",
   "zeromq >=4.3.4,<4.3.5.0a0"
  ],
  "icon": "4d0abfd9f53d2b1bada8a24578229831.png",
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "gnuradio",
  "platform": "win",
  "subdir": "win-64",
  "summary": "GNU Radio Companion",
  "timestamp": 1633393452934,
  "type": "app",
  "version": "3.9.3.0"
 },
 "metadata_version": 1,
 "name": "gnuradio",
 "raw_recipe": "{% set version = \"3.9.3.0\" %}\n\npackage:\n  name: gnuradio\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gnuradio/gnuradio/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 4073ac72524f95fed4bda7dd553cb946f66d2e00bd07c4ae7758f1b787d507e0\n  patches:\n    - 0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch\n    - 0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch\n    - 0003-Use-an-ImageSurface-rather-than-UI-back-end.patch  # [osx]\n    - 0004-grc-Add-aliases-for-sc16-short-and-sc8-byte.patch\n    - 0005-grc-Remove-global_blocks_path-preference-and-use-pre.patch\n    - 0006-grc-Include-scale-factor-when-computing-drawing-area.patch\n    - 0007-runtime-fix-pybind-of-get_tags_in_window.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.8\n    - ninja\n    - patch  # [osx]\n    - pkg-config  # [not win]\n    - thrift-compiler  # [not win]\n    # cross-compilation requirements\n    - python                              # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - pybind11                            # [build_platform != target_platform]\n    - numpy                               # [build_platform != target_platform]\n    # libudev CDT needed to link against libusb through uhd on linux CentOS 6\n    # libusb uses the conda-forge libudev package for CentOS 7\n    - {{ cdt('libudev-devel') }}  # [linux and cdt_name=='cos6']\n    # below are needed to link with Qt for qtgui\n    - {{ cdt('libice') }}  # [linux and not ppc64le]\n    - {{ cdt('libselinux') }}  # [linux and not ppc64le]\n    - {{ cdt('libsm') }}  # [linux and not ppc64le]\n    - {{ cdt('libx11') }}  # [linux and not ppc64le]\n    - {{ cdt('libxau') }}  # [linux and not ppc64le]\n    - {{ cdt('libxcb') }}  # [linux and not ppc64le]\n    - {{ cdt('libxdamage') }}  # [linux and not ppc64le]\n    - {{ cdt('libxext') }}  # [linux and not ppc64le]\n    - {{ cdt('libxfixes') }}  # [linux and not ppc64le]\n    - {{ cdt('libxrender') }}  # [linux and not ppc64le]\n    - {{ cdt('libxxf86vm') }}  # [linux and not ppc64le]\n    - {{ cdt('libuuid') }}  # [linux and not ppc64le]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux and not ppc64le]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux and not ppc64le]\n\n  host:\n    - boost-cpp\n    - click\n    - click-plugins\n    - codec2\n    - fftw\n    - gmp  # [not win]\n    - gsl\n    # blas needed to link with gsl\n    - libcblas  # [linux]\n    - libsndfile\n    - libthrift  # [not win]\n    - log4cpp\n    - mako\n    - mpir  # [win]\n    - numpy\n    - pip  # [win]\n    - pybind11\n    - pybind11-abi\n    - python\n    - six\n    - thrift  # [not win]\n    - volk\n  # gnuradio.audio\n    - alsa-lib  # [linux]\n    - portaudio  # [linux]\n  # gnuradio companion\n    - gtk3\n    - lxml\n    - pygobject\n    - pyyaml\n  # gnuradio.qtgui\n    - pyqt  # [not (ppc64le or arm64)]\n    - qt  # [not (ppc64le or arm64)]\n    - qwt <6.2  # [not (ppc64le or arm64)]\n  # gnuradio soapy\n    - soapysdr\n  # gnuradio.uhd\n    - uhd\n  # gnuradio.video_sdl\n    - sdl\n  # gnuradio.zeromq\n    - cppzmq\n    - zeromq\n\n  run:\n  # this is the metapackage that depends on all the subpackages\n    - {{ pin_subpackage('gnuradio-core', exact=True) }}\n    - {{ pin_subpackage('gnuradio-grc', exact=True) }}\n    - {{ pin_subpackage('gnuradio-qtgui', exact=True) }}  # [not (ppc64le or arm64)]\n    - {{ pin_subpackage('gnuradio-soapy-intree', exact=True) }}\n    - {{ pin_subpackage('gnuradio-uhd', exact=True) }}\n    - {{ pin_subpackage('gnuradio-video-sdl', exact=True) }}\n    - {{ pin_subpackage('gnuradio-zeromq', exact=True) }}\n  # explicitly add python so that build string is generated correctly\n    - python\n\ntest:\n  downstreams:\n    - gnuradio-osmosdr\n    - gnuradio-satellites\n  requires:\n    - sqlite\n  imports:\n    - gnuradio.gr\n    - gnuradio.qtgui  # [not (ppc64le or arm64)]\n    - gnuradio.soapy\n    - gnuradio.uhd\n    - gnuradio.video_sdl\n    - gnuradio.zeromq\n\napp:\n  entry: gnuradio-companion\n  icon: grc-icon.png\n  summary: GNU Radio Companion\n\noutputs:\n  - name: gnuradio-core\n    script: install_core.sh  # [not win]\n    script: install_core.bat  # [win]\n    build:\n      entry_points:\n        - gr_filter_design = gnuradio.filter.filter_design:main  # [win]\n        - gr_modtool = gnuradio.modtool.cli.base:cli  # [win]\n      run_exports:\n        - {{ pin_subpackage('gnuradio-core', max_pin='x.x.x') }}\n        # log4cpp is used in block headers, so everything compiling against\n        # gnuradio-core will almost-definitely need log4cpp at runtime\n        - {{ pin_compatible('log4cpp', max_pin='x.x') }}\n      skip_compile_pyc:\n        - \"*/templates/*.py\"\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - alsa-lib  # [linux]\n        - boost-cpp\n        - codec2\n        - fftw\n        - gmp  # [not win]\n        - gsl\n        - libcblas  # [linux]\n        - libsndfile\n        - libthrift  # [not win]\n        - log4cpp\n        - mpir  # [win]\n        - portaudio  # [linux]\n        - pybind11\n        - pybind11-abi\n        - python\n        - numpy\n        - thrift  # [not win]\n        - volk\n      run:\n        - boost-cpp\n        - click\n        - click-plugins\n        - fftw\n        - mako\n        - menuinst  # [win]\n        - numpy\n        - {{ pin_compatible('portaudio') }}  # [linux]\n        - python\n        # need setuptools because modtool uses pkg_resources\n        - setuptools\n        - six\n        - thrift  # [not win]\n    test:\n      commands:\n        - gnuradio-config-info -v --prefix --sysconfdir --prefsdir --userprefsdir --prefs --builddate --enabled-components --cc --cxx --cflags\n        - gr_modtool --help\n        # run a few example scripts to show that at least some things work\n        - python \"$PREFIX/share/gnuradio/examples/volk_benchmark/volk_math.py\" -L test -N 1e6 -I 3 --all  # [not win]\n        - python \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\volk_benchmark\\\\volk_math.py\" -L test -N 1e6 -I 3 --all  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gr_filter_design.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gr_modtool.exe exit 1  # [win]\n      imports:\n        - gnuradio.analog\n        - gnuradio.audio\n        - gnuradio.blocks\n        - gnuradio.channels\n        - gnuradio.digital\n        - gnuradio.dtv\n        - gnuradio.fec\n        - gnuradio.fft\n        - gnuradio.filter\n        - gnuradio.gr\n        - gnuradio.network\n        - gnuradio.trellis\n        - gnuradio.vocoder\n        - gnuradio.wavelet\n        - pmt\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio core functionality and modules\n  - name: gnuradio-grc\n    script: install_grc.sh  # [not win]\n    script: install_grc.bat  # [win]\n    build:\n      entry_points:\n        - gnuradio-companion = gnuradio.grc.main:main  # [win]\n        - grcc = gnuradio.grc.compiler:main  # [win]\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - gtk3\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - python\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - lxml\n        - menuinst  # [win]\n        - pygobject\n        - python\n        - pyyaml\n    test:\n      commands:\n        - grcc \"$PREFIX/share/gnuradio/examples/metadata/file_metadata_vector_sink.grc\"  # [not win]\n        - python \"%PREFIX%\\\\Library\\\\bin\\\\grcc.py\" \"%PREFIX%\\\\Library\\\\share\\\\gnuradio\\\\examples\\\\metadata\\\\file_metadata_vector_sink.grc\"  # [win]\n        - python file_metadata_vector_sink.py  # [not win]\n        - if not exist %PREFIX%\\\\Scripts\\\\gnuradio-companion.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\grcc.exe exit 1  # [win]\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio Companion graphical flowgraph interface\n  - name: gnuradio-qtgui\n    build:\n      skip: true  # [ppc64le or arm64]\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    script: install_qtgui.sh  # [not win]\n    script: install_qtgui.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - pyqt\n        - python\n        - qt\n        - qwt <6.2\n        - volk\n      run:\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - pyqt\n        - python\n        - {{ pin_compatible('qwt', max_pin='x.x') }}\n    test:\n      imports:\n        - gnuradio.qtgui\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio QT module providing graphical components\n  - name: gnuradio-soapy-intree\n    script: install_soapy.sh  # [not win]\n    script: install_soapy.bat  # [win]\n    build:\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - python\n        - soapysdr\n      run:\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - python\n    test:\n      imports:\n        - gnuradio.soapy\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio SoapySDR module for using a variety of SDR devices\n      description: >\n        This module provides GNU Radio source and sink blocks for a variety of\n        SDR devices using SoapySDR, a generalized C/C++ library which provides\n        abstraction in interfacing with different SDR devices and vendors.\n  - name: gnuradio-uhd\n    script: install_uhd.sh  # [not win]\n    script: install_uhd.bat  # [win]\n    build:\n      entry_points:\n        - uhd_siggen = gnuradio.uhd.uhd_siggen_base:main  # [win]\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - python\n        - uhd\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - python\n    test:\n      commands:\n        - if not exist %PREFIX%\\\\Scripts\\\\uhd_siggen.exe exit 1  # [win]\n      imports:\n        - gnuradio.uhd\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio UHD module for Ettus USRP radios\n  - name: gnuradio-video-sdl\n    script: install_video_sdl.sh  # [not win]\n    script: install_video_sdl.bat  # [win]\n    build:\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - python\n        - sdl\n      run:\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - python\n    test:\n      imports:\n        - gnuradio.video_sdl\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio SDL module providing video components\n  - name: gnuradio-zeromq\n    script: install_zeromq.sh  # [not win]\n    script: install_zeromq.bat  # [win]\n    build:\n      ignore_run_exports_from:\n        # workaround to get host environment solved\n        - openssl\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        # conda-build needs native python to make .pyc files\n        - python  # [build_platform != target_platform]\n      host:\n        - boost-cpp\n        - cppzmq\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - log4cpp\n        # workaround to get host environment solved\n        - openssl\n        - python\n        - zeromq\n      run:\n        - boost-cpp\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n        - python\n        - pyzmq\n    test:\n      imports:\n        - gnuradio.zeromq\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: GNU Radio ZeroMQ module for message passing functionality\n  - name: gnuradio-build-deps\n    build:\n      string: {{ pin_subpackage('gnuradio-core', exact=True).partition(' ')[-1].partition(' ')[-1] }}\n    requirements:\n      host:\n        # need to populate host to get complete build string (why?)\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n      run:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - numpy {{ numpy }}\n        - pip  # [win]\n        - pkg-config\n        - pybind11\n      run_constrained:\n        - {{ pin_subpackage('gnuradio-core', exact=True) }}\n    test:\n      commands:\n        - cmake --help\n    about:\n      home: https://gnuradio.org/\n      doc_url: https://gnuradio.org/doc/doxygen/\n      dev_url: https://github.com/gnuradio/gnuradio\n      license: GPL-3.0-or-later\n      license_family: GPL\n      license_file: COPYING\n      summary: Meta-package for GNU Radio deps used to manually build OOT modules\n      description: >\n        Install this meta-package into an environment with `gnuradio` or\n        `gnuradio-core` in order to be able to build out-of-tree modules\n        manually. DO NOT USE THIS IN CONDA RECIPES.\n  # need an output with a script defined to work-around \"empty\" output detection\n  # with python in both build (due to ninja) and host environments\n  - name: gnuradio\n    script: install_gnuradio.sh  # [not win]\n    script: install_gnuradio.bat  # [win]\n\nabout:\n  home: https://gnuradio.org/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: The free and open software radio ecosystem\n  description: >\n    GNU Radio is a free software development toolkit that provides the signal\n    processing runtime and processing blocks to implement software radios using\n    readily-available, low-cost external RF hardware and commodity processors.\n    It is widely used in hobbyist, academic and commercial environments to\n    support wireless communications research as well as to implement real-world\n    radio systems.\n\n    GNU Radio applications are primarily written using the Python programming\n    language, while the supplied, performance-critical signal processing path\n    is implemented in C++ using processor floating point extensions where\n    available. Thus, the developer is able to implement real-time, high-\n    throughput radio systems in a simple-to-use, rapid-application-development\n    environment.\n\n  doc_url: https://gnuradio.org/doc/doxygen/\n  dev_url: https://github.com/gnuradio/gnuradio\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "GNU Radio is a free software development toolkit that provides the signal processing runtime and processing blocks to implement software radios using readily-available, low-cost external RF hardware and commodity processors. It is widely used in hobbyist, academic and commercial environments to support wireless communications research as well as to implement real-world radio systems.\nGNU Radio applications are primarily written using the Python programming language, while the supplied, performance-critical signal processing path is implemented in C++ using processor floating point extensions where available. Thus, the developer is able to implement real-time, high- throughput radio systems in a simple-to-use, rapid-application-development environment.\n",
   "dev_url": "https://github.com/gnuradio/gnuradio",
   "doc_url": "https://gnuradio.org/doc/doxygen/",
   "home": "https://gnuradio.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "The free and open software radio ecosystem"
  },
  "app": {
   "entry": "gnuradio-companion",
   "icon": "grc-icon.png",
   "summary": "GNU Radio Companion"
  },
  "build": {
   "number": "0",
   "string": "py36h1f53e60_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "gnuradio",
   "version": "3.9.3.0"
  },
  "requirements": {
   "build": [
    "cmake 3.21.3 h39d44d4_0",
    "ninja 1.10.2 h2d74725_1",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vc 14.2 hb210afc_5",
    "vs2015_runtime 14.29.30037 h902a5da_5",
    "vs2017_win-64 19.16.27038 h2e3bad8_2",
    "vswhere 2.8.4 h57928b3_0"
   ],
   "host": [
    "atk-1.0 2.36.0 h7222f49_4",
    "boost-cpp 1.74.0 h5b4e17d_4",
    "brotlipy 0.7.0 py36h68aa20f_1001",
    "bzip2 1.0.8 h8ffe710_4",
    "ca-certificates 2021.5.30 h5b45459_0",
    "cairo 1.16.0 hb19e0ff_1008",
    "certifi 2021.5.30 py36ha15d459_0",
    "cffi 1.14.6 py36he58ceb7_1",
    "chardet 4.0.0 py36ha15d459_1",
    "charset-normalizer 2.0.0 pyhd8ed1ab_0",
    "click 8.0.1 py36ha15d459_0",
    "click-plugins 1.1.1 py_0",
    "codec2 1.0.0 hcd874cb_0",
    "colorama 0.4.4 pyh9f0ad1d_0",
    "cppzmq 4.8.1 h4324990_0",
    "cryptography 3.4.7 py36hd0de82c_0",
    "epoxy 1.5.9 h8d14728_0",
    "fftw 3.3.10 nompi_hb424310_101",
    "font-ttf-dejavu-sans-mono 2.37 hab24e00_0",
    "font-ttf-inconsolata 3.000 h77eed37_0",
    "font-ttf-source-code-pro 2.038 h77eed37_0",
    "font-ttf-ubuntu 0.83 hab24e00_0",
    "fontconfig 2.13.1 h1989441_1005",
    "fonts-conda-ecosystem 1 0",
    "fonts-conda-forge 1 0",
    "freetype 2.10.4 h546665d_1",
    "fribidi 1.0.10 h8d14728_0",
    "g-ir-build-tools 1.70.0 py36h44ce00f_0",
    "g-ir-host-tools 1.70.0 ha27b750_0",
    "gdk-pixbuf 2.42.6 h1c5aac7_0",
    "gettext 0.19.8.1 ha2e2712_1008",
    "glib-tools 2.68.4 h0e60522_1",
    "gobject-introspection 1.70.0 py36h0ac3fc9_0",
    "graphite2 1.3.13 1000",
    "gsl 2.7 hdfb1a43_0",
    "gtk3 3.24.29 h9a703b0_2",
    "harfbuzz 2.9.1 hc601d6f_1",
    "hicolor-icon-theme 0.17 h57928b3_2",
    "icu 68.1 h0e60522_0",
    "idna 3.1 pyhd3deb0d_0",
    "importlib-metadata 4.8.1 py36ha15d459_0",
    "intel-openmp 2021.3.0 h57928b3_3372",
    "jbig 2.1 h8d14728_2003",
    "jpeg 9d h8ffe710_0",
    "lerc 2.2.1 h0e60522_0",
    "libblas 3.9.0 11_win64_mkl",
    "libcblas 3.9.0 11_win64_mkl",
    "libclang 11.1.0 default_h5c34c98_1",
    "libcodec2 1.0.0 hcd874cb_0",
    "libdeflate 1.7 h8ffe710_5",
    "libffi 3.4.2 h0e60522_4",
    "libflac 1.3.3 h0e60522_1",
    "libgirepository 1.70.0 h234efe0_0",
    "libglib 2.68.4 h3be07f2_1",
    "libiconv 1.16 he774522_0",
    "liblapack 3.9.0 11_win64_mkl",
    "libogg 1.3.4 h8ffe710_1",
    "libopus 1.3.1 h8ffe710_1",
    "libpng 1.6.37 h1d00b33_2",
    "libsndfile 1.0.31 h0e60522_1",
    "libsodium 1.0.18 h8d14728_1",
    "libtiff 4.3.0 h0c97f57_1",
    "libusb 1.0.24 h8ffe710_105",
    "libvorbis 1.3.7 h0e60522_0",
    "libxml2 2.9.12 hf5bbc77_0",
    "libxslt 1.1.33 h65864e5_2",
    "libzlib 1.2.11 h8ffe710_1013",
    "log4cpp 1.1.3 h0e60522_1002",
    "lxml 4.6.3 py36hf8cb5f9_0",
    "lz4-c 1.9.3 h8ffe710_1",
    "m2w64-gcc-libgfortran 5.3.0 6",
    "m2w64-gcc-libs 5.3.0 7",
    "m2w64-gcc-libs-core 5.3.0 7",
    "m2w64-gmp 6.1.0 2",
    "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
    "mako 1.1.5 pyhd8ed1ab_0",
    "markupsafe 2.0.1 py36h68aa20f_0",
    "mkl 2021.3.0 hb70f87d_564",
    "mpir 3.0.0 he025d50_1002",
    "msys2-conda-epoch 20160418 1",
    "numpy 1.18.5 py36h4d86e3b_0",
    "openssl 1.1.1l h8ffe710_0",
    "pango 1.48.10 hd84fcdd_1",
    "pcre 8.45 h0e60522_0",
    "pip 21.2.4 pyhd8ed1ab_0",
    "pixman 0.40.0 h8ffe710_0",
    "pkg-config 0.29.2 h2bf4dc2_1008",
    "pybind11 2.7.1 py36he95197e_0",
    "pybind11-abi 4 hd8ed1ab_3",
    "pybind11-global 2.7.1 py36he95197e_0",
    "pycairo 1.20.1 py36h7837e33_0",
    "pycparser 2.20 pyh9f0ad1d_2",
    "pygobject 3.40.1 py36h0ac3fc9_2",
    "pyopenssl 21.0.0 pyhd8ed1ab_0",
    "pyqt 5.12.3 py36ha15d459_7",
    "pyqt-impl 5.12.3 py36he2d232f_7",
    "pyqt5-sip 4.19.18 py36he2d232f_7",
    "pyqtchart 5.12 py36he2d232f_7",
    "pyqtwebengine 5.12.1 py36he2d232f_7",
    "pysocks 1.7.1 py36ha15d459_3",
    "python 3.6.13 h39d44d4_2_cpython",
    "python_abi 3.6 2_cp36m",
    "pyyaml 5.4.1 py36h68aa20f_1",
    "qt 5.12.9 h5909a2a_4",
    "qwt 6.1.6 h552f0f6_0",
    "requests 2.26.0 pyhd8ed1ab_0",
    "ruamel.yaml 0.17.16 py36h68aa20f_0",
    "ruamel.yaml.clib 0.2.2 py36h68aa20f_2",
    "sdl 1.2.15 h13ae965_1",
    "setuptools 58.0.4 py36ha15d459_2",
    "six 1.16.0 pyh6c4a22f_0",
    "soapysdr 0.8.1 py36he95197e_0",
    "sqlite 3.36.0 h8ffe710_2",
    "tbb 2021.3.0 h2d74725_0",
    "typing_extensions 3.10.0.2 pyha770c72_0",
    "ucrt 10.0.20348.0 h57928b3_0",
    "uhd 4.1.0.4 py36hd144146_0",
    "urllib3 1.26.7 pyhd8ed1ab_0",
    "vc 14.2 hb210afc_5",
    "volk 2.5.0 h63175ca_0",
    "vs2015_runtime 14.29.30037 h902a5da_5",
    "wheel 0.37.0 pyhd8ed1ab_1",
    "win_inet_pton 1.1.0 py36ha15d459_2",
    "xz 5.2.5 h62dcd97_1",
    "yaml 0.2.5 he774522_0",
    "zeromq 4.3.4 h0e60522_1",
    "zipp 3.6.0 pyhd8ed1ab_0",
    "zlib 1.2.11 h8ffe710_1013",
    "zstd 1.5.0 h6255e5f_0"
   ],
   "run": [
    "adwaita-icon-theme",
    "fftw >=3.3.10,<4.0a0",
    "gnuradio-core 3.9.3.0 py36h1856d23_0",
    "gnuradio-grc 3.9.3.0 py36hccb16c0_0",
    "gnuradio-qtgui 3.9.3.0 py36h722d5eb_0",
    "gnuradio-soapy-intree 3.9.3.0 py36h1c0992e_0",
    "gnuradio-uhd 3.9.3.0 py36h6626968_0",
    "gnuradio-video-sdl 3.9.3.0 py36hccb16c0_0",
    "gnuradio-zeromq 3.9.3.0 py36h0657bbb_0",
    "gsl >=2.7,<2.8.0a0",
    "gtk3 >=3.24.29,<4.0a0",
    "libcodec2 >=1.0.0,<1.1.0a0",
    "libsndfile >=1.0.31,<1.1.0a0",
    "log4cpp >=1.1.3,<1.2.0a0",
    "mpir >=3.0.0,<4.0a0",
    "pybind11-abi ==4",
    "pyqt >=5.12.3,<5.13.0a0",
    "python >=3.6,<3.7.0a0",
    "python_abi 3.6.* *_cp36m",
    "qt >=5.12.9,<5.13.0a0",
    "qwt >=6.1.6,<6.2.0a0",
    "sdl >=1.2.15,<1.3.0a0",
    "soapysdr >=0.8.1,<0.9.0a0",
    "uhd >=4.1.0,<4.1.1.0a0",
    "vc >=14.1,<15.0a0",
    "volk >=2.5.0,<2.6.0a0",
    "vs2015_runtime >=14.16.27012",
    "zeromq >=4.3.4,<4.3.5.0a0"
   ]
  },
  "source": {
   "patches": [
    "0001-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch",
    "0002-cmake-Don-t-generate-.pyc-and-.pyo-files.patch",
    "0004-grc-Add-aliases-for-sc16-short-and-sc8-byte.patch",
    "0005-grc-Remove-global_blocks_path-preference-and-use-pre.patch",
    "0006-grc-Include-scale-factor-when-computing-drawing-area.patch",
    "0007-runtime-fix-pybind-of-get_tags_in_window.patch"
   ],
   "sha256": "4073ac72524f95fed4bda7dd553cb946f66d2e00bd07c4ae7758f1b787d507e0",
   "url": "https://github.com/gnuradio/gnuradio/archive/refs/tags/v3.9.3.0.tar.gz"
  },
  "test": {
   "downstreams": [
    "gnuradio-osmosdr",
    "gnuradio-satellites"
   ],
   "imports": [
    "gnuradio.gr",
    "gnuradio.qtgui",
    "gnuradio.soapy",
    "gnuradio.uhd",
    "gnuradio.video_sdl",
    "gnuradio.zeromq"
   ],
   "requires": [
    "sqlite >=3.36.0,<4.0a0"
   ]
  }
 },
 "version": "3.9.3.0"
}