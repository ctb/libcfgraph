{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge",
   "https://repo.anaconda.com/pkgs/main"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.9.2",
  "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
  "dev_url": "https://github.com/CompPhysVienna/n2p2",
  "doc_url": "https://compphysvienna.github.io/n2p2/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "home": "https://compphysvienna.github.io/n2p2/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "zstd 1.4.8 ha95c52a_1",
   "zlib 1.2.11 h516909a_1010",
   "importlib_metadata 3.4.0 hd8ed1ab_0",
   "gettext 0.19.8.1 h0b5b191_1005",
   "liblief 0.10.1 he1b5a44_2",
   "ncurses 6.2 h58526e2_4",
   "tk 8.6.10 h21135ba_1",
   "libarchive 3.5.1 h3f442fb_1",
   "anaconda-client 1.7.2 py_0",
   "_openmp_mutex 4.5 1_gnu",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "libgomp 9.3.0 h2828fa1_18",
   "ca-certificates 2020.12.5 ha878542_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "lzo 2.10 h516909a_1000",
   "jupyter_core 4.7.1 py38h578d9bd_0",
   "requests 2.25.1 pyhd3deb0d_0",
   "urllib3 1.26.3 pyhd8ed1ab_0",
   "pyyaml 5.4.1 py38h497a2fe_0",
   "clyent 1.2.2 py_1",
   "libnghttp2 1.43.0 h812cca2_0",
   "expat 2.2.10 h9c3ff4c_0",
   "cryptography 3.3.1 py38h2b97feb_1",
   "libiconv 1.16 h516909a_0",
   "patch 2.7.6 h7f98852_1002",
   "certifi 2020.12.5 py38h578d9bd_1",
   "ipython_genutils 0.2.0 py_1",
   "pip 21.0.1 pyhd8ed1ab_0",
   "yaml 0.2.5 h516909a_0",
   "brotlipy 0.7.0 py38h497a2fe_1001",
   "pcre 8.44 he1b5a44_0",
   "python 3.8.6 hffdb5ce_5_cpython",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "libffi 3.3 h58526e2_2",
   "_libgcc_mutex 0.1 conda_forge",
   "jinja2 2.11.3 pyh44b312d_0",
   "perl 5.32.0 h36c2ea0_0",
   "setuptools 49.6.0 py38h578d9bd_3",
   "pysocks 1.7.1 py38h578d9bd_3",
   "py-lief 0.10.1 py38h348cfbe_2",
   "lz4-c 1.9.3 h9c3ff4c_0",
   "conda 4.9.2 py38h578d9bd_0",
   "libssh2 1.9.0 hab1572f_5",
   "tqdm 4.56.0 pyhd8ed1ab_0",
   "psutil 5.8.0 py38h497a2fe_1",
   "traitlets 5.0.5 py_0",
   "xz 5.2.5 h516909a_1",
   "readline 8.0 he28a2e2_2",
   "soupsieve 2.0.1 py_1",
   "markupsafe 1.1.1 py38h497a2fe_3",
   "pyrsistent 0.17.3 py38h497a2fe_2",
   "idna 2.10 pyh9f0ad1d_0",
   "nbformat 5.1.2 pyhd8ed1ab_1",
   "conda-package-handling 1.7.2 py38h8df0ef7_0",
   "zipp 3.4.0 py_0",
   "c-ares 1.17.1 h36c2ea0_0",
   "su-exec 0.2 h516909a_1002",
   "importlib-metadata 3.4.0 py38h578d9bd_0",
   "curl 7.71.1 he644dc0_8",
   "cffi 1.14.4 py38ha65f79e_1",
   "ruamel_yaml 0.15.80 py38h497a2fe_1004",
   "pycosat 0.6.3 py38h497a2fe_1006",
   "tini 0.18.0 h14c3975_1001",
   "patchelf 0.11 he1b5a44_0",
   "openssl 1.1.1i h7f98852_0",
   "python_abi 3.8 1_cp38",
   "attrs 20.3.0 pyhd3deb0d_0",
   "sqlite 3.34.0 h74cdb3f_0",
   "libev 4.33 h516909a_1",
   "krb5 1.17.2 h926e7f8_0",
   "conda-build 3.21.4 py38h578d9bd_0",
   "ripgrep 12.1.1 h516909a_1",
   "bzip2 1.0.8 h7f98852_4",
   "libstdcxx-ng 9.3.0 h6de172a_18",
   "six 1.15.0 pyh9f0ad1d_0",
   "git 2.30.0 pl5320h014a29a_0",
   "jsonschema 3.2.0 py_2",
   "libcurl 7.71.1 hcdd3856_8",
   "chardet 4.0.0 py38h578d9bd_1",
   "python-libarchive-c 2.9 py38h578d9bd_2",
   "libedit 3.1.20191231 he28a2e2_2",
   "glob2 0.7 py_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "ld_impl_linux-64 2.35.1 hea4e1c9_2",
   "libxml2 2.9.10 h72842e0_3",
   "pkginfo 1.7.0 pyhd8ed1ab_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "libgcc-ng 9.3.0 h2828fa1_18",
   "python-dateutil 2.8.1 py_0",
   "icu 68.1 h58526e2_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-forge-ci-setup 3.7.1 py38hcd7a344_0",
   "oniguruma 6.9.3 h36c2ea0_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "n2p2 - A Neural Network Potential Package",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "gsl": "2.6",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libblas": "3.8 *netlib",
  "libcblas": "3.8 *netlib",
  "lua": "5",
  "mpi": "openmpi",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_73_pypy",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/nnp-comp2",
  "bin/nnp-convert",
  "bin/nnp-cutoff",
  "bin/nnp-dataset",
  "bin/nnp-dist",
  "bin/nnp-norm",
  "bin/nnp-predict",
  "bin/nnp-prune",
  "bin/nnp-scaling",
  "bin/nnp-select",
  "bin/nnp-sfclust",
  "bin/nnp-symfunc",
  "bin/nnp-train",
  "include/Atom.h",
  "include/CompactFunction.h",
  "include/CoreFunction.h",
  "include/CutoffFunction.h",
  "include/Dataset.h",
  "include/Element.h",
  "include/ElementMap.h",
  "include/GradientDescent.h",
  "include/InterfaceLammps.h",
  "include/KalmanFilter.h",
  "include/Log.h",
  "include/Mode.h",
  "include/NeuralNetwork.h",
  "include/Prediction.h",
  "include/Settings.h",
  "include/SetupAnalysis.h",
  "include/Stopwatch.h",
  "include/Structure.h",
  "include/SymFnc.h",
  "include/SymFncBaseComp.h",
  "include/SymFncBaseCompAng.h",
  "include/SymFncBaseCompAngWeighted.h",
  "include/SymFncBaseCutoff.h",
  "include/SymFncBaseExpAng.h",
  "include/SymFncCompAngn.h",
  "include/SymFncCompAngnWeighted.h",
  "include/SymFncCompAngw.h",
  "include/SymFncCompAngwWeighted.h",
  "include/SymFncCompRad.h",
  "include/SymFncCompRadWeighted.h",
  "include/SymFncExpAngn.h",
  "include/SymFncExpAngnWeighted.h",
  "include/SymFncExpAngw.h",
  "include/SymFncExpRad.h",
  "include/SymFncExpRadWeighted.h",
  "include/SymFncStatistics.h",
  "include/SymGrp.h",
  "include/SymGrpBaseComp.h",
  "include/SymGrpBaseCompAng.h",
  "include/SymGrpBaseCompAngWeighted.h",
  "include/SymGrpBaseCutoff.h",
  "include/SymGrpBaseExpAng.h",
  "include/SymGrpCompAngn.h",
  "include/SymGrpCompAngnWeighted.h",
  "include/SymGrpCompAngw.h",
  "include/SymGrpCompAngwWeighted.h",
  "include/SymGrpCompRad.h",
  "include/SymGrpCompRadWeighted.h",
  "include/SymGrpExpAngn.h",
  "include/SymGrpExpAngnWeighted.h",
  "include/SymGrpExpAngw.h",
  "include/SymGrpExpRad.h",
  "include/SymGrpExpRadWeighted.h",
  "include/Training.h",
  "include/Updater.h",
  "include/Vec3D.h",
  "include/mpi-extra.h",
  "include/utility.h",
  "include/version.h",
  "lib/libnnp.so",
  "lib/libnnpif.so",
  "lib/libnnptrain.so",
  "lib/python3.6/site-packages/pynnp.pypy36-pp73-x86_64-linux-gnu.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36hd779cc5_2",
  "build_number": 2,
  "depends": [
   "gsl >=2.6,<2.7.0a0",
   "libblas >=3.8.0,<4.0a0",
   "libcblas >=3.8.0,<4.0a0",
   "libgcc-ng >=9.3.0",
   "libstdcxx-ng >=9.3.0",
   "openmpi >=4.1.0,<5.0a0",
   "pypy3.6 >=7.3.3",
   "python >=3.6,<3.7.0a0",
   "python_abi 3.6 *_pypy36_pp73"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "n2p2",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1613287184508,
  "version": "2.1.0"
 },
 "metadata_version": 1,
 "name": "n2p2",
 "raw_recipe": "{% set name = \"n2p2\" %}\n{% set version = \"2.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CompPhysVienna/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 283c00e9a5b964f4c84a70c5f1cef7167e9b881080b50a221da08799e5ede400\n  patches:\n    - app.patch\n    - cflags.patch\n    - shared.patch\n\nbuild:\n  number: 2\n  skip: True  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - python\n    - cython\n    - {{ mpi }}\n    - libblas\n    - libcblas\n    - gsl\n    - eigen\n  run:\n    - python\n\ntest:\n  imports:\n    - pynnp\n  commands:\n    - test -f ${PREFIX}/bin/nnp-convert\n    - test -f ${PREFIX}/bin/nnp-cutoff\n    - test -f ${PREFIX}/bin/nnp-dist\n    - test -f ${PREFIX}/bin/nnp-predict\n    - test -f ${PREFIX}/bin/nnp-prune\n    - test -f ${PREFIX}/bin/nnp-select\n    - test -f ${PREFIX}/bin/nnp-symfunc\n    - test -f ${PREFIX}/bin/nnp-comp2\n    - test -f ${PREFIX}/bin/nnp-dataset\n    - test -f ${PREFIX}/bin/nnp-norm\n    - test -f ${PREFIX}/bin/nnp-scaling\n    - test -f ${PREFIX}/bin/nnp-train\n\nabout:\n  home: https://compphysvienna.github.io/n2p2/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'n2p2 - A Neural Network Potential Package'\n  description: |\n    This repository (obtain source code here) provides ready-to-use \n    software for high-dimensional neural network potentials in \n    computational physics and chemistry. The methodology behind the \n    Behler-Parinello neural network potentials was first described here:\n    J. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n  doc_url: https://compphysvienna.github.io/n2p2/\n  dev_url: https://github.com/CompPhysVienna/n2p2\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "rendered_recipe": {
  "about": {
   "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
   "dev_url": "https://github.com/CompPhysVienna/n2p2",
   "doc_url": "https://compphysvienna.github.io/n2p2/",
   "home": "https://compphysvienna.github.io/n2p2/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "n2p2 - A Neural Network Potential Package"
  },
  "build": {
   "number": "2",
   "string": "py36hd779cc5_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "package": {
   "name": "n2p2",
   "version": "2.1.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.35.1 h193b22a_2",
    "binutils_linux-64 2.35 hc3fd857_29",
    "gcc_impl_linux-64 9.3.0 h70c0ae5_18",
    "gcc_linux-64 9.3.0 h7247604_29",
    "gxx_impl_linux-64 9.3.0 hd87eabc_18",
    "gxx_linux-64 9.3.0 h0d07fa4_29",
    "kernel-headers_linux-64 2.6.32 h77966d4_13",
    "ld_impl_linux-64 2.35.1 hea4e1c9_2",
    "libgcc-devel_linux-64 9.3.0 h7864c58_18",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgomp 9.3.0 h2828fa1_18",
    "libstdcxx-devel_linux-64 9.3.0 hb016644_18",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "make 4.3 hd18ef5c_1",
    "sysroot_linux-64 2.12 h77966d4_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2020.12.5 ha878542_0",
    "cython 0.29.21 py36ha03b18c_2",
    "eigen 3.3.9 h4bd325d_1",
    "expat 2.2.10 h9c3ff4c_0",
    "gdbm 1.18 h0a1914f_2",
    "gsl 2.6 he838d99_2",
    "libblas 3.8.0 11_h86c2bf4_netlib",
    "libcblas 3.8.0 11_h86c2bf4_netlib",
    "libffi 3.3 h58526e2_2",
    "libgcc-ng 9.3.0 h2828fa1_18",
    "libgfortran-ng 9.3.0 hff62375_18",
    "libgfortran5 9.3.0 hff62375_18",
    "libgomp 9.3.0 h2828fa1_18",
    "libstdcxx-ng 9.3.0 h6de172a_18",
    "mpi 1.0 openmpi",
    "ncurses 6.2 h58526e2_4",
    "openmpi 4.1.0 h9b22176_1",
    "openssl 1.1.1i h7f98852_0",
    "pypy3.6 7.3.3 he1ebe50_3",
    "python 3.6.12 5_73_pypy",
    "python_abi 3.6 1_pypy36_pp73",
    "readline 8.0 he28a2e2_2",
    "sqlite 3.34.0 h74cdb3f_0",
    "tk 8.6.10 h21135ba_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1010"
   ],
   "run": [
    "gsl >=2.6,<2.7.0a0",
    "libblas >=3.8.0,<4.0a0",
    "libcblas >=3.8.0,<4.0a0",
    "libgcc-ng >=9.3.0",
    "libstdcxx-ng >=9.3.0",
    "openmpi >=4.1.0,<5.0a0",
    "pypy3.6 >=7.3.3",
    "python >=3.6,<3.7.0a0",
    "python_abi 3.6 *_pypy36_pp73"
   ]
  },
  "source": {
   "patches": [
    "app.patch",
    "cflags.patch",
    "shared.patch"
   ],
   "sha256": "283c00e9a5b964f4c84a70c5f1cef7167e9b881080b50a221da08799e5ede400",
   "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train"
   ],
   "imports": [
    "pynnp"
   ]
  }
 },
 "version": "2.1.0"
}