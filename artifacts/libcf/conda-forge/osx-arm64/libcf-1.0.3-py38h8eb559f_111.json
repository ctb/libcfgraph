{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge/label/rust_dev",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.4",
  "conda_private": false,
  "conda_version": "4.10.3",
  "description": "By using libcf, a data producer can produce files that conform to the CF\nstandards, without having to write netCDF code to create and decode all\nthe attributes that the CF convention uses to store meta-data. A data consumer\ncan use libcf to read any file which conforms to the CF conventions; the\nfile does not need to be created with libcf to be read by libcf\n",
  "dev_url": "https://sourceforge.net/projects/libcf/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dnadeau4",
    "doutriaux1",
    "xylar",
    "downiec",
    "jasonb5"
   ]
  },
  "home": "http://www.unidata.ucar.edu/software/libcf/",
  "identifiers": [],
  "keywords": [],
  "license": "UCAR/UNIDATA",
  "license_file": "COPYRIGHT",
  "root_pkgs": [
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "pip 21.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "python 3.9.6 hd187cdc_1_cpython",
   "c-ares 1.17.1 h0d85af4_1",
   "jq 1.6 hc929b4f_1000",
   "ncurses 6.2 h2e338ed_4",
   "jinja2 3.0.1 pyhd8ed1ab_0",
   "wheel 0.36.2 pyhd3deb0d_0",
   "pyyaml 5.4.1 py39hcbf5805_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "attrs 21.2.0 pyhd8ed1ab_0",
   "krb5 1.19.1 hcfbf3a7_0",
   "git 2.32.0 pl5321h9a53687_0",
   "soupsieve 2.0.1 py_1",
   "requests 2.26.0 pyhd8ed1ab_0",
   "jupyter_core 4.7.1 py39h6e9494a_0",
   "libcxx 12.0.1 habf9029_0",
   "liblief 0.11.5 he49afe7_0",
   "beautifulsoup4 4.9.3 pyhb0f4dca_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "jsonschema 3.2.0 pyhd8ed1ab_3",
   "libedit 3.1.20191231 h0678c8f_2",
   "zipp 3.5.0 pyhd8ed1ab_0",
   "cryptography 3.4.7 py39ha2c9959_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1004",
   "pycosat 0.6.3 py39h89e85a6_1006",
   "traitlets 5.0.5 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "brotlipy 0.7.0 py39h89e85a6_1001",
   "click 8.0.1 py39h6e9494a_0",
   "perl 5.32.1 0_h0d85af4_perl5",
   "tzdata 2021a he74cb21_1",
   "tk 8.6.10 h0419947_1",
   "xz 5.2.5 haf1e3a3_1",
   "sqlite 3.36.0 h23a322b_0",
   "ripgrep 13.0.0 h244e342_0",
   "importlib-metadata 4.6.1 py39h6e9494a_0",
   "psutil 5.8.0 py39h89e85a6_1",
   "zlib 1.2.11 h7795811_1010",
   "libffi 3.3 h046ec9c_2",
   "markupsafe 2.0.1 py39h89e85a6_0",
   "gettext 0.19.8.1 h7937167_1005",
   "py-lief 0.11.5 py39h9fcab8e_0",
   "pyopenssl 20.0.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39h6e9494a_1",
   "conda-package-handling 1.7.3 py39h89e85a6_0",
   "python-libarchive-c 3.1 py39h6e9494a_0",
   "conda-build 3.21.4 py39h6e9494a_0",
   "pysocks 1.7.1 py39h6e9494a_3",
   "conda 4.10.3 py39h6e9494a_0",
   "openssl 1.1.1k h0d85af4_0",
   "zstd 1.5.0 h582d3a0_0",
   "charset-normalizer 2.0.0 pyhd8ed1ab_0",
   "yaml 0.2.5 haf1e3a3_0",
   "curl 7.77.0 hb861fe1_0",
   "pytz 2021.1 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "libxml2 2.9.12 h93ec3fd_0",
   "setuptools 49.6.0 py39h6e9494a_3",
   "certifi 2021.5.30 py39h6e9494a_0",
   "pkginfo 1.7.1 pyhd8ed1ab_0",
   "bzip2 1.0.8 h0d85af4_4",
   "conda-forge-ci-setup 3.9.6 py39hb0a6171_0",
   "anaconda-client 1.7.2 pyhd8ed1ab_1",
   "libcurl 7.77.0 hf45b732_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libnghttp2 1.43.0 h07e645a_0",
   "clyent 1.2.2 py_1",
   "libarchive 3.5.1 h2b60450_2",
   "pcre2 10.37 ha16e1b2_0",
   "python_abi 3.9 2_cp39",
   "ca-certificates 2021.5.30 h033912b_0",
   "urllib3 1.26.6 pyhd8ed1ab_0",
   "idna 3.1 pyhd3deb0d_0",
   "libssh2 1.9.0 h52ee1ee_6",
   "tqdm 4.61.2 pyhd8ed1ab_1",
   "cffi 1.14.6 py39hb71fe58_0",
   "lz4-c 1.9.3 h046ec9c_0",
   "pyrsistent 0.17.3 py39h89e85a6_2",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 haf1e3a3_1000",
   "expat 2.4.1 he49afe7_0",
   "libev 4.33 haf1e3a3_1",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "icu 68.1 h74dc148_0"
  ],
  "summary": "LibCF library access data files in accordance with the CF Conventions.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "11.0",
  "build_platform": "osx-64",
  "c_compiler": "clang",
  "c_compiler_version": "11",
  "channel_sources": "conda-forge/label/rust_dev,conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "curl": "7",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libnetcdf": "4.8.0",
  "libuuid": "2.32.1",
  "lua": "5",
  "macos_machine": "arm64-apple-darwin20.0.0",
  "numpy": "1.16",
  "openblas": "0.3.*",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "curl": {
    "max_pin": "x"
   },
   "libuuid": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-arm64"
 },
 "files": [
  "include/cf_config.h",
  "include/cflistitem.h",
  "include/libcf.h",
  "include/libcf_gridspec.h",
  "include/libcf_src.h",
  "include/nccf_axis.h",
  "include/nccf_constants.h",
  "include/nccf_coord.h",
  "include/nccf_data.h",
  "include/nccf_errors.h",
  "include/nccf_find_next_indices.h",
  "include/nccf_global.h",
  "include/nccf_grid.h",
  "include/nccf_handle_error.h",
  "include/nccf_host.h",
  "include/nccf_keyvalue.h",
  "include/nccf_mosaic.h",
  "include/nccf_regrid.h",
  "include/nccf_utility_functions.h",
  "include/nccf_varObj.h",
  "lib/libcf.0.dylib",
  "lib/libcf.a",
  "lib/libcf.dylib",
  "lib/libcf_src.0.dylib",
  "lib/libcf_src.a",
  "lib/libcf_src.dylib",
  "lib/python3.8/site-packages/libcf-1.0_beta12-py3.8.egg-info",
  "lib/python3.8/site-packages/pycf/__init__.py",
  "lib/python3.8/site-packages/pycf/generateLibCFConfig.py",
  "lib/python3.8/site-packages/pycf/libCFConfig.py",
  "lib/python3.8/site-packages/pycf/pylibcf.cpython-38-darwin.so",
  "pycf/__init__.py",
  "pycf/libCFConfig.py"
 ],
 "index": {
  "arch": "arm64",
  "build": "py38h8eb559f_111",
  "build_number": 111,
  "depends": [
   "curl >=7.77.0,<8.0a0",
   "libblas * *openblas",
   "libcblas * *openblas",
   "libnetcdf >=4.8.0,<4.8.1.0a0",
   "libuuid >=2.32.1,<3.0a0",
   "openblas",
   "python >=3.8,<3.9.0a0",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "UCAR/UNIDATA",
  "name": "libcf",
  "platform": "osx",
  "subdir": "osx-arm64",
  "timestamp": 1626787215259,
  "version": "1.0.3"
 },
 "metadata_version": 1,
 "name": "libcf",
 "raw_recipe": "{% set name = \"libcf\" %}\n{% set version = \"1.0.3\" %}\n{% set build = 111 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CDAT/libcf/archive/{{ version }}.tar.gz\n  sha256: bf8102f55489fe96cd98e365e0e013837396c84a8c47c8a4eb15ef627817c1c9\n\nbuild:\n  number: {{ build }}\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - python                              # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - make\n    - gnuconfig  # [unix]\n  host:\n    - python\n    - libnetcdf\n    # building with the nompi variant should allow any MPI variant at runtime\n    - libnetcdf * nompi_*\n    - openblas\n    - curl\n    - libuuid\n  run:\n    - python\n    - libnetcdf\n    - curl\n    - libuuid\n    - openblas\n    - libblas * *openblas\n    - libcblas * *openblas\ntest:\n  imports:\n    - pycf\n    - pycf.libCFConfig\n\nabout:\n  home: http://www.unidata.ucar.edu/software/libcf/\n  license: 'UCAR/UNIDATA'\n  license_file: 'COPYRIGHT'\n  summary: 'LibCF library access data files in accordance with the CF Conventions.'\n  description: |\n    By using libcf, a data producer can produce files that conform to the CF\n    standards, without having to write netCDF code to create and decode all\n    the attributes that the CF convention uses to store meta-data. A data consumer\n    can use libcf to read any file which conforms to the CF conventions; the\n    file does not need to be created with libcf to be read by libcf\n  dev_url: https://sourceforge.net/projects/libcf/\n\nextra:\n  recipe-maintainers:\n    - dnadeau4\n    - doutriaux1\n    - xylar\n    - downiec\n    - jasonb5\n",
 "rendered_recipe": {
  "about": {
   "description": "By using libcf, a data producer can produce files that conform to the CF\nstandards, without having to write netCDF code to create and decode all\nthe attributes that the CF convention uses to store meta-data. A data consumer\ncan use libcf to read any file which conforms to the CF conventions; the\nfile does not need to be created with libcf to be read by libcf\n",
   "dev_url": "https://sourceforge.net/projects/libcf/",
   "home": "http://www.unidata.ucar.edu/software/libcf/",
   "license": "UCAR/UNIDATA",
   "license_file": "COPYRIGHT",
   "summary": "LibCF library access data files in accordance with the CF Conventions."
  },
  "build": {
   "number": "111",
   "string": "py38h8eb559f_111"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dnadeau4",
    "doutriaux1",
    "downiec",
    "jasonb5",
    "xylar"
   ]
  },
  "package": {
   "name": "libcf",
   "version": "1.0.3"
  },
  "requirements": {
   "build": [
    "ca-certificates 2021.5.30 h033912b_0",
    "cctools_osx-64 949.0.1 h6407bdd_22",
    "cctools_osx-arm64 949.0.1 h55de48a_22",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-arm64 11.1.0 h40be2b1_2",
    "clangxx 11.1.0 default_he082bbe_1",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "cross-python_osx-arm64 3.8 13_cpython",
    "crossenv 1.0 pyhd8ed1ab_2",
    "gettext 0.19.8.1 h7937167_1005",
    "gnuconfig 2020.11.07 hd8ed1ab_0",
    "ld64_osx-64 530 he8994da_21",
    "ld64_osx-arm64 530 h3681fde_21",
    "ldid 2.1.2 h7660a38_2",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcxx 12.0.1 habf9029_0",
    "libffi 3.3 h046ec9c_2",
    "libiconv 1.16 haf1e3a3_0",
    "libllvm11 11.1.0 hd011deb_2",
    "libllvm12 12.0.1 hd011deb_0",
    "llvm-tools 11.1.0 hd011deb_2",
    "lz4-c 1.9.3 h046ec9c_0",
    "make 4.3 h22f3db7_1",
    "ncurses 6.2 h2e338ed_4",
    "openssl 1.1.1k h0d85af4_0",
    "popt 1.16 h7b079dc_2002",
    "python 3.8.10 h0e5c897_0_cpython",
    "readline 8.1 h05e3726_0",
    "rsync 3.2.3 h0d3f7e0_2",
    "sed 4.7 h3efe00b_1000",
    "sqlite 3.36.0 h23a322b_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.10 h0419947_1",
    "xxhash 0.8.0 h35c211d_3",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h7795811_1010",
    "zstd 1.5.0 h582d3a0_0"
   ],
   "host": [
    "bzip2 1.0.8 h3422bc3_4",
    "c-ares 1.17.1 h27ca646_1",
    "ca-certificates 2021.5.30 h4653dfc_0",
    "curl 7.77.0 hc9c2a80_0",
    "hdf4 4.2.15 h0ef36ac_3",
    "hdf5 1.10.6 nompi_h0fc092c_1114",
    "jpeg 9d h27ca646_0",
    "krb5 1.19.1 hd92b7a7_0",
    "libcurl 7.77.0 h8fe1914_0",
    "libcxx 12.0.1 h168391b_0",
    "libedit 3.1.20191231 hc8eb9b7_2",
    "libev 4.33 h642e427_1",
    "libffi 3.3 h9f76cd9_2",
    "libgfortran 5.0.0.dev0 11_0_1_hf114ba7_22",
    "libgfortran5 11.0.1.dev0 hf114ba7_22",
    "libnetcdf 4.8.0 nompi_hd870bb1_103",
    "libnghttp2 1.43.0 hf3018f0_0",
    "libopenblas 0.3.17 openmp_hf330de4_0",
    "libssh2 1.9.0 hb80f160_6",
    "libuuid 2.32.1 h27ca646_1000",
    "libzip 1.8.0 h3887732_0",
    "llvm-openmp 12.0.1 hf3c4609_0",
    "ncurses 6.2 h9aa5885_4",
    "openblas 0.3.17 openmp_hdb1f584_0",
    "openssl 1.1.1k h27ca646_0",
    "python 3.8.10 hf9733c0_1_cpython",
    "readline 8.1 hedafd6a_0",
    "sqlite 3.36.0 h72a2b83_0",
    "tk 8.6.10 hf7e6567_1",
    "xz 5.2.5 h642e427_1",
    "zlib 1.2.11 h31e879b_1009"
   ],
   "run": [
    "curl >=7.77.0,<8.0a0",
    "libblas * *openblas",
    "libcblas * *openblas",
    "libnetcdf >=4.8.0,<4.8.1.0a0",
    "libuuid >=2.32.1,<3.0a0",
    "libuuid >=2.32.1,<3.0a0",
    "openblas",
    "python >=3.8,<3.9.0a0",
    "python >=3.8,<3.9.0a0",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "sha256": "bf8102f55489fe96cd98e365e0e013837396c84a8c47c8a4eb15ef627817c1c9",
   "url": "https://github.com/CDAT/libcf/archive/1.0.3.tar.gz"
  },
  "test": {
   "imports": [
    "pycf",
    "pycf.libCFConfig"
   ]
  }
 },
 "version": "1.0.3"
}